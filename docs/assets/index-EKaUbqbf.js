var GM=Object.defineProperty;var WM=(o,e,t)=>e in o?GM(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var _n=(o,e,t)=>WM(o,typeof e!="symbol"?e+"":e,t);import XM from"./index-CKmzErBK.js";import{d as cx,s as id,a as Wi,r as Nr,o as ou,b as hx,c as ms,e as Un,f as Dt,t as th,_ as El,n as qM,g as qe,h as Mp,i as Sp,j as au,k as bp,l as Wr,m as Tp,p as cn,q as Ya,w as lt,u as ki,I as YM,v as Io,x as $M,y as ZM,z as jM,A as Wm,B as Xm,M as qi,C as KM,D as JM,E as QM}from"./index-o8FCOWxA.js";function qm(o){if(!o)return null;const e=o.replace(/[a-z]+:\/\/[^/]+/i,"").replace(/\?.*$/i,"").replace(/.*\//g,""),t=e.lastIndexOf(".");return t===-1?null:e.substring(t+1)||null}const Ym=2**30;class ux{get unloadPriorityCallback(){return this._unloadPriorityCallback}set unloadPriorityCallback(e){e.length===1?(console.warn('LRUCache: "unloadPriorityCallback" function has been changed to take two arguments.'),this._unloadPriorityCallback=(t,n)=>{const i=e(t),s=e(n);return i<s?-1:i>s?1:0}):this._unloadPriorityCallback=e}constructor(){this.minSize=6e3,this.maxSize=8e3,this.minBytesSize=.3*Ym,this.maxBytesSize=.4*Ym,this.unloadPercent=.05,this.autoMarkUnused=!0,this.itemSet=new Map,this.itemList=[],this.usedSet=new Set,this.callbacks=new Map,this.unloadingHandle=-1,this.cachedBytes=0,this.bytesMap=new Map,this.loadedSet=new Set,this._unloadPriorityCallback=null,this.computeMemoryUsageCallback=()=>null;const e=this.itemSet;this.defaultPriorityCallback=t=>e.get(t)}isFull(){return this.itemSet.size>=this.maxSize||this.cachedBytes>=this.maxBytesSize}getMemoryUsage(e){return this.bytesMap.get(e)??null}add(e,t){const n=this.itemSet;if(n.has(e)||this.isFull())return!1;const i=this.usedSet,s=this.itemList,r=this.callbacks,a=this.bytesMap;s.push(e),i.add(e),n.set(e,Date.now()),r.set(e,t);const l=this.computeMemoryUsageCallback(e);return this.cachedBytes+=l||0,a.set(e,l),!0}has(e){return this.itemSet.has(e)}remove(e){const t=this.usedSet,n=this.itemSet,i=this.itemList,s=this.bytesMap,r=this.callbacks,a=this.loadedSet;if(n.has(e)){this.cachedBytes-=s.get(e)||0,s.delete(e),r.get(e)(e);const l=i.indexOf(e);return i.splice(l,1),t.delete(e),n.delete(e),r.delete(e),a.delete(e),!0}return!1}setLoaded(e,t){const{itemSet:n,loadedSet:i}=this;n.has(e)&&(t===!0?i.add(e):i.delete(e))}updateMemoryUsage(e){const t=this.itemSet,n=this.bytesMap;if(!t.has(e))return;this.cachedBytes-=n.get(e)||0;const i=this.computeMemoryUsageCallback(e);n.set(e,i),this.cachedBytes+=i}markUsed(e){const t=this.itemSet,n=this.usedSet;t.has(e)&&!n.has(e)&&(t.set(e,Date.now()),n.add(e))}markUnused(e){this.usedSet.delete(e)}markAllUnused(){this.usedSet.clear()}unloadUnusedContent(){const{unloadPercent:e,minSize:t,maxSize:n,itemList:i,itemSet:s,usedSet:r,loadedSet:a,callbacks:l,bytesMap:c,minBytesSize:h,maxBytesSize:u}=this,d=i.length-r.size,f=i.length-a.size,p=Math.max(Math.min(i.length-t,d),0),m=this.cachedBytes-h,g=this.unloadPriorityCallback||this.defaultPriorityCallback;let _=!1;const y=p>0&&d>0||f&&i.length>n;if(d&&this.cachedBytes>h||f&&this.cachedBytes>u||y){i.sort((b,I)=>{const D=r.has(b),U=r.has(I);if(D===U){const O=a.has(b),V=a.has(I);return O===V?-g(b,I):O?1:-1}else return D?1:-1});const x=Math.max(t*e,p*e),S=Math.ceil(Math.min(x,d,p)),T=Math.max(e*m,e*h),w=Math.min(T,m);let E=0,M=0;for(;this.cachedBytes-M>u||i.length-E>n;){const b=i[E],I=c.get(b)||0;if(r.has(b)&&a.has(b)||this.cachedBytes-M-I<u&&i.length-E<=n)break;M+=I,E++}for(;M<w||E<S;){const b=i[E],I=c.get(b)||0;if(r.has(b)||this.cachedBytes-M-I<h&&E>=S)break;M+=I,E++}i.splice(0,E).forEach(b=>{this.cachedBytes-=c.get(b)||0,l.get(b)(b),c.delete(b),s.delete(b),l.delete(b),a.delete(b),r.delete(b)}),_=E<p||M<m&&E<d,_=_&&E>0}_&&(this.unloadingHandle=requestAnimationFrame(()=>this.scheduleUnload()))}scheduleUnload(){cancelAnimationFrame(this.unloadingHandle),this.scheduled||(this.scheduled=!0,queueMicrotask(()=>{this.scheduled=!1,this.unloadUnusedContent()}))}}class $a{get running(){return this.items.length!==0||this.currJobs!==0}constructor(){this.maxJobs=6,this.items=[],this.callbacks=new Map,this.currJobs=0,this.scheduled=!1,this.autoUpdate=!0,this.priorityCallback=()=>{throw new Error("PriorityQueue: PriorityCallback function not defined.")},this.schedulingCallback=e=>{requestAnimationFrame(e)},this._runjobs=()=>{this.scheduled=!1,this.tryRunJobs()}}sort(){const e=this.priorityCallback;this.items.sort(e)}has(e){return this.callbacks.has(e)}add(e,t){return new Promise((n,i)=>{const s=this.items,r=this.callbacks;s.push(e),r.set(e,{callback:t,resolve:n,reject:i}),this.autoUpdate&&this.scheduleJobRun()})}remove(e){const t=this.items,n=this.callbacks,i=t.indexOf(e);i!==-1&&(t.splice(i,1),n.delete(e))}tryRunJobs(){this.sort();const e=this.items,t=this.callbacks,n=this.maxJobs;let i=0;const s=()=>{this.currJobs--,this.autoUpdate&&this.scheduleJobRun()};for(;n>this.currJobs&&e.length>0&&i<n;){this.currJobs++,i++;const r=e.pop(),{callback:a,resolve:l,reject:c}=t.get(r);t.delete(r);let h;try{h=a(r)}catch(u){c(u),s()}h instanceof Promise?h.then(l).catch(c).finally(s):(l(h),s())}}scheduleJobRun(){this.scheduled||(this.schedulingCallback(this._runjobs),this.scheduled=!0)}}const Lo=-1,ss=0,ql=1,sd=2,ol=3,$m=6378137,eS=6356752314245179e-9,Yl={inView:!1,error:1/0,distance:1/0};function dx(o){return o===ol||o===Lo}function Gs(o,e){return o.__lastFrameVisited===e&&o.__used}function wp(o){return o.__childrenProcessed===o.children.length}function Ep(o,e){o.__lastFrameVisited!==e.frameCount&&(o.__lastFrameVisited=e.frameCount,o.__used=!1,o.__inFrustum=!1,o.__isLeaf=!1,o.__visible=!1,o.__active=!1,o.__error=1/0,o.__distanceFromCamera=1/0,o.__childrenWereVisible=!1,o.__allChildrenLoaded=!1,e.calculateTileViewError(o,Yl),o.__inFrustum=Yl.inView,o.__error=Yl.error,o.__distanceFromCamera=Yl.distance)}function fx(o,e){if(e.ensureChildrenArePreprocessed(o),Ep(o,e),kf(o,e),!o.__hasRenderableContent&&wp(o)){const t=o.children;for(let n=0,i=t.length;n<i;n++)fx(t[n],e)}}function px(o,e){if(e.ensureChildrenArePreprocessed(o),Gs(o,e.frameCount)&&(o.__hasContent&&o.__loadingState===ss&&!e.lruCache.isFull()&&e.queueTileForDownload(o),wp(o))){const t=o.children;for(let n=0,i=t.length;n<i;n++)px(t[n],e)}}function kf(o,e){o.__used||(o.__used=!0,e.markTileUsed(o),e.stats.used++,o.__inFrustum===!0&&e.stats.inFrustum++)}function tS(o,e){return!(o.__error<=e.errorTarget||e.maxDepth>0&&o.__depth+1>=e.maxDepth||!wp(o))}function mx(o,e=null,t=null){const n=[];for(n.push(o),n.push(null),n.push(0);n.length>0;){const i=n.pop(),s=n.pop(),r=n.pop();if(e&&e(r,s,i)){t&&t(r,s,i);return}const a=r.children;if(a)for(let l=a.length-1;l>=0;l--)n.push(a[l]),n.push(r),n.push(i+1);t&&t(r,s,i)}}function gx(o,e){if(e.ensureChildrenArePreprocessed(o),Ep(o,e),!o.__inFrustum)return;if(!tS(o,e)){kf(o,e);return}let t=!1,n=!1;const i=o.children;for(let s=0,r=i.length;s<r;s++){const a=i[s];gx(a,e),t=t||Gs(a,e.frameCount),n=n||a.__inFrustum}if(o.refine==="REPLACE"&&!n&&i.length!==0&&!o.__hasUnrenderableContent){o.__inFrustum=!1;return}if(kf(o,e),t&&o.refine==="REPLACE")for(let s=0,r=i.length;s<r;s++){const a=i[s];fx(a,e)}}function _x(o,e){const t=e.frameCount;if(!Gs(o,t))return;const n=o.children;let i=!1;for(let s=0,r=n.length;s<r;s++){const a=n[s];i=i||Gs(a,t)}if(!i)o.__isLeaf=!0;else{let s=!1,r=!0;for(let a=0,l=n.length;a<l;a++){const c=n[a];if(_x(c,e),s=s||c.__wasSetVisible||c.__childrenWereVisible,Gs(c,t)){const h=c.__allChildrenLoaded||c.__hasRenderableContent&&dx(c.__loadingState)||!c.__hasContent&&c.children.length===0||c.__hasUnrenderableContent&&c.__loadingState===Lo;r=r&&h}}o.__childrenWereVisible=s,o.__allChildrenLoaded=r}}function xx(o,e){const t=e.stats;if(!Gs(o,e.frameCount))return;const n=e.lruCache;if(o.__isLeaf){o.__loadingState===ol?(o.__inFrustum&&(o.__visible=!0,t.visible++),o.__active=!0,t.active++):!n.isFull()&&o.__hasContent&&e.queueTileForDownload(o);return}const i=o.children,s=o.__hasContent,r=dx(o.__loadingState)&&s,a=(e.errorTarget+1)*e.errorThreshold,l=o.__error<=a,c=o.__childrenWereVisible,h=o.__allChildrenLoaded;if((l||o.refine==="ADD")&&!r&&!n.isFull()&&s&&e.queueTileForDownload(o),(l&&!h&&!c&&r||o.refine==="ADD"&&r)&&(o.__inFrustum&&(o.__visible=!0,t.visible++),o.__active=!0,t.active++),o.refine==="REPLACE"&&l&&!h)for(let d=0,f=i.length;d<f;d++){const p=i[d];Gs(p,e.frameCount)&&px(p,e)}else for(let d=0,f=i.length;d<f;d++)xx(i[d],e)}function yx(o,e){const t=Gs(o,e.frameCount);if(t||o.__usedLastFrame){let n=!1,i=!1;t?(n=o.__active,e.displayActiveTiles?i=o.__active||o.__visible:i=o.__visible):Ep(o,e),o.__hasRenderableContent&&o.__loadingState===ol&&(o.__wasSetActive!==n&&e.invokeOnePlugin(r=>r.setTileActive&&r.setTileActive(o,n)),o.__wasSetVisible!==i&&e.invokeOnePlugin(r=>r.setTileVisible&&r.setTileVisible(o,i))),o.__wasSetActive=n,o.__wasSetVisible=i,o.__usedLastFrame=t;const s=o.children;for(let r=0,a=s.length;r<a;r++){const l=s[r];yx(l,e)}}}function nS(o){let e=null;return()=>{e===null&&(e=requestAnimationFrame(()=>{e=null,o()}))}}const Zm=Symbol("PLUGIN_REGISTERED"),rd=(o,e)=>o.__depthFromRenderedParent!==e.__depthFromRenderedParent?o.__depthFromRenderedParent>e.__depthFromRenderedParent?-1:1:o.__inFrustum!==e.__inFrustum?o.__inFrustum?1:-1:o.__used!==e.__used?o.__used?1:-1:o.__error!==e.__error?o.__error>e.__error?1:-1:o.__distanceFromCamera!==e.__distanceFromCamera?o.__distanceFromCamera>e.__distanceFromCamera?-1:1:0,iS=(o,e)=>o.__depthFromRenderedParent!==e.__depthFromRenderedParent?o.__depthFromRenderedParent>e.__depthFromRenderedParent?1:-1:o.__loadingState!==e.__loadingState?o.__loadingState>e.__loadingState?-1:1:o.__lastFrameVisited!==e.__lastFrameVisited?o.__lastFrameVisited>e.__lastFrameVisited?-1:1:o.__hasUnrenderableContent!==e.__hasUnrenderableContent?o.__hasUnrenderableContent?-1:1:o.__error!==e.__error?o.__error>e.__error?-1:1:0;class sS{get root(){const e=this.rootTileSet;return e?e.root:null}get loadProgress(){const{stats:e,isLoading:t}=this,n=e.downloading+e.parsing,i=e.inCacheSinceLoad+(t?1:0);return i===0?1:1-n/i}get errorThreshold(){return this._errorThreshold}set errorThreshold(e){console.warn('TilesRenderer: The "errorThreshold" option has been deprecated.'),this._errorThreshold=e}constructor(e=null){this.rootLoadingState=ss,this.rootTileSet=null,this.rootURL=e,this.fetchOptions={},this.plugins=[],this.queuedTiles=[],this.cachedSinceLoadComplete=new Set,this.isLoading=!1;const t=new ux;t.unloadPriorityCallback=iS;const n=new $a;n.maxJobs=10,n.priorityCallback=rd;const i=new $a;i.maxJobs=1,i.priorityCallback=rd;const s=new $a;s.maxJobs=25,s.priorityCallback=rd,s.log=!0,this.visibleTiles=new Set,this.activeTiles=new Set,this.usedSet=new Set,this.lruCache=t,this.downloadQueue=n,this.parseQueue=i,this.processNodeQueue=s,this.stats={inCacheSinceLoad:0,inCache:0,parsing:0,downloading:0,failed:0,inFrustum:0,used:0,active:0,visible:0},this.frameCount=0,this._dispatchNeedsUpdateEvent=nS(()=>{this.dispatchEvent({type:"needs-update"})}),this.errorTarget=16,this._errorThreshold=1/0,this.displayActiveTiles=!1,this.maxDepth=1/0}registerPlugin(e){if(e[Zm]===!0)throw new Error("TilesRendererBase: A plugin can only be registered to a single tile set");const t=this.plugins,n=e.priority||0;let i=t.length;for(let s=0;s<t.length;s++)if((t[s].priority||0)>n){i=s;break}t.splice(i,0,e),e[Zm]=!0,e.init&&e.init(this)}unregisterPlugin(e){const t=this.plugins;if(typeof e=="string"&&(e=this.getPluginByName(name)),t.includes(e)){const n=t.indexOf(e);return t.splice(n,1),e.dispose&&e.dispose(),!0}return!1}getPluginByName(e){return this.plugins.find(t=>t.name===e)||null}traverse(e,t,n=!0){this.root&&mx(this.root,(i,...s)=>(n&&this.ensureChildrenArePreprocessed(i,!0),e?e(i,...s):!1),t)}queueTileForDownload(e){e.__loadingState===ss&&this.queuedTiles.push(e)}markTileUsed(e){this.usedSet.add(e),this.lruCache.markUsed(e)}update(){const{lruCache:e,usedSet:t,stats:n,root:i,downloadQueue:s,parseQueue:r,processNodeQueue:a}=this;if(this.rootLoadingState===ss&&(this.rootLoadingState=ql,this.invokeOnePlugin(h=>h.loadRootTileSet&&h.loadRootTileSet()).then(h=>{this.rootLoadingState=ol,this.rootTileSet=h,this.dispatchEvent({type:"needs-update"}),this.dispatchEvent({type:"load-content"}),this.dispatchEvent({type:"load-tile-set",tileSet:h})}).catch(h=>{this.rootLoadingState=Lo,console.error(h),this.rootTileSet=null,this.dispatchEvent({type:"load-error",tile:null,error:h})})),!i)return;n.inFrustum=0,n.used=0,n.active=0,n.visible=0,this.frameCount++,t.forEach(h=>e.markUnused(h)),t.clear(),gx(i,this),_x(i,this),xx(i,this),yx(i,this);const l=this.queuedTiles;l.sort(e.unloadPriorityCallback);for(let h=0,u=l.length;h<u&&!e.isFull();h++)this.requestTileContents(l[h]);l.length=0,e.scheduleUnload(),(s.running||r.running||a.running)===!1&&this.isLoading===!0&&(this.cachedSinceLoadComplete.clear(),n.inCacheSinceLoad=0,this.dispatchEvent({type:"tiles-load-end"}),this.isLoading=!1)}resetFailedTiles(){this.rootLoadingState===Lo&&(this.rootLoadingState=ss);const e=this.stats;e.failed!==0&&(this.traverse(t=>{t.__loadingState===Lo&&(t.__loadingState=ss)},null,!1),e.failed=0)}dispose(){this.plugins.forEach(n=>{this.unregisterPlugin(n)});const e=this.lruCache,t=[];this.traverse(n=>(t.push(n),!1),null,!1);for(let n=0,i=t.length;n<i;n++)e.remove(t[n]);this.stats={parsing:0,downloading:0,failed:0,inFrustum:0,used:0,active:0,visible:0},this.frameCount=0}dispatchEvent(e){}fetchData(e,t){return fetch(e,t)}parseTile(e,t,n){return null}disposeTile(e){e.__visible&&(this.invokeOnePlugin(t=>t.setTileVisible&&t.setTileVisible(e,!1)),e.__visible=!1),e.__active&&(this.invokeOnePlugin(t=>t.setTileActive&&t.setTileActive(e,!1)),e.__active=!1)}preprocessNode(e,t,n=null){var i;if(e.content&&(!("uri"in e.content)&&"url"in e.content&&(e.content.uri=e.content.url,delete e.content.url),e.content.boundingVolume&&!("box"in e.content.boundingVolume||"sphere"in e.content.boundingVolume||"region"in e.content.boundingVolume)&&delete e.content.boundingVolume),e.parent=n,e.children=e.children||[],(i=e.content)!=null&&i.uri){const s=qm(e.content.uri);e.__hasContent=!0,e.__hasUnrenderableContent=!!(s&&/json$/.test(s)),e.__hasRenderableContent=!e.__hasUnrenderableContent}else e.__hasContent=!1,e.__hasUnrenderableContent=!1,e.__hasRenderableContent=!1;e.__childrenProcessed=0,n&&n.__childrenProcessed++,e.__distanceFromCamera=1/0,e.__error=1/0,e.__inFrustum=!1,e.__isLeaf=!1,e.__usedLastFrame=!1,e.__used=!1,e.__wasSetVisible=!1,e.__visible=!1,e.__childrenWereVisible=!1,e.__allChildrenLoaded=!1,e.__wasSetActive=!1,e.__active=!1,e.__loadingState=ss,n===null?(e.__depth=0,e.__depthFromRenderedParent=e.__hasRenderableContent?1:0,e.refine=e.refine||"REPLACE"):(e.__depth=n.__depth+1,e.__depthFromRenderedParent=n.__depthFromRenderedParent+(e.__hasRenderableContent?1:0),e.refine=e.refine||n.refine),e.__basePath=t,e.__lastFrameVisited=-1,this.invokeAllPlugins(s=>{s!==this&&s.preprocessNode&&s.preprocessNode(e,t,n)})}setTileActive(e,t){t?this.activeTiles.add(e):this.activeTiles.delete(e)}setTileVisible(e,t){t?this.visibleTiles.add(e):this.visibleTiles.delete(e)}calculateTileViewError(e,t){}ensureChildrenArePreprocessed(e,t=!1){const n=e.children;for(let i=0,s=n.length;i<s;i++){const r=n[i];if("__depth"in r)break;t?(this.processNodeQueue.remove(r),this.preprocessNode(r,e.__basePath,e)):this.processNodeQueue.has(r)||this.processNodeQueue.add(r,a=>{this.preprocessNode(a,e.__basePath,e),this._dispatchNeedsUpdateEvent()})}}preprocessTileSet(e,t,n=null){const i=e.asset.version,[s,r]=i.split(".").map(l=>parseInt(l));console.assert(s<=1,"TilesRenderer: asset.version is expected to be a 1.x or a compatible version."),s===1&&r>0&&console.warn("TilesRenderer: tiles versions at 1.1 or higher have limited support. Some new extensions and features may not be supported.");let a=t.replace(/\/[^/]*$/,"");a=new URL(a,window.location.href).toString(),this.preprocessNode(e.root,a,n)}loadRootTileSet(){let e=this.rootURL;return this.invokeAllPlugins(n=>e=n.preprocessURL?n.preprocessURL(e,null):e),this.invokeOnePlugin(n=>n.fetchData&&n.fetchData(e,this.fetchOptions)).then(n=>{if(n.ok)return n.json();throw new Error(`TilesRenderer: Failed to load tileset "${e}" with status ${n.status} : ${n.statusText}`)}).then(n=>(this.preprocessTileSet(n,e),n))}requestTileContents(e){if(e.__loadingState!==ss)return;let t=!1,n=new URL(e.content.uri,e.__basePath+"/").toString();this.invokeAllPlugins(d=>n=d.preprocessURL?d.preprocessURL(n,e):n);const i=this.stats,s=this.lruCache,r=this.downloadQueue,a=this.parseQueue,l=qm(n),c=new AbortController,h=c.signal;if(s.add(e,d=>{c.abort(),t?(d.children.length=0,d.__childrenProcessed=0):this.invokeAllPlugins(f=>{f.disposeTile&&f.disposeTile(d)}),i.inCache--,this.cachedSinceLoadComplete.has(e)&&(this.cachedSinceLoadComplete.delete(e),i.inCacheSinceLoad--),d.__loadingState===ql?i.downloading--:d.__loadingState===sd&&i.parsing--,d.__loadingState=ss,a.remove(d),r.remove(d)}))return this.isLoading||(this.isLoading=!0,this.dispatchEvent({type:"tiles-load-start"})),this.cachedSinceLoadComplete.add(e),i.inCacheSinceLoad++,i.inCache++,i.downloading++,e.__loadingState=ql,r.add(e,d=>h.aborted?Promise.resolve():this.invokeOnePlugin(f=>f.fetchData&&f.fetchData(n,{...this.fetchOptions,signal:h}))).then(d=>{if(!h.aborted){if(d.ok)return l==="json"?d.json():d.arrayBuffer();throw new Error(`Failed to load model with error code ${d.status}`)}}).then(d=>{if(!h.aborted)return i.downloading--,i.parsing++,e.__loadingState=sd,a.add(e,f=>h.aborted?Promise.resolve():l==="json"&&d.root?(this.preprocessTileSet(d,n,e),e.children.push(d.root),t=!0,Promise.resolve()):this.invokeOnePlugin(p=>p.parseTile&&p.parseTile(d,f,l,n,h)))}).then(()=>{h.aborted||(i.parsing--,e.__loadingState=ol,s.setLoaded(e,!0),s.getMemoryUsage(e)===null&&(s.isFull()&&s.computeMemoryUsageCallback(e)>0?s.remove(e):s.updateMemoryUsage(e)),this.dispatchEvent({type:"needs-update"}),this.dispatchEvent({type:"load-content"}),e.cached.scene&&this.dispatchEvent({type:"load-model",scene:e.cached.scene,tile:e}))}).catch(d=>{h.aborted||(d.name!=="AbortError"?(a.remove(e),r.remove(e),e.__loadingState===sd?i.parsing--:e.__loadingState===ql&&i.downloading--,i.failed++,console.error(`TilesRenderer : Failed to load tile at url "${e.content.uri}".`),console.error(d),e.__loadingState=Lo,s.setLoaded(e,!0),this.dispatchEvent({type:"load-error",tile:e,error:d,uri:n})):s.remove(e))})}getAttributions(e=[]){return this.invokeAllPlugins(t=>t!==this&&t.getAttributions&&t.getAttributions(e)),e}invokeOnePlugin(e){const t=[...this.plugins,this];for(let n=0;n<t.length;n++){const i=e(t[n]);if(i)return i}return null}invokeAllPlugins(e){const t=[...this.plugins,this],n=[];for(let i=0;i<t.length;i++){const s=e(t[i]);s&&n.push(s)}return n.length===0?null:Promise.all(n)}}const rS=new TextDecoder;function vx(o){return rS.decode(o)}function Mx(o,e,t,n,i,s){let r;switch(n){case"SCALAR":r=1;break;case"VEC2":r=2;break;case"VEC3":r=3;break;case"VEC4":r=4;break;default:throw new Error(`FeatureTable : Feature type not provided for "${s}".`)}let a;const l=t*r;switch(i){case"BYTE":a=new Int8Array(o,e,l);break;case"UNSIGNED_BYTE":a=new Uint8Array(o,e,l);break;case"SHORT":a=new Int16Array(o,e,l);break;case"UNSIGNED_SHORT":a=new Uint16Array(o,e,l);break;case"INT":a=new Int32Array(o,e,l);break;case"UNSIGNED_INT":a=new Uint32Array(o,e,l);break;case"FLOAT":a=new Float32Array(o,e,l);break;case"DOUBLE":a=new Float64Array(o,e,l);break;default:throw new Error(`FeatureTable : Feature component type not provided for "${s}".`)}return a}class lu{constructor(e,t,n,i){this.buffer=e,this.binOffset=t+n,this.binLength=i;let s=null;if(n!==0){const r=new Uint8Array(e,t,n);s=JSON.parse(vx(r))}else s={};this.header=s}getKeys(){return Object.keys(this.header)}getData(e,t,n=null,i=null){const s=this.header;if(!(e in s))return null;const r=s[e];if(r instanceof Object){if(Array.isArray(r))return r;{const{buffer:a,binOffset:l,binLength:c}=this,h=r.byteOffset||0,u=r.type||i,d=r.componentType||n;if("type"in r&&i&&r.type!==i)throw new Error("FeatureTable: Specified type does not match expected type.");const f=l+h,p=Mx(a,f,t,u,d,e);if(f+p.byteLength>l+c)throw new Error("FeatureTable: Feature data read outside binary body length.");return p}}else return r}getBuffer(e,t){const{buffer:n,binOffset:i}=this;return n.slice(i+e,i+e+t)}}class oS{constructor(e){this.batchTable=e;const t=e.header.extensions["3DTILES_batch_table_hierarchy"];this.classes=t.classes;for(const i of this.classes){const s=i.instances;for(const r in s)i.instances[r]=this._parseProperty(s[r],i.length,r)}if(this.instancesLength=t.instancesLength,this.classIds=this._parseProperty(t.classIds,this.instancesLength,"classIds"),t.parentCounts?this.parentCounts=this._parseProperty(t.parentCounts,this.instancesLength,"parentCounts"):this.parentCounts=new Array(this.instancesLength).fill(1),t.parentIds){const i=this.parentCounts.reduce((s,r)=>s+r,0);this.parentIds=this._parseProperty(t.parentIds,i,"parentIds")}else this.parentIds=null;this.instancesIds=[];const n={};for(const i of this.classIds)n[i]=n[i]??0,this.instancesIds.push(n[i]),n[i]++}_parseProperty(e,t,n){if(Array.isArray(e))return e;{const{buffer:i,binOffset:s}=this.batchTable,r=e.byteOffset,a=e.componentType||"UNSIGNED_SHORT",l=s+r;return Mx(i,l,t,"SCALAR",a,n)}}getDataFromId(e,t={}){const n=this.parentCounts[e];if(this.parentIds&&n>0){let l=0;for(let c=0;c<e;c++)l+=this.parentCounts[c];for(let c=0;c<n;c++){const h=this.parentIds[l+c];h!==e&&this.getDataFromId(h,t)}}const i=this.classIds[e],s=this.classes[i].instances,r=this.classes[i].name,a=this.instancesIds[e];for(const l in s)t[r]=t[r]||{},t[r][l]=s[l][a];return t}}class Ap extends lu{get batchSize(){return console.warn("BatchTable.batchSize has been deprecated and replaced with BatchTable.count."),this.count}constructor(e,t,n,i,s){super(e,n,i,s),this.count=t,this.extensions={};const r=this.header.extensions;r&&r["3DTILES_batch_table_hierarchy"]&&(this.extensions["3DTILES_batch_table_hierarchy"]=new oS(this))}getData(e,t=null,n=null){return console.warn("BatchTable: BatchTable.getData is deprecated. Use BatchTable.getDataFromId to get allproperties for an id or BatchTable.getPropertyArray for getting an array of value for a property."),super.getData(e,this.count,t,n)}getDataFromId(e,t={}){if(e<0||e>=this.count)throw new Error(`BatchTable: id value "${e}" out of bounds for "${this.count}" features number.`);for(const n of this.getKeys())n!=="extensions"&&(t[n]=super.getData(n,this.count)[e]);for(const n in this.extensions){const i=this.extensions[n];i.getDataFromId instanceof Function&&(t[n]=t[n]||{},i.getDataFromId(e,t[n]))}return t}getPropertyArray(e){return super.getData(e,this.count)}}class Al{constructor(){this.fetchOptions={},this.workingPath=""}load(...e){return console.warn('Loader: "load" function has been deprecated in favor of "loadAsync".'),this.loadAsync(...e)}loadAsync(e){return fetch(e,this.fetchOptions).then(t=>{if(!t.ok)throw new Error(`Failed to load file "${e}" with status ${t.status} : ${t.statusText}`);return t.arrayBuffer()}).then(t=>(this.workingPath===""&&(this.workingPath=this.workingPathForURL(e)),this.parse(t)))}resolveExternalURL(e){return/^[^\\/]/.test(e)&&!/^http/.test(e)?this.workingPath+"/"+e:e}workingPathForURL(e){const t=e.split(/[\\/]/g);return t.pop(),t.join("/")+"/"}parse(e){throw new Error("LoaderBase: Parse not implemented.")}}function Go(o){let e;if(o instanceof DataView?e=o:e=new DataView(o),String.fromCharCode(e.getUint8(0))==="{")return null;let t="";for(let n=0;n<4;n++)t+=String.fromCharCode(e.getUint8(n));return t}class aS extends Al{parse(e){const t=new DataView(e),n=Go(t);console.assert(n==="b3dm");const i=t.getUint32(4,!0);console.assert(i===1);const s=t.getUint32(8,!0);console.assert(s===e.byteLength);const r=t.getUint32(12,!0),a=t.getUint32(16,!0),l=t.getUint32(20,!0),c=t.getUint32(24,!0),h=28,u=e.slice(h,h+r+a),d=new lu(u,0,r,a),f=h+r+a,p=e.slice(f,f+l+c),m=new Ap(p,d.getData("BATCH_LENGTH"),0,l,c),g=f+l+c,_=new Uint8Array(e,g,s-g);return{version:i,featureTable:d,batchTable:m,glbBytes:_}}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Cl="176",lS={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},cS={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Sx=0,zf=1,bx=2,hS=3,uS=0,Cp=1,Tx=2,Ni=3,Hi=0,En=1,Pi=2,ds=0,Fr=1,Vf=2,Hf=3,Gf=4,Rp=5,Fs=100,wx=101,Ex=102,Ax=103,Cx=104,Pp=200,Ip=201,Rx=202,Px=203,ch=204,hh=205,Ix=206,Lx=207,Dx=208,Ux=209,Ox=210,Nx=211,Fx=212,Bx=213,kx=214,uh=0,dh=1,fh=2,Xr=3,ph=4,mh=5,gh=6,_h=7,Rl=0,zx=1,Vx=2,fs=0,Hx=1,Gx=2,Wx=3,Xx=4,qx=5,Yx=6,$x=7,Wf="attached",Zx="detached",cu=300,gs=301,Ys=302,al=303,ll=304,aa=306,$s=1e3,Yn=1001,Wo=1002,Gt=1003,hu=1004,dS=1004,Pr=1005,fS=1005,Tt=1006,Fo=1007,pS=1007,fi=1008,jx=1008,Jn=1009,Lp=1010,Dp=1011,Xo=1012,uu=1013,_s=1014,Dn=1015,la=1016,du=1017,fu=1018,qo=1020,Up=35902,Op=1021,Np=1022,wn=1023,Yo=1026,$o=1027,pu=1028,Pl=1029,Il=1030,mu=1031,mS=1032,gu=1033,Za=33776,ja=33777,Ka=33778,Ja=33779,xh=35840,yh=35841,vh=35842,Mh=35843,Sh=36196,bh=37492,Th=37496,wh=37808,Eh=37809,Ah=37810,Ch=37811,Rh=37812,Ph=37813,Ih=37814,Lh=37815,Dh=37816,Uh=37817,Oh=37818,Nh=37819,Fh=37820,Bh=37821,Qa=36492,kh=36494,zh=36495,Fp=36283,Vh=36284,Hh=36285,Gh=36286,Kx=2200,Jx=2201,Qx=2202,Zo=2300,jo=2301,nh=2302,Ir=2400,Lr=2401,cl=2402,_u=2500,Bp=2501,ey=0,kp=1,Wh=2,ty=3200,ny=3201,gS=3202,_S=3203,Js=0,iy=1,ls="",At="srgb",nn="srgb-linear",hl="linear",ft="srgb",xS=0,wr=7680,yS=7681,vS=7682,MS=7683,SS=34055,bS=34056,TS=5386,wS=512,ES=513,AS=514,CS=515,RS=516,PS=517,IS=518,Xf=519,sy=512,ry=513,oy=514,zp=515,ay=516,ly=517,cy=518,hy=519,ul=35044,LS=35048,DS=35040,US=35045,OS=35049,NS=35041,FS=35046,BS=35050,kS=35042,zS="100",qf="300 es",pi=2e3,dl=2001,VS={COMPUTE:"compute",RENDER:"render"},HS={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},GS={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FLAT_FIRST:"flat first",FLAT_EITHER:"flat either"};class en{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,e);e.target=null}}}const rn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let jm=1234567;const Br=Math.PI/180,Ko=180/Math.PI;function Zn(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(rn[o&255]+rn[o>>8&255]+rn[o>>16&255]+rn[o>>24&255]+"-"+rn[e&255]+rn[e>>8&255]+"-"+rn[e>>16&15|64]+rn[e>>24&255]+"-"+rn[t&63|128]+rn[t>>8&255]+"-"+rn[t>>16&255]+rn[t>>24&255]+rn[n&255]+rn[n>>8&255]+rn[n>>16&255]+rn[n>>24&255]).toLowerCase()}function Xe(o,e,t){return Math.max(e,Math.min(t,o))}function Vp(o,e){return(o%e+e)%e}function WS(o,e,t,n,i){return n+(o-e)*(i-n)/(t-e)}function XS(o,e,t){return o!==e?(t-o)/(e-o):0}function el(o,e,t){return(1-t)*o+t*e}function qS(o,e,t,n){return el(o,e,1-Math.exp(-t*n))}function YS(o,e=1){return e-Math.abs(Vp(o,e*2)-e)}function $S(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*(3-2*o))}function ZS(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*o*(o*(o*6-15)+10))}function jS(o,e){return o+Math.floor(Math.random()*(e-o+1))}function KS(o,e){return o+Math.random()*(e-o)}function JS(o){return o*(.5-Math.random())}function QS(o){o!==void 0&&(jm=o);let e=jm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function eb(o){return o*Br}function tb(o){return o*Ko}function nb(o){return(o&o-1)===0&&o!==0}function ib(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function sb(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}function rb(o,e,t,n,i){const s=Math.cos,r=Math.sin,a=s(t/2),l=r(t/2),c=s((e+n)/2),h=r((e+n)/2),u=s((e-n)/2),d=r((e-n)/2),f=s((n-e)/2),p=r((n-e)/2);switch(i){case"XYX":o.set(a*h,l*u,l*d,a*c);break;case"YZY":o.set(l*d,a*h,l*u,a*c);break;case"ZXZ":o.set(l*u,l*d,a*h,a*c);break;case"XZX":o.set(a*h,l*p,l*f,a*c);break;case"YXY":o.set(l*f,a*h,l*p,a*c);break;case"ZYZ":o.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Sn(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return o/4294967295;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int32Array:return Math.max(o/2147483647,-1);case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}function Ye(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return Math.round(o*4294967295);case Uint16Array:return Math.round(o*65535);case Uint8Array:return Math.round(o*255);case Int32Array:return Math.round(o*2147483647);case Int16Array:return Math.round(o*32767);case Int8Array:return Math.round(o*127);default:throw new Error("Invalid component type.")}}const ue={DEG2RAD:Br,RAD2DEG:Ko,generateUUID:Zn,clamp:Xe,euclideanModulo:Vp,mapLinear:WS,inverseLerp:XS,lerp:el,damp:qS,pingpong:YS,smoothstep:$S,smootherstep:ZS,randInt:jS,randFloat:KS,randFloatSpread:JS,seededRandom:QS,degToRad:eb,radToDeg:tb,isPowerOfTwo:nb,ceilPowerOfTwo:ib,floorPowerOfTwo:sb,setQuaternionFromProperEuler:rb,normalize:Ye,denormalize:Sn};class G{constructor(e=0,t=0){G.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Xe(this.x,e.x,t.x),this.y=Xe(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Xe(this.x,e,t),this.y=Xe(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Xe(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Xe(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*n-r*i+e.x,this.y=s*i+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class We{constructor(e,t,n,i,s,r,a,l,c){We.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,a,l,c)}set(e,t,n,i,s,r,a,l,c){const h=this.elements;return h[0]=e,h[1]=i,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=n,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],f=n[5],p=n[8],m=i[0],g=i[3],_=i[6],y=i[1],v=i[4],x=i[7],S=i[2],T=i[5],w=i[8];return s[0]=r*m+a*y+l*S,s[3]=r*g+a*v+l*T,s[6]=r*_+a*x+l*w,s[1]=c*m+h*y+u*S,s[4]=c*g+h*v+u*T,s[7]=c*_+h*x+u*w,s[2]=d*m+f*y+p*S,s[5]=d*g+f*v+p*T,s[8]=d*_+f*x+p*w,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*r*h-t*a*c-n*s*h+n*a*l+i*s*c-i*r*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*r-a*c,d=a*l-h*s,f=c*s-r*l,p=t*u+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=u*m,e[1]=(i*c-h*n)*m,e[2]=(a*n-i*r)*m,e[3]=d*m,e[4]=(h*t-i*l)*m,e[5]=(i*s-a*t)*m,e[6]=f*m,e[7]=(n*l-c*t)*m,e[8]=(r*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,r,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*r+c*a)+r+e,-i*c,i*l,-i*(-c*r+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(od.makeScale(e,t)),this}rotate(e){return this.premultiply(od.makeRotation(-e)),this}translate(e,t){return this.premultiply(od.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const od=new We;function uy(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}const ob={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Do(o,e){return new ob[o](e)}function fl(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function dy(){const o=fl("canvas");return o.style.display="block",o}const Km={};function ih(o){o in Km||(Km[o]=!0,console.warn(o))}function ab(o,e,t){return new Promise(function(n,i){function s(){switch(o.clientWaitSync(e,o.SYNC_FLUSH_COMMANDS_BIT,0)){case o.WAIT_FAILED:i();break;case o.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function lb(o){const e=o.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function cb(o){const e=o.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Jm=new We().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Qm=new We().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function hb(){const o={enabled:!0,workingColorSpace:nn,spaces:{},convert:function(i,s,r){return this.enabled===!1||s===r||!s||!r||(this.spaces[s].transfer===ft&&(i.r=ps(i.r),i.g=ps(i.g),i.b=ps(i.b)),this.spaces[s].primaries!==this.spaces[r].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===ft&&(i.r=Bo(i.r),i.g=Bo(i.g),i.b=Bo(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===ls?hl:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,r){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return o.define({[nn]:{primaries:e,whitePoint:n,transfer:hl,toXYZ:Jm,fromXYZ:Qm,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:At},outputColorSpaceConfig:{drawingBufferColorSpace:At}},[At]:{primaries:e,whitePoint:n,transfer:ft,toXYZ:Jm,fromXYZ:Qm,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:At}}}),o}const Je=hb();function ps(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function Bo(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}let ro;class fy{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{ro===void 0&&(ro=fl("canvas")),ro.width=e.width,ro.height=e.height;const i=ro.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=ro}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=fl("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let r=0;r<s.length;r++)s[r]=ps(s[r]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(ps(t[n]/255)*255):t[n]=ps(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let ub=0;class hs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ub++}),this.uuid=Zn(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let r=0,a=i.length;r<a;r++)i[r].isDataTexture?s.push(ad(i[r].image)):s.push(ad(i[r]))}else s=ad(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function ad(o){return typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap?fy.getDataURL(o):o.data?{data:Array.from(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let db=0;class Mt extends en{constructor(e=Mt.DEFAULT_IMAGE,t=Mt.DEFAULT_MAPPING,n=Yn,i=Yn,s=Tt,r=fi,a=wn,l=Jn,c=Mt.DEFAULT_ANISOTROPY,h=ls){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:db++}),this.uuid=Zn(),this.name="",this.source=new hs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new G(0,0),this.repeat=new G(1,1),this.center=new G(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new We,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isTextureArray=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isTextureArray=e.isTextureArray,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==cu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case $s:e.x=e.x-Math.floor(e.x);break;case Yn:e.x=e.x<0?0:1;break;case Wo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case $s:e.y=e.y-Math.floor(e.y);break;case Yn:e.y=e.y<0?0:1;break;case Wo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Mt.DEFAULT_IMAGE=null;Mt.DEFAULT_MAPPING=cu;Mt.DEFAULT_ANISOTROPY=1;class st{constructor(e=0,t=0,n=0,i=1){st.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*n+r[11]*i+r[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],m=l[2],g=l[6],_=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+m)<.1&&Math.abs(p+g)<.1&&Math.abs(c+f+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(c+1)/2,x=(f+1)/2,S=(_+1)/2,T=(h+d)/4,w=(u+m)/4,E=(p+g)/4;return v>x&&v>S?v<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(v),i=T/n,s=w/n):x>S?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=T/i,s=E/i):S<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(S),n=w/s,i=E/s),this.set(n,i,s,t),this}let y=Math.sqrt((g-p)*(g-p)+(u-m)*(u-m)+(d-h)*(d-h));return Math.abs(y)<.001&&(y=1),this.x=(g-p)/y,this.y=(u-m)/y,this.z=(d-h)/y,this.w=Math.acos((c+f+_-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Xe(this.x,e.x,t.x),this.y=Xe(this.y,e.y,t.y),this.z=Xe(this.z,e.z,t.z),this.w=Xe(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Xe(this.x,e,t),this.y=Xe(this.y,e,t),this.z=Xe(this.z,e,t),this.w=Xe(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Xe(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class xu extends en{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth?n.depth:1,this.scissor=new st(0,0,e,t),this.scissorTest=!1,this.viewport=new st(0,0,e,t);const i={width:e,height:t,depth:this.depth};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Tt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,multiview:!1},n);const s=new Mt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const r=n.count;for(let a=0;a<r;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new hs(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class xi extends xu{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Ll extends Mt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Gt,this.minFilter=Gt,this.wrapR=Yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Yf extends xi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Ll(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class yu extends Mt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Gt,this.minFilter=Gt,this.wrapR=Yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class fb extends xi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new yu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class vt{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,r,a){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const d=s[r+0],f=s[r+1],p=s[r+2],m=s[r+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=m;return}if(u!==m||l!==d||c!==f||h!==p){let g=1-a;const _=l*d+c*f+h*p+u*m,y=_>=0?1:-1,v=1-_*_;if(v>Number.EPSILON){const S=Math.sqrt(v),T=Math.atan2(S,_*y);g=Math.sin(g*T)/S,a=Math.sin(a*T)/S}const x=a*y;if(l=l*g+d*x,c=c*g+f*x,h=h*g+p*x,u=u*g+m*x,g===1-a){const S=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=S,c*=S,h*=S,u*=S}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,s,r){const a=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=s[r],d=s[r+1],f=s[r+2],p=s[r+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,r=e._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(i/2),u=a(s/2),d=l(n/2),f=l(i/2),p=l(s/2);switch(r){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],r=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(r-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(i+r)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(s-c)/f,this._x=(i+r)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(r-i)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Xe(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,r=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=n*h+r*a+i*c-s*l,this._y=i*h+r*l+s*a-n*c,this._z=s*h+r*c+n*l-i*a,this._w=r*h-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,r=this._w;let a=r*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=r*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class A{constructor(e=0,t=0,n=0){A.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(eg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(eg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,r=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,r=e.y,a=e.z,l=e.w,c=2*(r*i-a*n),h=2*(a*t-s*i),u=2*(s*n-r*t);return this.x=t+l*c+r*u-a*h,this.y=n+l*h+a*c-s*u,this.z=i+l*u+s*h-r*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Xe(this.x,e.x,t.x),this.y=Xe(this.y,e.y,t.y),this.z=Xe(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Xe(this.x,e,t),this.y=Xe(this.y,e,t),this.z=Xe(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Xe(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,r=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*r-n*l,this.z=n*a-i*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ld.copy(this).projectOnVector(e),this.sub(ld)}reflect(e){return this.sub(ld.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Xe(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ld=new A,eg=new vt;class Wt{constructor(e=new A(1/0,1/0,1/0),t=new A(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(bi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(bi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=bi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,a=s.count;r<a;r++)e.isMesh===!0?e.getVertexPosition(r,bi):bi.fromBufferAttribute(s,r),bi.applyMatrix4(e.matrixWorld),this.expandByPoint(bi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),$l.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),$l.copy(n.boundingBox)),$l.applyMatrix4(e.matrixWorld),this.union($l)}const i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,bi),bi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(fa),Zl.subVectors(this.max,fa),oo.subVectors(e.a,fa),ao.subVectors(e.b,fa),lo.subVectors(e.c,fa),bs.subVectors(ao,oo),Ts.subVectors(lo,ao),sr.subVectors(oo,lo);let t=[0,-bs.z,bs.y,0,-Ts.z,Ts.y,0,-sr.z,sr.y,bs.z,0,-bs.x,Ts.z,0,-Ts.x,sr.z,0,-sr.x,-bs.y,bs.x,0,-Ts.y,Ts.x,0,-sr.y,sr.x,0];return!cd(t,oo,ao,lo,Zl)||(t=[1,0,0,0,1,0,0,0,1],!cd(t,oo,ao,lo,Zl))?!1:(jl.crossVectors(bs,Ts),t=[jl.x,jl.y,jl.z],cd(t,oo,ao,lo,Zl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,bi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(bi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Yi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Yi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Yi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Yi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Yi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Yi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Yi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Yi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Yi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Yi=[new A,new A,new A,new A,new A,new A,new A,new A],bi=new A,$l=new Wt,oo=new A,ao=new A,lo=new A,bs=new A,Ts=new A,sr=new A,fa=new A,Zl=new A,jl=new A,rr=new A;function cd(o,e,t,n,i){for(let s=0,r=o.length-3;s<=r;s+=3){rr.fromArray(o,s);const a=i.x*Math.abs(rr.x)+i.y*Math.abs(rr.y)+i.z*Math.abs(rr.z),l=e.dot(rr),c=t.dot(rr),h=n.dot(rr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const pb=new Wt,pa=new A,hd=new A;class Ot{constructor(e=new A,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):pb.setFromPoints(e).getCenter(n);let i=0;for(let s=0,r=e.length;s<r;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;pa.subVectors(e,this.center);const t=pa.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(pa,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(hd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(pa.copy(e.center).add(hd)),this.expandByPoint(pa.copy(e.center).sub(hd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const $i=new A,ud=new A,Kl=new A,ws=new A,dd=new A,Jl=new A,fd=new A;class ni{constructor(e=new A,t=new A(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,$i)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=$i.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):($i.copy(this.origin).addScaledVector(this.direction,t),$i.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ud.copy(e).add(t).multiplyScalar(.5),Kl.copy(t).sub(e).normalize(),ws.copy(this.origin).sub(ud);const s=e.distanceTo(t)*.5,r=-this.direction.dot(Kl),a=ws.dot(this.direction),l=-ws.dot(Kl),c=ws.lengthSq(),h=Math.abs(1-r*r);let u,d,f,p;if(h>0)if(u=r*l-a,d=r*a-l,p=s*h,u>=0)if(d>=-p)if(d<=p){const m=1/h;u*=m,d*=m,f=u*(u+r*d+2*a)+d*(r*u+d+2*l)+c}else d=s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-r*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(r*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=r>0?-s:s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(ud).addScaledVector(Kl,d),f}intersectSphere(e,t){$i.subVectors(e.center,this.origin);const n=$i.dot(this.direction),i=$i.dot($i)-n*n,s=e.radius*e.radius;if(i>s)return null;const r=Math.sqrt(s-i),a=n-r,l=n+r;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,r,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),h>=0?(s=(e.min.y-d.y)*h,r=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,r=(e.min.y-d.y)*h),n>r||s>i||((s>n||isNaN(n))&&(n=s),(r<i||isNaN(i))&&(i=r),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,$i)!==null}intersectTriangle(e,t,n,i,s){dd.subVectors(t,e),Jl.subVectors(n,e),fd.crossVectors(dd,Jl);let r=this.direction.dot(fd),a;if(r>0){if(i)return null;a=1}else if(r<0)a=-1,r=-r;else return null;ws.subVectors(this.origin,e);const l=a*this.direction.dot(Jl.crossVectors(ws,Jl));if(l<0)return null;const c=a*this.direction.dot(dd.cross(ws));if(c<0||l+c>r)return null;const h=-a*ws.dot(fd);return h<0?null:this.at(h/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class de{constructor(e,t,n,i,s,r,a,l,c,h,u,d,f,p,m,g){de.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,a,l,c,h,u,d,f,p,m,g)}set(e,t,n,i,s,r,a,l,c,h,u,d,f,p,m,g){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=r,_[9]=a,_[13]=l,_[2]=c,_[6]=h,_[10]=u,_[14]=d,_[3]=f,_[7]=p,_[11]=m,_[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new de().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/co.setFromMatrixColumn(e,0).length(),s=1/co.setFromMatrixColumn(e,1).length(),r=1/co.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,r=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const d=r*h,f=r*u,p=a*h,m=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-m*c,t[9]=-a*l,t[2]=m-d*c,t[6]=p+f*c,t[10]=r*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,m=c*u;t[0]=d+m*a,t[4]=p*a-f,t[8]=r*c,t[1]=r*u,t[5]=r*h,t[9]=-a,t[2]=f*a-p,t[6]=m+d*a,t[10]=r*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,m=c*u;t[0]=d-m*a,t[4]=-r*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=r*h,t[9]=m-d*a,t[2]=-r*c,t[6]=a,t[10]=r*l}else if(e.order==="ZYX"){const d=r*h,f=r*u,p=a*h,m=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+m,t[1]=l*u,t[5]=m*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=r*l}else if(e.order==="YZX"){const d=r*l,f=r*c,p=a*l,m=a*c;t[0]=l*h,t[4]=m-d*u,t[8]=p*u+f,t[1]=u,t[5]=r*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-m*u}else if(e.order==="XZY"){const d=r*l,f=r*c,p=a*l,m=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+m,t[5]=r*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=m*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(mb,e,gb)}lookAt(e,t,n){const i=this.elements;return Hn.subVectors(e,t),Hn.lengthSq()===0&&(Hn.z=1),Hn.normalize(),Es.crossVectors(n,Hn),Es.lengthSq()===0&&(Math.abs(n.z)===1?Hn.x+=1e-4:Hn.z+=1e-4,Hn.normalize(),Es.crossVectors(n,Hn)),Es.normalize(),Ql.crossVectors(Hn,Es),i[0]=Es.x,i[4]=Ql.x,i[8]=Hn.x,i[1]=Es.y,i[5]=Ql.y,i[9]=Hn.y,i[2]=Es.z,i[6]=Ql.z,i[10]=Hn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],f=n[13],p=n[2],m=n[6],g=n[10],_=n[14],y=n[3],v=n[7],x=n[11],S=n[15],T=i[0],w=i[4],E=i[8],M=i[12],b=i[1],I=i[5],D=i[9],U=i[13],O=i[2],V=i[6],F=i[10],$=i[14],H=i[3],te=i[7],ne=i[11],se=i[15];return s[0]=r*T+a*b+l*O+c*H,s[4]=r*w+a*I+l*V+c*te,s[8]=r*E+a*D+l*F+c*ne,s[12]=r*M+a*U+l*$+c*se,s[1]=h*T+u*b+d*O+f*H,s[5]=h*w+u*I+d*V+f*te,s[9]=h*E+u*D+d*F+f*ne,s[13]=h*M+u*U+d*$+f*se,s[2]=p*T+m*b+g*O+_*H,s[6]=p*w+m*I+g*V+_*te,s[10]=p*E+m*D+g*F+_*ne,s[14]=p*M+m*U+g*$+_*se,s[3]=y*T+v*b+x*O+S*H,s[7]=y*w+v*I+x*V+S*te,s[11]=y*E+v*D+x*F+S*ne,s[15]=y*M+v*U+x*$+S*se,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],r=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],m=e[7],g=e[11],_=e[15];return p*(+s*l*u-i*c*u-s*a*d+n*c*d+i*a*f-n*l*f)+m*(+t*l*f-t*c*d+s*r*d-i*r*f+i*c*h-s*l*h)+g*(+t*c*u-t*a*f-s*r*u+n*r*f+s*a*h-n*c*h)+_*(-i*a*h-t*l*u+t*a*d+i*r*u-n*r*d+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],_=e[15],y=u*g*c-m*d*c+m*l*f-a*g*f-u*l*_+a*d*_,v=p*d*c-h*g*c-p*l*f+r*g*f+h*l*_-r*d*_,x=h*m*c-p*u*c+p*a*f-r*m*f-h*a*_+r*u*_,S=p*u*l-h*m*l-p*a*d+r*m*d+h*a*g-r*u*g,T=t*y+n*v+i*x+s*S;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/T;return e[0]=y*w,e[1]=(m*d*s-u*g*s-m*i*f+n*g*f+u*i*_-n*d*_)*w,e[2]=(a*g*s-m*l*s+m*i*c-n*g*c-a*i*_+n*l*_)*w,e[3]=(u*l*s-a*d*s-u*i*c+n*d*c+a*i*f-n*l*f)*w,e[4]=v*w,e[5]=(h*g*s-p*d*s+p*i*f-t*g*f-h*i*_+t*d*_)*w,e[6]=(p*l*s-r*g*s-p*i*c+t*g*c+r*i*_-t*l*_)*w,e[7]=(r*d*s-h*l*s+h*i*c-t*d*c-r*i*f+t*l*f)*w,e[8]=x*w,e[9]=(p*u*s-h*m*s-p*n*f+t*m*f+h*n*_-t*u*_)*w,e[10]=(r*m*s-p*a*s+p*n*c-t*m*c-r*n*_+t*a*_)*w,e[11]=(h*a*s-r*u*s-h*n*c+t*u*c+r*n*f-t*a*f)*w,e[12]=S*w,e[13]=(h*m*i-p*u*i+p*n*d-t*m*d-h*n*g+t*u*g)*w,e[14]=(p*a*i-r*m*i-p*n*l+t*m*l+r*n*g-t*a*g)*w,e[15]=(r*u*i-h*a*i+h*n*l-t*u*l-r*n*d+t*a*d)*w,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,r=e.x,a=e.y,l=e.z,c=s*r,h=s*a;return this.set(c*r+n,c*a-i*l,c*l+i*a,0,c*a+i*l,h*a+n,h*l-i*r,0,c*l-i*a,h*l+i*r,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,r){return this.set(1,n,s,0,e,1,r,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,r=t._y,a=t._z,l=t._w,c=s+s,h=r+r,u=a+a,d=s*c,f=s*h,p=s*u,m=r*h,g=r*u,_=a*u,y=l*c,v=l*h,x=l*u,S=n.x,T=n.y,w=n.z;return i[0]=(1-(m+_))*S,i[1]=(f+x)*S,i[2]=(p-v)*S,i[3]=0,i[4]=(f-x)*T,i[5]=(1-(d+_))*T,i[6]=(g+y)*T,i[7]=0,i[8]=(p+v)*w,i[9]=(g-y)*w,i[10]=(1-(d+m))*w,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=co.set(i[0],i[1],i[2]).length();const r=co.set(i[4],i[5],i[6]).length(),a=co.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Ti.copy(this);const c=1/s,h=1/r,u=1/a;return Ti.elements[0]*=c,Ti.elements[1]*=c,Ti.elements[2]*=c,Ti.elements[4]*=h,Ti.elements[5]*=h,Ti.elements[6]*=h,Ti.elements[8]*=u,Ti.elements[9]*=u,Ti.elements[10]*=u,t.setFromRotationMatrix(Ti),n.x=s,n.y=r,n.z=a,this}makePerspective(e,t,n,i,s,r,a=pi){const l=this.elements,c=2*s/(t-e),h=2*s/(n-i),u=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(a===pi)f=-(r+s)/(r-s),p=-2*r*s/(r-s);else if(a===dl)f=-r/(r-s),p=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,s,r,a=pi){const l=this.elements,c=1/(t-e),h=1/(n-i),u=1/(r-s),d=(t+e)*c,f=(n+i)*h;let p,m;if(a===pi)p=(r+s)*u,m=-2*u;else if(a===dl)p=s*u,m=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=m,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const co=new A,Ti=new de,mb=new A(0,0,0),gb=new A(1,1,1),Es=new A,Ql=new A,Hn=new A,tg=new de,ng=new vt;class An{constructor(e=0,t=0,n=0,i=An.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],r=i[4],a=i[8],l=i[1],c=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(Xe(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Xe(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Xe(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-r,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Xe(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-r,c));break;case"YZX":this._z=Math.asin(Xe(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Xe(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return tg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(tg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ng.setFromEuler(this),this.setFromQuaternion(ng,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}An.DEFAULT_ORDER="XYZ";class vu{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let _b=0;const ig=new A,ho=new vt,Zi=new de,ec=new A,ma=new A,xb=new A,yb=new vt,sg=new A(1,0,0),rg=new A(0,1,0),og=new A(0,0,1),ag={type:"added"},vb={type:"removed"},uo={type:"childadded",child:null},pd={type:"childremoved",child:null};class tt extends en{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_b++}),this.uuid=Zn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=tt.DEFAULT_UP.clone();const e=new A,t=new An,n=new vt,i=new A(1,1,1);function s(){n.setFromEuler(t,!1)}function r(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new de},normalMatrix:{value:new We}}),this.matrix=new de,this.matrixWorld=new de,this.matrixAutoUpdate=tt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new vu,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ho.setFromAxisAngle(e,t),this.quaternion.multiply(ho),this}rotateOnWorldAxis(e,t){return ho.setFromAxisAngle(e,t),this.quaternion.premultiply(ho),this}rotateX(e){return this.rotateOnAxis(sg,e)}rotateY(e){return this.rotateOnAxis(rg,e)}rotateZ(e){return this.rotateOnAxis(og,e)}translateOnAxis(e,t){return ig.copy(e).applyQuaternion(this.quaternion),this.position.add(ig.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(sg,e)}translateY(e){return this.translateOnAxis(rg,e)}translateZ(e){return this.translateOnAxis(og,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Zi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ec.copy(e):ec.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ma.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Zi.lookAt(ma,ec,this.up):Zi.lookAt(ec,ma,this.up),this.quaternion.setFromRotationMatrix(Zi),i&&(Zi.extractRotation(i.matrixWorld),ho.setFromRotationMatrix(Zi),this.quaternion.premultiply(ho.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(ag),uo.child=e,this.dispatchEvent(uo),uo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(vb),pd.child=e,this.dispatchEvent(pd),pd.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Zi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Zi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Zi),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(ag),uo.child=e,this.dispatchEvent(uo),uo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ma,e,xb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ma,yb,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?{min:a.boundingBox.min.toArray(),max:a.boundingBox.max.toArray()}:void 0,boundingSphere:a.boundingSphere?{radius:a.boundingSphere.radius,center:a.boundingSphere.center.toArray()}:void 0})),i.instanceInfo=this._instanceInfo.map(a=>({...a})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:this.boundingSphere.center.toArray(),radius:this.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:this.boundingBox.min.toArray(),max:this.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(e.animations,l))}}if(t){const a=r(e.geometries),l=r(e.materials),c=r(e.textures),h=r(e.images),u=r(e.shapes),d=r(e.skeletons),f=r(e.animations),p=r(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}tt.DEFAULT_UP=new A(0,1,0);tt.DEFAULT_MATRIX_AUTO_UPDATE=!0;tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const wi=new A,ji=new A,md=new A,Ki=new A,fo=new A,po=new A,lg=new A,gd=new A,_d=new A,xd=new A,yd=new st,vd=new st,Md=new st;class bn{constructor(e=new A,t=new A,n=new A){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),wi.subVectors(e,t),i.cross(wi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){wi.subVectors(i,t),ji.subVectors(n,t),md.subVectors(e,t);const r=wi.dot(wi),a=wi.dot(ji),l=wi.dot(md),c=ji.dot(ji),h=ji.dot(md),u=r*c-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(r*h-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ki)===null?!1:Ki.x>=0&&Ki.y>=0&&Ki.x+Ki.y<=1}static getInterpolation(e,t,n,i,s,r,a,l){return this.getBarycoord(e,t,n,i,Ki)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Ki.x),l.addScaledVector(r,Ki.y),l.addScaledVector(a,Ki.z),l)}static getInterpolatedAttribute(e,t,n,i,s,r){return yd.setScalar(0),vd.setScalar(0),Md.setScalar(0),yd.fromBufferAttribute(e,t),vd.fromBufferAttribute(e,n),Md.fromBufferAttribute(e,i),r.setScalar(0),r.addScaledVector(yd,s.x),r.addScaledVector(vd,s.y),r.addScaledVector(Md,s.z),r}static isFrontFacing(e,t,n,i){return wi.subVectors(n,t),ji.subVectors(e,t),wi.cross(ji).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return wi.subVectors(this.c,this.b),ji.subVectors(this.a,this.b),wi.cross(ji).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return bn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return bn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return bn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return bn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return bn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let r,a;fo.subVectors(i,n),po.subVectors(s,n),gd.subVectors(e,n);const l=fo.dot(gd),c=po.dot(gd);if(l<=0&&c<=0)return t.copy(n);_d.subVectors(e,i);const h=fo.dot(_d),u=po.dot(_d);if(h>=0&&u<=h)return t.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(n).addScaledVector(fo,r);xd.subVectors(e,s);const f=fo.dot(xd),p=po.dot(xd);if(p>=0&&f<=p)return t.copy(s);const m=f*c-l*p;if(m<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(po,a);const g=h*p-f*u;if(g<=0&&u-h>=0&&f-p>=0)return lg.subVectors(s,i),a=(u-h)/(u-h+(f-p)),t.copy(i).addScaledVector(lg,a);const _=1/(g+m+d);return r=m*_,a=d*_,t.copy(n).addScaledVector(fo,r).addScaledVector(po,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const py={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},As={h:0,s:0,l:0},tc={h:0,s:0,l:0};function Sd(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+(e-o)*6*t:t<1/2?e:t<2/3?o+(e-o)*6*(2/3-t):o}class le{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=At){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Je.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Je.workingColorSpace){return this.r=e,this.g=t,this.b=n,Je.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Je.workingColorSpace){if(e=Vp(e,1),t=Xe(t,0,1),n=Xe(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,r=2*n-s;this.r=Sd(r,s,e+1/3),this.g=Sd(r,s,e),this.b=Sd(r,s,e-1/3)}return Je.toWorkingColorSpace(this,i),this}setStyle(e,t=At){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=At){const n=py[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ps(e.r),this.g=ps(e.g),this.b=ps(e.b),this}copyLinearToSRGB(e){return this.r=Bo(e.r),this.g=Bo(e.g),this.b=Bo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=At){return Je.fromWorkingColorSpace(on.copy(this),e),Math.round(Xe(on.r*255,0,255))*65536+Math.round(Xe(on.g*255,0,255))*256+Math.round(Xe(on.b*255,0,255))}getHexString(e=At){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Je.workingColorSpace){Je.fromWorkingColorSpace(on.copy(this),t);const n=on.r,i=on.g,s=on.b,r=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const h=(a+r)/2;if(a===r)l=0,c=0;else{const u=r-a;switch(c=h<=.5?u/(r+a):u/(2-r-a),r){case n:l=(i-s)/u+(i<s?6:0);break;case i:l=(s-n)/u+2;break;case s:l=(n-i)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Je.workingColorSpace){return Je.fromWorkingColorSpace(on.copy(this),t),e.r=on.r,e.g=on.g,e.b=on.b,e}getStyle(e=At){Je.fromWorkingColorSpace(on.copy(this),e);const t=on.r,n=on.g,i=on.b;return e!==At?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(As),this.setHSL(As.h+e,As.s+t,As.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(As),e.getHSL(tc);const n=el(As.h,tc.h,t),i=el(As.s,tc.s,t),s=el(As.l,tc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const on=new le;le.NAMES=py;let Mb=0;class Xt extends en{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Mb++}),this.uuid=Zn(),this.name="",this.type="Material",this.blending=Fr,this.side=Hi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ch,this.blendDst=hh,this.blendEquation=Fs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new le(0,0,0),this.blendAlpha=0,this.depthFunc=Xr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Xf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=wr,this.stencilZFail=wr,this.stencilZPass=wr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Fr&&(n.blending=this.blending),this.side!==Hi&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==ch&&(n.blendSrc=this.blendSrc),this.blendDst!==hh&&(n.blendDst=this.blendDst),this.blendEquation!==Fs&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Xr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Xf&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==wr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==wr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==wr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const r=[];for(const a in s){const l=s[a];delete l.metadata,r.push(l)}return r}if(t){const s=i(e.textures),r=i(e.images);s.length>0&&(n.textures=s),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class un extends Xt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new An,this.combine=Rl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const cs=Sb();function Sb(){const o=new ArrayBuffer(4),e=new Float32Array(o),t=new Uint32Array(o),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)r[l]=l<<23;r[31]=1199570944,r[32]=2147483648;for(let l=33;l<63;++l)r[l]=2147483648+(l-32<<23);r[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:r,offsetTable:a}}function Ln(o){Math.abs(o)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),o=Xe(o,-65504,65504),cs.floatView[0]=o;const e=cs.uint32View[0],t=e>>23&511;return cs.baseTable[t]+((e&8388607)>>cs.shiftTable[t])}function Va(o){const e=o>>10;return cs.uint32View[0]=cs.mantissaTable[cs.offsetTable[e]+(o&1023)]+cs.exponentTable[e],cs.floatView[0]}class bb{static toHalfFloat(e){return Ln(e)}static fromHalfFloat(e){return Va(e)}}const zt=new A,nc=new G;let Tb=0;class ke{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Tb++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=ul,this.updateRanges=[],this.gpuType=Dn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)nc.fromBufferAttribute(this,t),nc.applyMatrix3(e),this.setXY(t,nc.x,nc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)zt.fromBufferAttribute(this,t),zt.applyMatrix3(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)zt.fromBufferAttribute(this,t),zt.applyMatrix4(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)zt.fromBufferAttribute(this,t),zt.applyNormalMatrix(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)zt.fromBufferAttribute(this,t),zt.transformDirection(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Sn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Ye(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Sn(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Sn(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Sn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Sn(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array),i=Ye(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array),i=Ye(i,this.array),s=Ye(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ul&&(e.usage=this.usage),e}}class wb extends ke{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Eb extends ke{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Ab extends ke{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Cb extends ke{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Hp extends ke{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Rb extends ke{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Gp extends ke{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Pb extends ke{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Va(this.array[e*this.itemSize]);return this.normalized&&(t=Sn(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize]=Ln(t),this}getY(e){let t=Va(this.array[e*this.itemSize+1]);return this.normalized&&(t=Sn(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+1]=Ln(t),this}getZ(e){let t=Va(this.array[e*this.itemSize+2]);return this.normalized&&(t=Sn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+2]=Ln(t),this}getW(e){let t=Va(this.array[e*this.itemSize+3]);return this.normalized&&(t=Sn(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+3]=Ln(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array)),this.array[e+0]=Ln(t),this.array[e+1]=Ln(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array),i=Ye(i,this.array)),this.array[e+0]=Ln(t),this.array[e+1]=Ln(n),this.array[e+2]=Ln(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array),i=Ye(i,this.array),s=Ye(s,this.array)),this.array[e+0]=Ln(t),this.array[e+1]=Ln(n),this.array[e+2]=Ln(i),this.array[e+3]=Ln(s),this}}class be extends ke{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Ib=0;const ri=new de,bd=new tt,mo=new A,Gn=new Wt,ga=new Wt,$t=new A;class ze extends en{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ib++}),this.uuid=Zn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(uy(e)?Gp:Hp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new We().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ri.makeRotationFromQuaternion(e),this.applyMatrix4(ri),this}rotateX(e){return ri.makeRotationX(e),this.applyMatrix4(ri),this}rotateY(e){return ri.makeRotationY(e),this.applyMatrix4(ri),this}rotateZ(e){return ri.makeRotationZ(e),this.applyMatrix4(ri),this}translate(e,t,n){return ri.makeTranslation(e,t,n),this.applyMatrix4(ri),this}scale(e,t,n){return ri.makeScale(e,t,n),this.applyMatrix4(ri),this}lookAt(e){return bd.lookAt(e),bd.updateMatrix(),this.applyMatrix4(bd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(mo).negate(),this.translate(mo.x,mo.y,mo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const r=e[i];n.push(r.x,r.y,r.z||0)}this.setAttribute("position",new be(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Wt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Gn.setFromBufferAttribute(s),this.morphTargetsRelative?($t.addVectors(this.boundingBox.min,Gn.min),this.boundingBox.expandByPoint($t),$t.addVectors(this.boundingBox.max,Gn.max),this.boundingBox.expandByPoint($t)):(this.boundingBox.expandByPoint(Gn.min),this.boundingBox.expandByPoint(Gn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ot);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new A,1/0);return}if(e){const n=this.boundingSphere.center;if(Gn.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const a=t[s];ga.setFromBufferAttribute(a),this.morphTargetsRelative?($t.addVectors(Gn.min,ga.min),Gn.expandByPoint($t),$t.addVectors(Gn.max,ga.max),Gn.expandByPoint($t)):(Gn.expandByPoint(ga.min),Gn.expandByPoint(ga.max))}Gn.getCenter(n);let i=0;for(let s=0,r=e.count;s<r;s++)$t.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared($t));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)$t.fromBufferAttribute(a,c),l&&(mo.fromBufferAttribute(e,c),$t.add(mo)),i=Math.max(i,n.distanceToSquared($t))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ke(new Float32Array(4*n.count),4));const r=this.getAttribute("tangent"),a=[],l=[];for(let E=0;E<n.count;E++)a[E]=new A,l[E]=new A;const c=new A,h=new A,u=new A,d=new G,f=new G,p=new G,m=new A,g=new A;function _(E,M,b){c.fromBufferAttribute(n,E),h.fromBufferAttribute(n,M),u.fromBufferAttribute(n,b),d.fromBufferAttribute(s,E),f.fromBufferAttribute(s,M),p.fromBufferAttribute(s,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const I=1/(f.x*p.y-p.x*f.y);isFinite(I)&&(m.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(I),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(I),a[E].add(m),a[M].add(m),a[b].add(m),l[E].add(g),l[M].add(g),l[b].add(g))}let y=this.groups;y.length===0&&(y=[{start:0,count:e.count}]);for(let E=0,M=y.length;E<M;++E){const b=y[E],I=b.start,D=b.count;for(let U=I,O=I+D;U<O;U+=3)_(e.getX(U+0),e.getX(U+1),e.getX(U+2))}const v=new A,x=new A,S=new A,T=new A;function w(E){S.fromBufferAttribute(i,E),T.copy(S);const M=a[E];v.copy(M),v.sub(S.multiplyScalar(S.dot(M))).normalize(),x.crossVectors(T,M);const I=x.dot(l[E])<0?-1:1;r.setXYZW(E,v.x,v.y,v.z,I)}for(let E=0,M=y.length;E<M;++E){const b=y[E],I=b.start,D=b.count;for(let U=I,O=I+D;U<O;U+=3)w(e.getX(U+0)),w(e.getX(U+1)),w(e.getX(U+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ke(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new A,s=new A,r=new A,a=new A,l=new A,c=new A,h=new A,u=new A;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),m=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),h.subVectors(r,s),u.subVectors(i,s),h.cross(u),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),c.fromBufferAttribute(n,g),a.add(h),l.add(h),c.add(h),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),h.subVectors(r,s),u.subVectors(i,s),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)$t.fromBufferAttribute(e,t),$t.normalize(),e.setXYZ(t,$t.x,$t.y,$t.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let m=0,g=l.length;m<g;m++){a.isInterleavedBufferAttribute?f=l[m]*a.data.stride+a.offset:f=l[m]*h;for(let _=0;_<h;_++)d[p++]=c[f++]}return new ke(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ze,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,l=r.length;a<l;a++){const c=r[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(i[l]=h,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],u=s[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let c=0,h=r.length;c<h;c++){const u=r[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const cg=new de,or=new ni,ic=new Ot,hg=new A,sc=new A,rc=new A,oc=new A,Td=new A,ac=new A,ug=new A,lc=new A;class _t extends tt{constructor(e=new ze,t=new un){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,r=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(s&&a){ac.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],u=s[l];h!==0&&(Td.fromBufferAttribute(u,e),r?ac.addScaledVector(Td,h):ac.addScaledVector(Td.sub(t),h))}t.add(ac)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ic.copy(n.boundingSphere),ic.applyMatrix4(s),or.copy(e.ray).recast(e.near),!(ic.containsPoint(or.origin)===!1&&(or.intersectSphere(ic,hg)===null||or.origin.distanceToSquared(hg)>(e.far-e.near)**2))&&(cg.copy(s).invert(),or.copy(e.ray).applyMatrix4(cg),!(n.boundingBox!==null&&or.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,or)))}_computeIntersections(e,t,n){let i;const s=this.geometry,r=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],_=r[g.materialIndex],y=Math.max(g.start,f.start),v=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let x=y,S=v;x<S;x+=3){const T=a.getX(x),w=a.getX(x+1),E=a.getX(x+2);i=cc(this,_,e,n,c,h,u,T,w,E),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),m=Math.min(a.count,f.start+f.count);for(let g=p,_=m;g<_;g+=3){const y=a.getX(g),v=a.getX(g+1),x=a.getX(g+2);i=cc(this,r,e,n,c,h,u,y,v,x),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],_=r[g.materialIndex],y=Math.max(g.start,f.start),v=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let x=y,S=v;x<S;x+=3){const T=x,w=x+1,E=x+2;i=cc(this,_,e,n,c,h,u,T,w,E),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),m=Math.min(l.count,f.start+f.count);for(let g=p,_=m;g<_;g+=3){const y=g,v=g+1,x=g+2;i=cc(this,r,e,n,c,h,u,y,v,x),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function Lb(o,e,t,n,i,s,r,a){let l;if(e.side===En?l=n.intersectTriangle(r,s,i,!0,a):l=n.intersectTriangle(i,s,r,e.side===Hi,a),l===null)return null;lc.copy(a),lc.applyMatrix4(o.matrixWorld);const c=t.ray.origin.distanceTo(lc);return c<t.near||c>t.far?null:{distance:c,point:lc.clone(),object:o}}function cc(o,e,t,n,i,s,r,a,l,c){o.getVertexPosition(a,sc),o.getVertexPosition(l,rc),o.getVertexPosition(c,oc);const h=Lb(o,e,t,n,sc,rc,oc,ug);if(h){const u=new A;bn.getBarycoord(ug,sc,rc,oc,u),i&&(h.uv=bn.getInterpolatedAttribute(i,a,l,c,u,new G)),s&&(h.uv1=bn.getInterpolatedAttribute(s,a,l,c,u,new G)),r&&(h.normal=bn.getInterpolatedAttribute(r,a,l,c,u,new A),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new A,materialIndex:0};bn.getNormal(sc,rc,oc,d.normal),h.face=d,h.barycoord=u}return h}class Jr extends ze{constructor(e=1,t=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const a=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,r,s,0),p("z","y","x",1,-1,n,t,-e,r,s,1),p("x","z","y",1,1,e,n,t,i,r,2),p("x","z","y",1,-1,e,n,-t,i,r,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new be(c,3)),this.setAttribute("normal",new be(h,3)),this.setAttribute("uv",new be(u,2));function p(m,g,_,y,v,x,S,T,w,E,M){const b=x/w,I=S/E,D=x/2,U=S/2,O=T/2,V=w+1,F=E+1;let $=0,H=0;const te=new A;for(let ne=0;ne<F;ne++){const se=ne*I-U;for(let Me=0;Me<V;Me++){const Fe=Me*b-D;te[m]=Fe*y,te[g]=se*v,te[_]=O,c.push(te.x,te.y,te.z),te[m]=0,te[g]=0,te[_]=T>0?1:-1,h.push(te.x,te.y,te.z),u.push(Me/w),u.push(1-ne/E),$+=1}}for(let ne=0;ne<E;ne++)for(let se=0;se<w;se++){const Me=d+se+V*ne,Fe=d+se+V*(ne+1),q=d+(se+1)+V*(ne+1),Y=d+(se+1)+V*ne;l.push(Me,Fe,Y),l.push(Fe,q,Y),H+=6}a.addGroup(f,H,M),f+=H,d+=$}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Jr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Jo(o){const e={};for(const t in o){e[t]={};for(const n in o[t]){const i=o[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Mn(o){const e={};for(let t=0;t<o.length;t++){const n=Jo(o[t]);for(const i in n)e[i]=n[i]}return e}function Db(o){const e=[];for(let t=0;t<o.length;t++)e.push(o[t].clone());return e}function my(o){const e=o.getRenderTarget();return e===null?o.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Je.workingColorSpace}const gy={clone:Jo,merge:Mn};var Ub=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ob=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Qn extends Xt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ub,this.fragmentShader=Ob,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Jo(e.uniforms),this.uniformsGroups=Db(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Mu extends tt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new de,this.projectionMatrix=new de,this.projectionMatrixInverse=new de,this.coordinateSystem=pi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Cs=new A,dg=new G,fg=new G;class Bt extends Mu{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ko*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Br*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ko*2*Math.atan(Math.tan(Br*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Cs.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Cs.x,Cs.y).multiplyScalar(-e/Cs.z),Cs.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Cs.x,Cs.y).multiplyScalar(-e/Cs.z)}getViewSize(e,t){return this.getViewBounds(e,dg,fg),t.subVectors(fg,dg)}setViewOffset(e,t,n,i,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Br*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const r=this.view;if(this.view!==null&&this.view.enabled){const l=r.fullWidth,c=r.fullHeight;s+=r.offsetX*i/l,t-=r.offsetY*n/c,i*=r.width/l,n*=r.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const go=-90,_o=1;class _y extends tt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Bt(go,_o,e,t);i.layers=this.layers,this.add(i);const s=new Bt(go,_o,e,t);s.layers=this.layers,this.add(s);const r=new Bt(go,_o,e,t);r.layers=this.layers,this.add(r);const a=new Bt(go,_o,e,t);a.layers=this.layers,this.add(a);const l=new Bt(go,_o,e,t);l.layers=this.layers,this.add(l);const c=new Bt(go,_o,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,r,a,l]=t;for(const c of t)this.remove(c);if(e===pi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===dl)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,r),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,l),e.setRenderTarget(n,4,i),e.render(t,c),n.texture.generateMipmaps=m,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Dl extends Mt{constructor(e=[],t=gs,n,i,s,r,a,l,c,h){super(e,t,n,i,s,r,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class xy extends xi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Dl(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Tt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Jr(5,5,5),s=new Qn({name:"CubemapFromEquirect",uniforms:Jo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:En,blending:ds});s.uniforms.tEquirect.value=t;const r=new _t(i,s),a=t.minFilter;return t.minFilter===fi&&(t.minFilter=Tt),new _y(1,10,this).update(e,r),t.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(s)}}class mi extends tt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Nb={type:"move"};class sh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new mi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new mi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new A,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new A),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new mi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new A,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new A),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,r=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){r=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n),_=this._getHandJoint(c,m);g!==null&&(_.matrix.fromArray(g.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=g.radius),_.visible=g!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Nb)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=r!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new mi;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Su{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new le(e),this.density=t}clone(){return new Su(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class bu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new le(e),this.near=t,this.far=n}clone(){return new bu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Wp extends tt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new An,this.environmentIntensity=1,this.environmentRotation=new An,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Ul{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ul,this.updateRanges=[],this.version=0,this.uuid=Zn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const xn=new A;class Zs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)xn.fromBufferAttribute(this,t),xn.applyMatrix4(e),this.setXYZ(t,xn.x,xn.y,xn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)xn.fromBufferAttribute(this,t),xn.applyNormalMatrix(e),this.setXYZ(t,xn.x,xn.y,xn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)xn.fromBufferAttribute(this,t),xn.transformDirection(e),this.setXYZ(t,xn.x,xn.y,xn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Sn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Ye(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Sn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Sn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Sn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Sn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array),i=Ye(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ye(t,this.array),n=Ye(n,this.array),i=Ye(i,this.array),s=Ye(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new ke(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Zs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Xp extends Xt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let xo;const _a=new A,yo=new A,vo=new A,Mo=new G,xa=new G,yy=new de,hc=new A,ya=new A,uc=new A,pg=new G,wd=new G,mg=new G;class vy extends tt{constructor(e=new Xp){if(super(),this.isSprite=!0,this.type="Sprite",xo===void 0){xo=new ze;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Ul(t,5);xo.setIndex([0,1,2,0,2,3]),xo.setAttribute("position",new Zs(n,3,0,!1)),xo.setAttribute("uv",new Zs(n,2,3,!1))}this.geometry=xo,this.material=e,this.center=new G(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),yo.setFromMatrixScale(this.matrixWorld),yy.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),vo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&yo.multiplyScalar(-vo.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const r=this.center;dc(hc.set(-.5,-.5,0),vo,r,yo,i,s),dc(ya.set(.5,-.5,0),vo,r,yo,i,s),dc(uc.set(.5,.5,0),vo,r,yo,i,s),pg.set(0,0),wd.set(1,0),mg.set(1,1);let a=e.ray.intersectTriangle(hc,ya,uc,!1,_a);if(a===null&&(dc(ya.set(-.5,.5,0),vo,r,yo,i,s),wd.set(0,1),a=e.ray.intersectTriangle(hc,uc,ya,!1,_a),a===null))return;const l=e.ray.origin.distanceTo(_a);l<e.near||l>e.far||t.push({distance:l,point:_a.clone(),uv:bn.getInterpolation(_a,hc,ya,uc,pg,wd,mg,new G),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function dc(o,e,t,n,i,s){Mo.subVectors(o,t).addScalar(.5).multiply(n),i!==void 0?(xa.x=s*Mo.x-i*Mo.y,xa.y=i*Mo.x+s*Mo.y):xa.copy(Mo),o.copy(e),o.x+=xa.x,o.y+=xa.y,o.applyMatrix4(yy)}const fc=new A,gg=new A;class My extends tt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){fc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(fc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){fc.setFromMatrixPosition(e.matrixWorld),gg.setFromMatrixPosition(this.matrixWorld);const n=fc.distanceTo(gg)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let r=t[i].distance;if(t[i].object.visible&&(r-=r*t[i].hysteresis),n>=r)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const r=n[i];t.object.levels.push({object:r.object.uuid,distance:r.distance,hysteresis:r.hysteresis})}return t}}const _g=new A,xg=new st,yg=new st,Fb=new A,vg=new de,pc=new A,Ed=new Ot,Mg=new de,Ad=new ni;class qp extends _t{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Wf,this.bindMatrix=new de,this.bindMatrixInverse=new de,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Wt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,pc),this.boundingBox.expandByPoint(pc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Ot),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,pc),this.boundingSphere.expandByPoint(pc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ed.copy(this.boundingSphere),Ed.applyMatrix4(i),e.ray.intersectsSphere(Ed)!==!1&&(Mg.copy(i).invert(),Ad.copy(e.ray).applyMatrix4(Mg),!(this.boundingBox!==null&&Ad.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Ad)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new st,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Wf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Zx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;xg.fromBufferAttribute(i.attributes.skinIndex,e),yg.fromBufferAttribute(i.attributes.skinWeight,e),_g.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const r=yg.getComponent(s);if(r!==0){const a=xg.getComponent(s);vg.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(Fb.copy(_g).applyMatrix4(vg),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Tu extends tt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class jn extends Mt{constructor(e=null,t=1,n=1,i,s,r,a,l,c=Gt,h=Gt,u,d){super(null,r,a,l,c,h,i,s,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Sg=new de,Bb=new de;class Ol{constructor(e=[],t=[]){this.uuid=Zn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new de)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new de;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,r=e.length;s<r;s++){const a=e[s]?e[s].matrixWorld:Bb;Sg.multiplyMatrices(a,t[s]),Sg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Ol(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new jn(t,e,e,wn,Dn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let r=t[s];r===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),r=new Tu),this.bones.push(r),this.boneInverses.push(new de().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const r=t[i];e.bones.push(r.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class qr extends ke{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const So=new de,bg=new de,mc=[],Tg=new Wt,kb=new de,va=new _t,Ma=new Ot;class wu extends _t{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new qr(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,kb)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Wt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,So),Tg.copy(e.boundingBox).applyMatrix4(So),this.boundingBox.union(Tg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ot),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,So),Ma.copy(e.boundingSphere).applyMatrix4(So),this.boundingSphere.union(Ma)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,r=e*s+1;for(let a=0;a<n.length;a++)n[a]=i[r+a]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(va.geometry=this.geometry,va.material=this.material,va.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ma.copy(this.boundingSphere),Ma.applyMatrix4(n),e.ray.intersectsSphere(Ma)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,So),bg.multiplyMatrices(n,So),va.matrixWorld=bg,va.raycast(e,mc);for(let r=0,a=mc.length;r<a;r++){const l=mc[r];l.instanceId=s,l.object=this,t.push(l)}mc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new qr(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new jn(new Float32Array(i*this.count),i,this.count,pu,Dn));const s=this.morphTexture.source.data.data;let r=0;for(let c=0;c<n.length;c++)r+=n[c];const a=this.geometry.morphTargetsRelative?1:1-r,l=i*e;s[l]=a,s.set(n,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Cd=new A,zb=new A,Vb=new We;class Ci{constructor(e=new A(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Cd.subVectors(n,t).cross(zb.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Cd),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Vb.getNormalMatrix(e),i=this.coplanarPoint(Cd).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ar=new Ot,gc=new A;class Qr{constructor(e=new Ci,t=new Ci,n=new Ci,i=new Ci,s=new Ci,r=new Ci){this.planes=[e,t,n,i,s,r]}set(e,t,n,i,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=pi){const n=this.planes,i=e.elements,s=i[0],r=i[1],a=i[2],l=i[3],c=i[4],h=i[5],u=i[6],d=i[7],f=i[8],p=i[9],m=i[10],g=i[11],_=i[12],y=i[13],v=i[14],x=i[15];if(n[0].setComponents(l-s,d-c,g-f,x-_).normalize(),n[1].setComponents(l+s,d+c,g+f,x+_).normalize(),n[2].setComponents(l+r,d+h,g+p,x+y).normalize(),n[3].setComponents(l-r,d-h,g-p,x-y).normalize(),n[4].setComponents(l-a,d-u,g-m,x-v).normalize(),t===pi)n[5].setComponents(l+a,d+u,g+m,x+v).normalize();else if(t===dl)n[5].setComponents(a,u,m,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ar.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ar.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ar)}intersectsSprite(e){return ar.center.set(0,0,0),ar.radius=.7071067811865476,ar.applyMatrix4(e.matrixWorld),this.intersectsSphere(ar)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(gc.x=i.normal.x>0?e.max.x:e.min.x,gc.y=i.normal.y>0?e.max.y:e.min.y,gc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(gc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const Ui=new de,Oi=new Qr;class Eu{constructor(){this.coordinateSystem=pi}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Ui.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Oi.setFromProjectionMatrix(Ui,this.coordinateSystem),Oi.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Ui.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Oi.setFromProjectionMatrix(Ui,this.coordinateSystem),Oi.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Ui.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Oi.setFromProjectionMatrix(Ui,this.coordinateSystem),Oi.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Ui.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Oi.setFromProjectionMatrix(Ui,this.coordinateSystem),Oi.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Ui.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Oi.setFromProjectionMatrix(Ui,this.coordinateSystem),Oi.containsPoint(e))return!0}return!1}clone(){return new Eu}}function Rd(o,e){return o-e}function Hb(o,e){return o.z-e.z}function Gb(o,e){return e.z-o.z}class Wb{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const s=this.pool,r=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];r.push(a),this.index++,a.start=e,a.count=t,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const Rn=new de,Xb=new le(1,1,1),wg=new Qr,qb=new Eu,_c=new Wt,lr=new Ot,Sa=new A,Eg=new A,Yb=new A,Pd=new Wb,an=new _t,xc=[];function $b(o,e,t=0){const n=e.itemSize;if(o.isInterleavedBufferAttribute||o.array.constructor!==e.array.constructor){const i=o.count;for(let s=0;s<i;s++)for(let r=0;r<n;r++)e.setComponent(s+t,r,o.getComponent(s,r))}else e.array.set(o.array,t*n);e.needsUpdate=!0}function cr(o,e){if(o.constructor!==e.constructor){const t=Math.min(o.length,e.length);for(let n=0;n<t;n++)e[n]=o[n]}else{const t=Math.min(o.length,e.length);e.set(new o.constructor(o.buffer,0,t))}}class Yp extends _t{constructor(e,t,n=t*2,i){super(new ze,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new jn(t,e,e,wn,Dn);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new jn(t,e,e,Pl,_s);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new jn(t,e,e,wn,Dn);n.colorSpace=Je.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const r=e.getAttribute(s),{array:a,itemSize:l,normalized:c}=r,h=new a.constructor(n*l),u=new ke(h,l,c);t.setAttribute(s,u)}if(e.getIndex()!==null){const s=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new ke(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Wt);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Rn),this.getBoundingBoxAt(s,_c).applyMatrix4(Rn),e.union(_c)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ot);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Rn),this.getBoundingSphereAt(s,lr).applyMatrix4(Rn),e.union(lr)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Rd),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;Rn.identity().toArray(s.image.data,i*16),s.needsUpdate=!0;const r=this._colorsTexture;return r&&(Xb.toArray(r.image.data,i*4),r.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const r=e.getIndex();if(r!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?r.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Rd),l=this._availableGeometryIds.shift(),s[l]=i):(l=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(l,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),r=t.getIndex(),a=this._geometryInfo[e];if(i&&r.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in n.attributes){const u=t.getAttribute(h),d=n.getAttribute(h);$b(u,d,l);const f=u.itemSize;for(let p=u.count,m=c;p<m;p++){const g=l+p;for(let _=0;_<f;_++)d.setComponent(g,_,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(i){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<r.count;d++)s.setX(h+d,l+r.getX(d));for(let d=r.count,f=u;d<f;d++)s.setX(h+d,l);s.needsUpdate=!0,s.addUpdateRange(h,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,s=n.length;i<s;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((r,a)=>a).sort((r,a)=>n[r].vertexStart-n[a].vertexStart),s=this.geometry;for(let r=0,a=n.length;r<a;r++){const l=i[r],c=n[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=s.index,p=f.array,m=e-u;for(let g=h;g<h+d;g++)p[g]=p[g]+m;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=c,d=s.attributes;for(const f in d){const p=d[f],{array:m,itemSize:g}=p;m.copyWithin(e*g,h*g,(h+u)*g),p.addUpdateRange(e*g,u*g)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const s=new Wt,r=n.index,a=n.attributes.position;for(let l=i.start,c=i.start+i.count;l<c;l++){let h=l;r&&(h=r.getX(h)),s.expandByPoint(Sa.fromBufferAttribute(a,h))}i.boundingBox=s}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const s=new Ot;this.getBoundingBoxAt(e,_c),_c.getCenter(s.center);const r=n.index,a=n.attributes.position;let l=0;for(let c=i.start,h=i.start+i.count;c<h;c++){let u=c;r&&(u=r.getX(u)),Sa.fromBufferAttribute(a,u),l=Math.max(l,s.center.distanceToSquared(Sa))}s.radius=Math.sqrt(l),i.boundingSphere=s}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Rd);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),s=new Int32Array(e);cr(this._multiDrawCounts,i),cr(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=e;const r=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;r.dispose(),this._initIndirectTexture(),cr(r.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),cr(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),cr(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new ze,this._initializeGeometry(s));const r=this.geometry;s.index&&cr(s.index.array,r.index.array);for(const a in s.attributes)cr(s.attributes[a].array,r.attributes[a].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,r=this.geometry;an.material=this.material,an.geometry.index=r.index,an.geometry.attributes=r.attributes,an.geometry.boundingBox===null&&(an.geometry.boundingBox=new Wt),an.geometry.boundingSphere===null&&(an.geometry.boundingSphere=new Ot);for(let a=0,l=n.length;a<l;a++){if(!n[a].visible||!n[a].active)continue;const c=n[a].geometryIndex,h=i[c];an.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,an.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,an.geometry.boundingBox),this.getBoundingSphereAt(c,an.geometry.boundingSphere),an.raycast(e,xc);for(let u=0,d=xc.length;u<d;u++){const f=xc[u];f.object=this,f.batchId=a,t.push(f)}xc.length=0}an.material=null,an.geometry.index=null,an.geometry.attributes={},an.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const r=i.getIndex(),a=r===null?1:r.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data,m=n.isArrayCamera?qb:wg;d&&!n.isArrayCamera&&(Rn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),wg.setFromProjectionMatrix(Rn,e.coordinateSystem));let g=0;if(this.sortObjects){Rn.copy(this.matrixWorld).invert(),Sa.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Rn),Eg.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Rn);for(let v=0,x=l.length;v<x;v++)if(l[v].visible&&l[v].active){const S=l[v].geometryIndex;this.getMatrixAt(v,Rn),this.getBoundingSphereAt(S,lr).applyMatrix4(Rn);let T=!1;if(d&&(T=!m.intersectsSphere(lr,n)),!T){const w=u[S],E=Yb.subVectors(lr.center,Sa).dot(Eg);Pd.push(w.start,w.count,E,v)}}const _=Pd.list,y=this.customSort;y===null?_.sort(s.transparent?Gb:Hb):y.call(this,_,n);for(let v=0,x=_.length;v<x;v++){const S=_[v];c[g]=S.start*a,h[g]=S.count,p[g]=S.index,g++}Pd.reset()}else for(let _=0,y=l.length;_<y;_++)if(l[_].visible&&l[_].active){const v=l[_].geometryIndex;let x=!1;if(d&&(this.getMatrixAt(_,Rn),this.getBoundingSphereAt(v,lr).applyMatrix4(Rn),x=!m.intersectsSphere(lr,n)),!x){const S=u[v];c[g]=S.start*a,h[g]=S.count,p[g]=_,g++}}f.needsUpdate=!0,this._multiDrawCount=g,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,r){this.onBeforeRender(e,null,i,s,r)}}class pn extends Xt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Xh=new A,qh=new A,Ag=new de,ba=new ni,yc=new Ot,Id=new A,Cg=new A;class xs extends tt{constructor(e=new ze,t=new pn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Xh.fromBufferAttribute(t,i-1),qh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Xh.distanceTo(qh);e.setAttribute("lineDistance",new be(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,r=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),yc.copy(n.boundingSphere),yc.applyMatrix4(i),yc.radius+=s,e.ray.intersectsSphere(yc)===!1)return;Ag.copy(i).invert(),ba.copy(e.ray).applyMatrix4(Ag);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,r.start),p=Math.min(h.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=c){const _=h.getX(m),y=h.getX(m+1),v=vc(this,e,ba,l,_,y,m);v&&t.push(v)}if(this.isLineLoop){const m=h.getX(p-1),g=h.getX(f),_=vc(this,e,ba,l,m,g,p-1);_&&t.push(_)}}else{const f=Math.max(0,r.start),p=Math.min(d.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=c){const _=vc(this,e,ba,l,m,m+1,m);_&&t.push(_)}if(this.isLineLoop){const m=vc(this,e,ba,l,p-1,f,p-1);m&&t.push(m)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function vc(o,e,t,n,i,s,r){const a=o.geometry.attributes.position;if(Xh.fromBufferAttribute(a,i),qh.fromBufferAttribute(a,s),t.distanceSqToSegment(Xh,qh,Id,Cg)>n)return;Id.applyMatrix4(o.matrixWorld);const c=e.ray.origin.distanceTo(Id);if(!(c<e.near||c>e.far))return{distance:c,point:Cg.clone().applyMatrix4(o.matrixWorld),index:r,face:null,faceIndex:null,barycoord:null,object:o}}const Rg=new A,Pg=new A;class Li extends xs{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Rg.fromBufferAttribute(t,i),Pg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Rg.distanceTo(Pg);e.setAttribute("lineDistance",new be(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class $p extends xs{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Nl extends Xt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Ig=new de,$f=new ni,Mc=new Ot,Sc=new A;class Au extends tt{constructor(e=new ze,t=new Nl){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,r=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mc.copy(n.boundingSphere),Mc.applyMatrix4(i),Mc.radius+=s,e.ray.intersectsSphere(Mc)===!1)return;Ig.copy(i).invert(),$f.copy(e.ray).applyMatrix4(Ig);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,u=n.attributes.position;if(c!==null){const d=Math.max(0,r.start),f=Math.min(c.count,r.start+r.count);for(let p=d,m=f;p<m;p++){const g=c.getX(p);Sc.fromBufferAttribute(u,g),Lg(Sc,g,l,i,e,t,this)}}else{const d=Math.max(0,r.start),f=Math.min(u.count,r.start+r.count);for(let p=d,m=f;p<m;p++)Sc.fromBufferAttribute(u,p),Lg(Sc,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Lg(o,e,t,n,i,s,r){const a=$f.distanceSqToPoint(o);if(a<t){const l=new A;$f.closestPointToPoint(o,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:r})}}class Sy extends Mt{constructor(e,t,n,i,s=Tt,r=Tt,a,l,c){super(e,t,n,i,s,r,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Zb extends Sy{constructor(e,t,n,i,s,r,a,l){super({},e,t,n,i,s,r,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class jb extends Mt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Gt,this.minFilter=Gt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Cu extends Mt{constructor(e,t,n,i,s,r,a,l,c,h,u,d){super(null,r,a,l,c,h,i,s,u,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Kb extends Cu{constructor(e,t,n,i,s,r){super(e,t,n,s,r),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Yn,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Jb extends Cu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,gs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Qb extends Mt{constructor(e,t,n,i,s,r,a,l,c){super(e,t,n,i,s,r,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ru extends Mt{constructor(e,t,n=_s,i,s,r,a=Gt,l=Gt,c,h=Yo){if(h!==Yo&&h!==$o)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,s,r,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new hs(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class eT extends Ru{constructor(e=1,t=1,n=1){super(e,t),this.isDepthArrayTexture=!0,this.image={width:e,height:t,depth:n},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Pu extends ze{constructor(e=1,t=1,n=4,i=8,s=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i,heightSegments:s},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),s=Math.max(1,Math.floor(s));const r=[],a=[],l=[],c=[],h=t/2,u=Math.PI/2*e,d=t,f=2*u+d,p=n*2+s,m=i+1,g=new A,_=new A;for(let y=0;y<=p;y++){let v=0,x=0,S=0,T=0;if(y<=n){const M=y/n,b=M*Math.PI/2;x=-h-e*Math.cos(b),S=e*Math.sin(b),T=-e*Math.cos(b),v=M*u}else if(y<=n+s){const M=(y-n)/s;x=-h+M*t,S=e,T=0,v=u+M*d}else{const M=(y-n-s)/n,b=M*Math.PI/2;x=h+e*Math.sin(b),S=e*Math.cos(b),T=e*Math.sin(b),v=u+d+M*u}const w=Math.max(0,Math.min(1,v/f));let E=0;y===0?E=.5/i:y===p&&(E=-.5/i);for(let M=0;M<=i;M++){const b=M/i,I=b*Math.PI*2,D=Math.sin(I),U=Math.cos(I);_.x=-S*U,_.y=x,_.z=S*D,a.push(_.x,_.y,_.z),g.set(-S*U,T,S*D),g.normalize(),l.push(g.x,g.y,g.z),c.push(b+E,w)}if(y>0){const M=(y-1)*m;for(let b=0;b<i;b++){const I=M+b,D=M+b+1,U=y*m+b,O=y*m+b+1;r.push(I,D,U),r.push(D,O,U)}}}this.setIndex(r),this.setAttribute("position",new be(a,3)),this.setAttribute("normal",new be(l,3)),this.setAttribute("uv",new be(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pu(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class Iu extends ze{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],r=[],a=[],l=[],c=new A,h=new G;r.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=n+u/t*i;c.x=e*Math.cos(f),c.y=e*Math.sin(f),r.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(r[d]/e+1)/2,h.y=(r[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new be(r,3)),this.setAttribute("normal",new be(a,3)),this.setAttribute("uv",new be(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Iu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Fl extends ze{constructor(e=1,t=1,n=1,i=32,s=1,r=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const h=[],u=[],d=[],f=[];let p=0;const m=[],g=n/2;let _=0;y(),r===!1&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new be(u,3)),this.setAttribute("normal",new be(d,3)),this.setAttribute("uv",new be(f,2));function y(){const x=new A,S=new A;let T=0;const w=(t-e)/n;for(let E=0;E<=s;E++){const M=[],b=E/s,I=b*(t-e)+e;for(let D=0;D<=i;D++){const U=D/i,O=U*l+a,V=Math.sin(O),F=Math.cos(O);S.x=I*V,S.y=-b*n+g,S.z=I*F,u.push(S.x,S.y,S.z),x.set(V,w,F).normalize(),d.push(x.x,x.y,x.z),f.push(U,1-b),M.push(p++)}m.push(M)}for(let E=0;E<i;E++)for(let M=0;M<s;M++){const b=m[M][E],I=m[M+1][E],D=m[M+1][E+1],U=m[M][E+1];(e>0||M!==0)&&(h.push(b,I,U),T+=3),(t>0||M!==s-1)&&(h.push(I,D,U),T+=3)}c.addGroup(_,T,0),_+=T}function v(x){const S=p,T=new G,w=new A;let E=0;const M=x===!0?e:t,b=x===!0?1:-1;for(let D=1;D<=i;D++)u.push(0,g*b,0),d.push(0,b,0),f.push(.5,.5),p++;const I=p;for(let D=0;D<=i;D++){const O=D/i*l+a,V=Math.cos(O),F=Math.sin(O);w.x=M*F,w.y=g*b,w.z=M*V,u.push(w.x,w.y,w.z),d.push(0,b,0),T.x=V*.5+.5,T.y=F*.5*b+.5,f.push(T.x,T.y),p++}for(let D=0;D<i;D++){const U=S+D,O=I+D;x===!0?h.push(O,O+1,U):h.push(O+1,O,U),E+=3}c.addGroup(_,E,x===!0?1:2),_+=E}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fl(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Bl extends Fl{constructor(e=1,t=1,n=32,i=1,s=!1,r=0,a=Math.PI*2){super(0,e,t,n,i,s,r,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:r,thetaLength:a}}static fromJSON(e){return new Bl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Qs extends ze{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],r=[];a(i),c(n),h(),this.setAttribute("position",new be(s,3)),this.setAttribute("normal",new be(s.slice(),3)),this.setAttribute("uv",new be(r,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(y){const v=new A,x=new A,S=new A;for(let T=0;T<t.length;T+=3)f(t[T+0],v),f(t[T+1],x),f(t[T+2],S),l(v,x,S,y)}function l(y,v,x,S){const T=S+1,w=[];for(let E=0;E<=T;E++){w[E]=[];const M=y.clone().lerp(x,E/T),b=v.clone().lerp(x,E/T),I=T-E;for(let D=0;D<=I;D++)D===0&&E===T?w[E][D]=M:w[E][D]=M.clone().lerp(b,D/I)}for(let E=0;E<T;E++)for(let M=0;M<2*(T-E)-1;M++){const b=Math.floor(M/2);M%2===0?(d(w[E][b+1]),d(w[E+1][b]),d(w[E][b])):(d(w[E][b+1]),d(w[E+1][b+1]),d(w[E+1][b]))}}function c(y){const v=new A;for(let x=0;x<s.length;x+=3)v.x=s[x+0],v.y=s[x+1],v.z=s[x+2],v.normalize().multiplyScalar(y),s[x+0]=v.x,s[x+1]=v.y,s[x+2]=v.z}function h(){const y=new A;for(let v=0;v<s.length;v+=3){y.x=s[v+0],y.y=s[v+1],y.z=s[v+2];const x=g(y)/2/Math.PI+.5,S=_(y)/Math.PI+.5;r.push(x,1-S)}p(),u()}function u(){for(let y=0;y<r.length;y+=6){const v=r[y+0],x=r[y+2],S=r[y+4],T=Math.max(v,x,S),w=Math.min(v,x,S);T>.9&&w<.1&&(v<.2&&(r[y+0]+=1),x<.2&&(r[y+2]+=1),S<.2&&(r[y+4]+=1))}}function d(y){s.push(y.x,y.y,y.z)}function f(y,v){const x=y*3;v.x=e[x+0],v.y=e[x+1],v.z=e[x+2]}function p(){const y=new A,v=new A,x=new A,S=new A,T=new G,w=new G,E=new G;for(let M=0,b=0;M<s.length;M+=9,b+=6){y.set(s[M+0],s[M+1],s[M+2]),v.set(s[M+3],s[M+4],s[M+5]),x.set(s[M+6],s[M+7],s[M+8]),T.set(r[b+0],r[b+1]),w.set(r[b+2],r[b+3]),E.set(r[b+4],r[b+5]),S.copy(y).add(v).add(x).divideScalar(3);const I=g(S);m(T,b+0,y,I),m(w,b+2,v,I),m(E,b+4,x,I)}}function m(y,v,x,S){S<0&&y.x===1&&(r[v]=y.x-1),x.x===0&&x.z===0&&(r[v]=S/2/Math.PI+.5)}function g(y){return Math.atan2(y.z,-y.x)}function _(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qs(e.vertices,e.indices,e.radius,e.details)}}class Lu extends Qs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],r=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,r,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Lu(e.radius,e.detail)}}const bc=new A,Tc=new A,Ld=new A,wc=new bn;class by extends ze{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Br*t),r=e.getIndex(),a=e.getAttribute("position"),l=r?r.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){r?(c[0]=r.getX(p),c[1]=r.getX(p+1),c[2]=r.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:m,b:g,c:_}=wc;if(m.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),_.fromBufferAttribute(a,c[2]),wc.getNormal(Ld),u[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,u[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,u[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let y=0;y<3;y++){const v=(y+1)%3,x=u[y],S=u[v],T=wc[h[y]],w=wc[h[v]],E=`${x}_${S}`,M=`${S}_${x}`;M in d&&d[M]?(Ld.dot(d[M].normal)<=s&&(f.push(T.x,T.y,T.z),f.push(w.x,w.y,w.z)),d[M]=null):E in d||(d[E]={index0:c[y],index1:c[v],normal:Ld.clone()})}}for(const p in d)if(d[p]){const{index0:m,index1:g}=d[p];bc.fromBufferAttribute(a,m),Tc.fromBufferAttribute(a,g),f.push(bc.x,bc.y,bc.z),f.push(Tc.x,Tc.y,Tc.z)}this.setAttribute("position",new be(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Di{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let r=1;r<=e;r++)n=this.getPoint(r/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const s=n.length;let r;t?r=t:r=e*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-r,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===r)return i/(s-1);const h=n[i],d=n[i+1]-h,f=(r-h)/d;return(i+f)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const r=this.getPoint(i),a=this.getPoint(s),l=t||(r.isVector2?new G:new A);return l.copy(a).sub(r).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new A,i=[],s=[],r=[],a=new A,l=new de;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new A)}s[0]=new A,r[0]=new A;let c=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),r[0].crossVectors(i[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),r[f]=r[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Xe(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,p))}r[f].crossVectors(i[f],s[f])}if(t===!0){let f=Math.acos(Xe(s[0].dot(s[e]),-1,1));f/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),r[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:r}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Du extends Di{constructor(e=0,t=0,n=1,i=1,s=0,r=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new G){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(r?s=0:s=i),this.aClockwise===!0&&!r&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Ty extends Du{constructor(e,t,n,i,s,r){super(e,t,n,n,i,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function Zp(){let o=0,e=0,t=0,n=0;function i(s,r,a,l){o=s,e=a,t=-3*s+3*r-2*a-l,n=2*s-2*r+a+l}return{initCatmullRom:function(s,r,a,l,c){i(r,a,c*(a-s),c*(l-r))},initNonuniformCatmullRom:function(s,r,a,l,c,h,u){let d=(r-s)/c-(a-s)/(c+h)+(a-r)/h,f=(a-r)/h-(l-r)/(h+u)+(l-a)/u;d*=h,f*=h,i(r,a,d,f)},calc:function(s){const r=s*s,a=r*s;return o+e*s+t*r+n*a}}}const Ec=new A,Dd=new Zp,Ud=new Zp,Od=new Zp;class wy extends Di{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new A){const n=t,i=this.points,s=i.length,r=(s-(this.closed?0:1))*e;let a=Math.floor(r),l=r-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,h;this.closed||a>0?c=i[(a-1)%s]:(Ec.subVectors(i[0],i[1]).add(i[0]),c=Ec);const u=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?h=i[(a+2)%s]:(Ec.subVectors(i[s-1],i[s-2]).add(i[s-1]),h=Ec),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),m=Math.pow(u.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(h),f);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),Dd.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,m,g),Ud.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,m,g),Od.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,m,g)}else this.curveType==="catmullrom"&&(Dd.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),Ud.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),Od.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return n.set(Dd.calc(l),Ud.calc(l),Od.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new A().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Dg(o,e,t,n,i){const s=(n-e)*.5,r=(i-t)*.5,a=o*o,l=o*a;return(2*t-2*n+s+r)*l+(-3*t+3*n-2*s-r)*a+s*o+t}function tT(o,e){const t=1-o;return t*t*e}function nT(o,e){return 2*(1-o)*o*e}function iT(o,e){return o*o*e}function tl(o,e,t,n){return tT(o,e)+nT(o,t)+iT(o,n)}function sT(o,e){const t=1-o;return t*t*t*e}function rT(o,e){const t=1-o;return 3*t*t*o*e}function oT(o,e){return 3*(1-o)*o*o*e}function aT(o,e){return o*o*o*e}function nl(o,e,t,n,i){return sT(o,e)+rT(o,t)+oT(o,n)+aT(o,i)}class jp extends Di{constructor(e=new G,t=new G,n=new G,i=new G){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new G){const n=t,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(nl(e,i.x,s.x,r.x,a.x),nl(e,i.y,s.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Ey extends Di{constructor(e=new A,t=new A,n=new A,i=new A){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new A){const n=t,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(nl(e,i.x,s.x,r.x,a.x),nl(e,i.y,s.y,r.y,a.y),nl(e,i.z,s.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Kp extends Di{constructor(e=new G,t=new G){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new G){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new G){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ay extends Di{constructor(e=new A,t=new A){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new A){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new A){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jp extends Di{constructor(e=new G,t=new G,n=new G){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new G){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(tl(e,i.x,s.x,r.x),tl(e,i.y,s.y,r.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Qp extends Di{constructor(e=new A,t=new A,n=new A){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new A){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(tl(e,i.x,s.x,r.x),tl(e,i.y,s.y,r.y),tl(e,i.z,s.z,r.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class em extends Di{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new G){const n=t,i=this.points,s=(i.length-1)*e,r=Math.floor(s),a=s-r,l=i[r===0?r:r-1],c=i[r],h=i[r>i.length-2?i.length-1:r+1],u=i[r>i.length-3?i.length-1:r+2];return n.set(Dg(a,l.x,c.x,h.x,u.x),Dg(a,l.y,c.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new G().fromArray(i))}return this}}var Yh=Object.freeze({__proto__:null,ArcCurve:Ty,CatmullRomCurve3:wy,CubicBezierCurve:jp,CubicBezierCurve3:Ey,EllipseCurve:Du,LineCurve:Kp,LineCurve3:Ay,QuadraticBezierCurve:Jp,QuadraticBezierCurve3:Qp,SplineCurve:em});class Cy extends Di{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Yh[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const r=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-r/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const r=s[i],a=r.isEllipseCurve?e*2:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?e*r.points.length:e,l=r.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Yh[i.type]().fromJSON(i))}return this}}class $h extends Cy{constructor(e){super(),this.type="Path",this.currentPoint=new G,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Kp(this.currentPoint.clone(),new G(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Jp(this.currentPoint.clone(),new G(e,t),new G(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,r){const a=new jp(this.currentPoint.clone(),new G(e,t),new G(n,i),new G(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new em(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,r){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,s,r),this}absarc(e,t,n,i,s,r){return this.absellipse(e,t,n,n,i,s,r),this}ellipse(e,t,n,i,s,r,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,n,i,s,r,a,l),this}absellipse(e,t,n,i,s,r,a,l){const c=new Du(e,t,n,i,s,r,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class kr extends $h{constructor(e){super(e),this.uuid=Zn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new $h().fromJSON(i))}return this}}function lT(o,e,t=2){const n=e&&e.length,i=n?e[0]*t:o.length;let s=Ry(o,0,i,t,!0);const r=[];if(!s||s.next===s.prev)return r;let a,l,c;if(n&&(s=fT(o,e,s,t)),o.length>80*t){a=1/0,l=1/0;let h=-1/0,u=-1/0;for(let d=t;d<i;d+=t){const f=o[d],p=o[d+1];f<a&&(a=f),p<l&&(l=p),f>h&&(h=f),p>u&&(u=p)}c=Math.max(h-a,u-l),c=c!==0?32767/c:0}return pl(s,r,t,a,l,c,0),r}function Ry(o,e,t,n,i){let s;if(i===TT(o,e,t,n)>0)for(let r=e;r<t;r+=n)s=Ug(r/n|0,o[r],o[r+1],s);else for(let r=t-n;r>=e;r-=n)s=Ug(r/n|0,o[r],o[r+1],s);return s&&Qo(s,s.next)&&(gl(s),s=s.next),s}function Yr(o,e){if(!o)return o;e||(e=o);let t=o,n;do if(n=!1,!t.steiner&&(Qo(t,t.next)||Ct(t.prev,t,t.next)===0)){if(gl(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function pl(o,e,t,n,i,s,r){if(!o)return;!r&&s&&xT(o,n,i,s);let a=o;for(;o.prev!==o.next;){const l=o.prev,c=o.next;if(s?hT(o,n,i,s):cT(o)){e.push(l.i,o.i,c.i),gl(o),o=c.next,a=c.next;continue}if(o=c,o===a){r?r===1?(o=uT(Yr(o),e),pl(o,e,t,n,i,s,2)):r===2&&dT(o,e,t,n,i,s):pl(Yr(o),e,t,n,i,s,1);break}}}function cT(o){const e=o.prev,t=o,n=o.next;if(Ct(e,t,n)>=0)return!1;const i=e.x,s=t.x,r=n.x,a=e.y,l=t.y,c=n.y,h=Math.min(i,s,r),u=Math.min(a,l,c),d=Math.max(i,s,r),f=Math.max(a,l,c);let p=n.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&Ha(i,a,s,l,r,c,p.x,p.y)&&Ct(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function hT(o,e,t,n){const i=o.prev,s=o,r=o.next;if(Ct(i,s,r)>=0)return!1;const a=i.x,l=s.x,c=r.x,h=i.y,u=s.y,d=r.y,f=Math.min(a,l,c),p=Math.min(h,u,d),m=Math.max(a,l,c),g=Math.max(h,u,d),_=Zf(f,p,e,t,n),y=Zf(m,g,e,t,n);let v=o.prevZ,x=o.nextZ;for(;v&&v.z>=_&&x&&x.z<=y;){if(v.x>=f&&v.x<=m&&v.y>=p&&v.y<=g&&v!==i&&v!==r&&Ha(a,h,l,u,c,d,v.x,v.y)&&Ct(v.prev,v,v.next)>=0||(v=v.prevZ,x.x>=f&&x.x<=m&&x.y>=p&&x.y<=g&&x!==i&&x!==r&&Ha(a,h,l,u,c,d,x.x,x.y)&&Ct(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;v&&v.z>=_;){if(v.x>=f&&v.x<=m&&v.y>=p&&v.y<=g&&v!==i&&v!==r&&Ha(a,h,l,u,c,d,v.x,v.y)&&Ct(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;x&&x.z<=y;){if(x.x>=f&&x.x<=m&&x.y>=p&&x.y<=g&&x!==i&&x!==r&&Ha(a,h,l,u,c,d,x.x,x.y)&&Ct(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function uT(o,e){let t=o;do{const n=t.prev,i=t.next.next;!Qo(n,i)&&Iy(n,t,t.next,i)&&ml(n,i)&&ml(i,n)&&(e.push(n.i,t.i,i.i),gl(t),gl(t.next),t=o=i),t=t.next}while(t!==o);return Yr(t)}function dT(o,e,t,n,i,s){let r=o;do{let a=r.next.next;for(;a!==r.prev;){if(r.i!==a.i&&MT(r,a)){let l=Ly(r,a);r=Yr(r,r.next),l=Yr(l,l.next),pl(r,e,t,n,i,s,0),pl(l,e,t,n,i,s,0);return}a=a.next}r=r.next}while(r!==o)}function fT(o,e,t,n){const i=[];for(let s=0,r=e.length;s<r;s++){const a=e[s]*n,l=s<r-1?e[s+1]*n:o.length,c=Ry(o,a,l,n,!1);c===c.next&&(c.steiner=!0),i.push(vT(c))}i.sort(pT);for(let s=0;s<i.length;s++)t=mT(i[s],t);return t}function pT(o,e){let t=o.x-e.x;if(t===0&&(t=o.y-e.y,t===0)){const n=(o.next.y-o.y)/(o.next.x-o.x),i=(e.next.y-e.y)/(e.next.x-e.x);t=n-i}return t}function mT(o,e){const t=gT(o,e);if(!t)return e;const n=Ly(t,o);return Yr(n,n.next),Yr(t,t.next)}function gT(o,e){let t=e;const n=o.x,i=o.y;let s=-1/0,r;if(Qo(o,t))return t;do{if(Qo(o,t.next))return t.next;if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const u=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=n&&u>s&&(s=u,r=t.x<t.next.x?t:t.next,u===n))return r}t=t.next}while(t!==e);if(!r)return null;const a=r,l=r.x,c=r.y;let h=1/0;t=r;do{if(n>=t.x&&t.x>=l&&n!==t.x&&Py(i<c?n:s,i,l,c,i<c?s:n,i,t.x,t.y)){const u=Math.abs(i-t.y)/(n-t.x);ml(t,o)&&(u<h||u===h&&(t.x>r.x||t.x===r.x&&_T(r,t)))&&(r=t,h=u)}t=t.next}while(t!==a);return r}function _T(o,e){return Ct(o.prev,o,e.prev)<0&&Ct(e.next,o,o.next)<0}function xT(o,e,t,n){let i=o;do i.z===0&&(i.z=Zf(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==o);i.prevZ.nextZ=null,i.prevZ=null,yT(i)}function yT(o){let e,t=1;do{let n=o,i;o=null;let s=null;for(e=0;n;){e++;let r=n,a=0;for(let c=0;c<t&&(a++,r=r.nextZ,!!r);c++);let l=t;for(;a>0||l>0&&r;)a!==0&&(l===0||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,l--),s?s.nextZ=i:o=i,i.prevZ=s,s=i;n=r}s.nextZ=null,t*=2}while(e>1);return o}function Zf(o,e,t,n,i){return o=(o-t)*i|0,e=(e-n)*i|0,o=(o|o<<8)&16711935,o=(o|o<<4)&252645135,o=(o|o<<2)&858993459,o=(o|o<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,o|e<<1}function vT(o){let e=o,t=o;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==o);return t}function Py(o,e,t,n,i,s,r,a){return(i-r)*(e-a)>=(o-r)*(s-a)&&(o-r)*(n-a)>=(t-r)*(e-a)&&(t-r)*(s-a)>=(i-r)*(n-a)}function Ha(o,e,t,n,i,s,r,a){return!(o===r&&e===a)&&Py(o,e,t,n,i,s,r,a)}function MT(o,e){return o.next.i!==e.i&&o.prev.i!==e.i&&!ST(o,e)&&(ml(o,e)&&ml(e,o)&&bT(o,e)&&(Ct(o.prev,o,e.prev)||Ct(o,e.prev,e))||Qo(o,e)&&Ct(o.prev,o,o.next)>0&&Ct(e.prev,e,e.next)>0)}function Ct(o,e,t){return(e.y-o.y)*(t.x-e.x)-(e.x-o.x)*(t.y-e.y)}function Qo(o,e){return o.x===e.x&&o.y===e.y}function Iy(o,e,t,n){const i=Cc(Ct(o,e,t)),s=Cc(Ct(o,e,n)),r=Cc(Ct(t,n,o)),a=Cc(Ct(t,n,e));return!!(i!==s&&r!==a||i===0&&Ac(o,t,e)||s===0&&Ac(o,n,e)||r===0&&Ac(t,o,n)||a===0&&Ac(t,e,n))}function Ac(o,e,t){return e.x<=Math.max(o.x,t.x)&&e.x>=Math.min(o.x,t.x)&&e.y<=Math.max(o.y,t.y)&&e.y>=Math.min(o.y,t.y)}function Cc(o){return o>0?1:o<0?-1:0}function ST(o,e){let t=o;do{if(t.i!==o.i&&t.next.i!==o.i&&t.i!==e.i&&t.next.i!==e.i&&Iy(t,t.next,o,e))return!0;t=t.next}while(t!==o);return!1}function ml(o,e){return Ct(o.prev,o,o.next)<0?Ct(o,e,o.next)>=0&&Ct(o,o.prev,e)>=0:Ct(o,e,o.prev)<0||Ct(o,o.next,e)<0}function bT(o,e){let t=o,n=!1;const i=(o.x+e.x)/2,s=(o.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==o);return n}function Ly(o,e){const t=jf(o.i,o.x,o.y),n=jf(e.i,e.x,e.y),i=o.next,s=e.prev;return o.next=e,e.prev=o,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Ug(o,e,t,n){const i=jf(o,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function gl(o){o.next.prev=o.prev,o.prev.next=o.next,o.prevZ&&(o.prevZ.nextZ=o.nextZ),o.nextZ&&(o.nextZ.prevZ=o.prevZ)}function jf(o,e,t){return{i:o,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function TT(o,e,t,n){let i=0;for(let s=e,r=t-n;s<t;s+=n)i+=(o[r]-o[s])*(o[s+1]+o[r+1]),r=s;return i}class wT{static triangulate(e,t,n=2){return lT(e,t,n)}}class Ii{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Ii.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Og(e),Ng(n,e);let r=e.length;t.forEach(Og);for(let l=0;l<t.length;l++)i.push(r),r+=t[l].length,Ng(n,t[l]);const a=wT.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Og(o){const e=o.length;e>2&&o[e-1].equals(o[0])&&o.pop()}function Ng(o,e){for(let t=0;t<e.length;t++)o.push(e[t].x),o.push(e[t].y)}class Uu extends ze{constructor(e=new kr([new G(.5,.5),new G(-.5,.5),new G(-.5,-.5),new G(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];r(c)}this.setAttribute("position",new be(i,3)),this.setAttribute("uv",new be(s,2)),this.computeVertexNormals();function r(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:ET;let v,x=!1,S,T,w,E;_&&(v=_.getSpacedPoints(h),x=!0,d=!1,S=_.computeFrenetFrames(h,!1),T=new A,w=new A,E=new A),d||(g=0,f=0,p=0,m=0);const M=a.extractPoints(c);let b=M.shape;const I=M.holes;if(!Ii.isClockWise(b)){b=b.reverse();for(let L=0,pe=I.length;L<pe;L++){const ie=I[L];Ii.isClockWise(ie)&&(I[L]=ie.reverse())}}function U(L){const ie=10000000000000001e-36;let ce=L[0];for(let J=1;J<=L.length;J++){const Pe=J%L.length,re=L[Pe],P=re.x-ce.x,C=re.y-ce.y,z=P*P+C*C,K=Math.max(Math.abs(re.x),Math.abs(re.y),Math.abs(ce.x),Math.abs(ce.y)),ee=ie*K*K;if(z<=ee){L.splice(Pe,1),J--;continue}ce=re}}U(b),I.forEach(U);const O=I.length,V=b;for(let L=0;L<O;L++){const pe=I[L];b=b.concat(pe)}function F(L,pe,ie){return pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),L.clone().addScaledVector(pe,ie)}const $=b.length;function H(L,pe,ie){let ce,J,Pe;const re=L.x-pe.x,P=L.y-pe.y,C=ie.x-L.x,z=ie.y-L.y,K=re*re+P*P,ee=re*z-P*C;if(Math.abs(ee)>Number.EPSILON){const Z=Math.sqrt(K),Ce=Math.sqrt(C*C+z*z),ge=pe.x-P/Z,Le=pe.y+re/Z,Ne=ie.x-z/Ce,oe=ie.y+C/Ce,Se=((Ne-ge)*z-(oe-Le)*C)/(re*z-P*C);ce=ge+re*Se-L.x,J=Le+P*Se-L.y;const Oe=ce*ce+J*J;if(Oe<=2)return new G(ce,J);Pe=Math.sqrt(Oe/2)}else{let Z=!1;re>Number.EPSILON?C>Number.EPSILON&&(Z=!0):re<-Number.EPSILON?C<-Number.EPSILON&&(Z=!0):Math.sign(P)===Math.sign(z)&&(Z=!0),Z?(ce=-P,J=re,Pe=Math.sqrt(K)):(ce=re,J=P,Pe=Math.sqrt(K/2))}return new G(ce/Pe,J/Pe)}const te=[];for(let L=0,pe=V.length,ie=pe-1,ce=L+1;L<pe;L++,ie++,ce++)ie===pe&&(ie=0),ce===pe&&(ce=0),te[L]=H(V[L],V[ie],V[ce]);const ne=[];let se,Me=te.concat();for(let L=0,pe=O;L<pe;L++){const ie=I[L];se=[];for(let ce=0,J=ie.length,Pe=J-1,re=ce+1;ce<J;ce++,Pe++,re++)Pe===J&&(Pe=0),re===J&&(re=0),se[ce]=H(ie[ce],ie[Pe],ie[re]);ne.push(se),Me=Me.concat(se)}let Fe;if(g===0)Fe=Ii.triangulateShape(V,I);else{const L=[],pe=[];for(let ie=0;ie<g;ie++){const ce=ie/g,J=f*Math.cos(ce*Math.PI/2),Pe=p*Math.sin(ce*Math.PI/2)+m;for(let re=0,P=V.length;re<P;re++){const C=F(V[re],te[re],Pe);Ie(C.x,C.y,-J),ce===0&&L.push(C)}for(let re=0,P=O;re<P;re++){const C=I[re];se=ne[re];const z=[];for(let K=0,ee=C.length;K<ee;K++){const Z=F(C[K],se[K],Pe);Ie(Z.x,Z.y,-J),ce===0&&z.push(Z)}ce===0&&pe.push(z)}}Fe=Ii.triangulateShape(L,pe)}const q=Fe.length,Y=p+m;for(let L=0;L<$;L++){const pe=d?F(b[L],Me[L],Y):b[L];x?(w.copy(S.normals[0]).multiplyScalar(pe.x),T.copy(S.binormals[0]).multiplyScalar(pe.y),E.copy(v[0]).add(w).add(T),Ie(E.x,E.y,E.z)):Ie(pe.x,pe.y,0)}for(let L=1;L<=h;L++)for(let pe=0;pe<$;pe++){const ie=d?F(b[pe],Me[pe],Y):b[pe];x?(w.copy(S.normals[L]).multiplyScalar(ie.x),T.copy(S.binormals[L]).multiplyScalar(ie.y),E.copy(v[L]).add(w).add(T),Ie(E.x,E.y,E.z)):Ie(ie.x,ie.y,u/h*L)}for(let L=g-1;L>=0;L--){const pe=L/g,ie=f*Math.cos(pe*Math.PI/2),ce=p*Math.sin(pe*Math.PI/2)+m;for(let J=0,Pe=V.length;J<Pe;J++){const re=F(V[J],te[J],ce);Ie(re.x,re.y,u+ie)}for(let J=0,Pe=I.length;J<Pe;J++){const re=I[J];se=ne[J];for(let P=0,C=re.length;P<C;P++){const z=F(re[P],se[P],ce);x?Ie(z.x,z.y+v[h-1].y,v[h-1].x+ie):Ie(z.x,z.y,u+ie)}}}fe(),he();function fe(){const L=i.length/3;if(d){let pe=0,ie=$*pe;for(let ce=0;ce<q;ce++){const J=Fe[ce];Re(J[2]+ie,J[1]+ie,J[0]+ie)}pe=h+g*2,ie=$*pe;for(let ce=0;ce<q;ce++){const J=Fe[ce];Re(J[0]+ie,J[1]+ie,J[2]+ie)}}else{for(let pe=0;pe<q;pe++){const ie=Fe[pe];Re(ie[2],ie[1],ie[0])}for(let pe=0;pe<q;pe++){const ie=Fe[pe];Re(ie[0]+$*h,ie[1]+$*h,ie[2]+$*h)}}n.addGroup(L,i.length/3-L,0)}function he(){const L=i.length/3;let pe=0;we(V,pe),pe+=V.length;for(let ie=0,ce=I.length;ie<ce;ie++){const J=I[ie];we(J,pe),pe+=J.length}n.addGroup(L,i.length/3-L,1)}function we(L,pe){let ie=L.length;for(;--ie>=0;){const ce=ie;let J=ie-1;J<0&&(J=L.length-1);for(let Pe=0,re=h+g*2;Pe<re;Pe++){const P=$*Pe,C=$*(Pe+1),z=pe+ce+P,K=pe+J+P,ee=pe+J+C,Z=pe+ce+C;ct(z,K,ee,Z)}}}function Ie(L,pe,ie){l.push(L),l.push(pe),l.push(ie)}function Re(L,pe,ie){Ke(L),Ke(pe),Ke(ie);const ce=i.length/3,J=y.generateTopUV(n,i,ce-3,ce-2,ce-1);Be(J[0]),Be(J[1]),Be(J[2])}function ct(L,pe,ie,ce){Ke(L),Ke(pe),Ke(ce),Ke(pe),Ke(ie),Ke(ce);const J=i.length/3,Pe=y.generateSideWallUV(n,i,J-6,J-3,J-2,J-1);Be(Pe[0]),Be(Pe[1]),Be(Pe[3]),Be(Pe[1]),Be(Pe[2]),Be(Pe[3])}function Ke(L){i.push(l[L*3+0]),i.push(l[L*3+1]),i.push(l[L*3+2])}function Be(L){s.push(L.x),s.push(L.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return AT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,r=e.shapes.length;s<r;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Yh[i.type]().fromJSON(i)),new Uu(n,e.options)}}const ET={generateTopUV:function(o,e,t,n,i){const s=e[t*3],r=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[i*3],h=e[i*3+1];return[new G(s,r),new G(a,l),new G(c,h)]},generateSideWallUV:function(o,e,t,n,i,s){const r=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],h=e[n*3+1],u=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],m=e[s*3],g=e[s*3+1],_=e[s*3+2];return Math.abs(a-h)<Math.abs(r-c)?[new G(r,1-l),new G(c,1-u),new G(d,1-p),new G(m,1-_)]:[new G(a,1-l),new G(h,1-u),new G(f,1-p),new G(g,1-_)]}};function AT(o,e,t){if(t.shapes=[],Array.isArray(o))for(let n=0,i=o.length;n<i;n++){const s=o[n];t.shapes.push(s.uuid)}else t.shapes.push(o.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Ou extends Qs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ou(e.radius,e.detail)}}class Nu extends ze{constructor(e=[new G(0,-.5),new G(.5,0),new G(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Xe(i,0,Math.PI*2);const s=[],r=[],a=[],l=[],c=[],h=1/t,u=new A,d=new G,f=new A,p=new A,m=new A;let g=0,_=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:g=e[y+1].x-e[y].x,_=e[y+1].y-e[y].y,f.x=_*1,f.y=-g,f.z=_*0,m.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(m.x,m.y,m.z);break;default:g=e[y+1].x-e[y].x,_=e[y+1].y-e[y].y,f.x=_*1,f.y=-g,f.z=_*0,p.copy(f),f.x+=m.x,f.y+=m.y,f.z+=m.z,f.normalize(),l.push(f.x,f.y,f.z),m.copy(p)}for(let y=0;y<=t;y++){const v=n+y*h*i,x=Math.sin(v),S=Math.cos(v);for(let T=0;T<=e.length-1;T++){u.x=e[T].x*x,u.y=e[T].y,u.z=e[T].x*S,r.push(u.x,u.y,u.z),d.x=y/t,d.y=T/(e.length-1),a.push(d.x,d.y);const w=l[3*T+0]*x,E=l[3*T+1],M=l[3*T+0]*S;c.push(w,E,M)}}for(let y=0;y<t;y++)for(let v=0;v<e.length-1;v++){const x=v+y*e.length,S=x,T=x+e.length,w=x+e.length+1,E=x+1;s.push(S,T,E),s.push(w,E,T)}this.setIndex(s),this.setAttribute("position",new be(r,3)),this.setAttribute("uv",new be(a,2)),this.setAttribute("normal",new be(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nu(e.points,e.segments,e.phiStart,e.phiLength)}}class kl extends Qs{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new kl(e.radius,e.detail)}}class Ms extends ze{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,r=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],m=[],g=[];for(let _=0;_<h;_++){const y=_*d-r;for(let v=0;v<c;v++){const x=v*u-s;p.push(x,-y,0),m.push(0,0,1),g.push(v/a),g.push(1-_/l)}}for(let _=0;_<l;_++)for(let y=0;y<a;y++){const v=y+c*_,x=y+c*(_+1),S=y+1+c*(_+1),T=y+1+c*_;f.push(v,x,T),f.push(x,S,T)}this.setIndex(f),this.setAttribute("position",new be(p,3)),this.setAttribute("normal",new be(m,3)),this.setAttribute("uv",new be(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ms(e.width,e.height,e.widthSegments,e.heightSegments)}}class Fu extends ze{constructor(e=.5,t=1,n=32,i=1,s=0,r=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:r},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/i,f=new A,p=new G;for(let m=0;m<=i;m++){for(let g=0;g<=n;g++){const _=s+g/n*r;f.x=u*Math.cos(_),f.y=u*Math.sin(_),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let m=0;m<i;m++){const g=m*(n+1);for(let _=0;_<n;_++){const y=_+g,v=y,x=y+n+1,S=y+n+2,T=y+1;a.push(v,x,T),a.push(x,S,T)}}this.setIndex(a),this.setAttribute("position",new be(l,3)),this.setAttribute("normal",new be(c,3)),this.setAttribute("uv",new be(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Bu extends ze{constructor(e=new kr([new G(0,.5),new G(-.5,-.5),new G(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],r=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new be(i,3)),this.setAttribute("normal",new be(s,3)),this.setAttribute("uv",new be(r,2));function c(h){const u=i.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;Ii.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,_=p.length;g<_;g++){const y=p[g];Ii.isClockWise(y)===!0&&(p[g]=y.reverse())}const m=Ii.triangulateShape(f,p);for(let g=0,_=p.length;g<_;g++){const y=p[g];f=f.concat(y)}for(let g=0,_=f.length;g<_;g++){const y=f[g];i.push(y.x,y.y,0),s.push(0,0,1),r.push(y.x,y.y)}for(let g=0,_=m.length;g<_;g++){const y=m[g],v=y[0]+u,x=y[1]+u,S=y[2]+u;n.push(v,x,S),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return CT(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const r=t[e.shapes[i]];n.push(r)}return new Bu(n,e.curveSegments)}}function CT(o,e){if(e.shapes=[],Array.isArray(o))for(let t=0,n=o.length;t<n;t++){const i=o[t];e.shapes.push(i.uuid)}else e.shapes.push(o.uuid);return e}class zl extends ze{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(r+a,Math.PI);let c=0;const h=[],u=new A,d=new A,f=[],p=[],m=[],g=[];for(let _=0;_<=n;_++){const y=[],v=_/n;let x=0;_===0&&r===0?x=.5/t:_===n&&l===Math.PI&&(x=-.5/t);for(let S=0;S<=t;S++){const T=S/t;u.x=-e*Math.cos(i+T*s)*Math.sin(r+v*a),u.y=e*Math.cos(r+v*a),u.z=e*Math.sin(i+T*s)*Math.sin(r+v*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),m.push(d.x,d.y,d.z),g.push(T+x,1-v),y.push(c++)}h.push(y)}for(let _=0;_<n;_++)for(let y=0;y<t;y++){const v=h[_][y+1],x=h[_][y],S=h[_+1][y],T=h[_+1][y+1];(_!==0||r>0)&&f.push(v,x,T),(_!==n-1||l<Math.PI)&&f.push(x,S,T)}this.setIndex(f),this.setAttribute("position",new be(p,3)),this.setAttribute("normal",new be(m,3)),this.setAttribute("uv",new be(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ku extends Qs{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ku(e.radius,e.detail)}}class zu extends ze{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const r=[],a=[],l=[],c=[],h=new A,u=new A,d=new A;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const m=p/i*s,g=f/n*Math.PI*2;u.x=(e+t*Math.cos(g))*Math.cos(m),u.y=(e+t*Math.cos(g))*Math.sin(m),u.z=t*Math.sin(g),a.push(u.x,u.y,u.z),h.x=e*Math.cos(m),h.y=e*Math.sin(m),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const m=(i+1)*f+p-1,g=(i+1)*(f-1)+p-1,_=(i+1)*(f-1)+p,y=(i+1)*f+p;r.push(m,g,y),r.push(g,_,y)}this.setIndex(r),this.setAttribute("position",new be(a,3)),this.setAttribute("normal",new be(l,3)),this.setAttribute("uv",new be(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Vu extends ze{constructor(e=1,t=.4,n=64,i=8,s=2,r=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:r},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],h=[],u=new A,d=new A,f=new A,p=new A,m=new A,g=new A,_=new A;for(let v=0;v<=n;++v){const x=v/n*s*Math.PI*2;y(x,s,r,e,f),y(x+.01,s,r,e,p),g.subVectors(p,f),_.addVectors(p,f),m.crossVectors(g,_),_.crossVectors(m,g),m.normalize(),_.normalize();for(let S=0;S<=i;++S){const T=S/i*Math.PI*2,w=-t*Math.cos(T),E=t*Math.sin(T);u.x=f.x+(w*_.x+E*m.x),u.y=f.y+(w*_.y+E*m.y),u.z=f.z+(w*_.z+E*m.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(v/n),h.push(S/i)}}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const S=(i+1)*(v-1)+(x-1),T=(i+1)*v+(x-1),w=(i+1)*v+x,E=(i+1)*(v-1)+x;a.push(S,T,E),a.push(T,w,E)}this.setIndex(a),this.setAttribute("position",new be(l,3)),this.setAttribute("normal",new be(c,3)),this.setAttribute("uv",new be(h,2));function y(v,x,S,T,w){const E=Math.cos(v),M=Math.sin(v),b=S/x*v,I=Math.cos(b);w.x=T*(2+I)*.5*E,w.y=T*(2+I)*M*.5,w.z=T*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Vu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Hu extends ze{constructor(e=new Qp(new A(-1,-1,0),new A(-1,1,0),new A(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const r=e.computeFrenetFrames(t,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const a=new A,l=new A,c=new G;let h=new A;const u=[],d=[],f=[],p=[];m(),this.setIndex(p),this.setAttribute("position",new be(u,3)),this.setAttribute("normal",new be(d,3)),this.setAttribute("uv",new be(f,2));function m(){for(let v=0;v<t;v++)g(v);g(s===!1?t:0),y(),_()}function g(v){h=e.getPointAt(v/t,h);const x=r.normals[v],S=r.binormals[v];for(let T=0;T<=i;T++){const w=T/i*Math.PI*2,E=Math.sin(w),M=-Math.cos(w);l.x=M*x.x+E*S.x,l.y=M*x.y+E*S.y,l.z=M*x.z+E*S.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+n*l.x,a.y=h.y+n*l.y,a.z=h.z+n*l.z,u.push(a.x,a.y,a.z)}}function _(){for(let v=1;v<=t;v++)for(let x=1;x<=i;x++){const S=(i+1)*(v-1)+(x-1),T=(i+1)*v+(x-1),w=(i+1)*v+x,E=(i+1)*(v-1)+x;p.push(S,T,E),p.push(T,w,E)}}function y(){for(let v=0;v<=t;v++)for(let x=0;x<=i;x++)c.x=v/t,c.y=x/i,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Hu(new Yh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Dy extends ze{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new A,s=new A;if(e.index!==null){const r=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,m=d+f;p<m;p+=3)for(let g=0;g<3;g++){const _=a.getX(p+g),y=a.getX(p+(g+1)%3);i.fromBufferAttribute(r,_),s.fromBufferAttribute(r,y),Fg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const r=e.attributes.position;for(let a=0,l=r.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;i.fromBufferAttribute(r,h),s.fromBufferAttribute(r,u),Fg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new be(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Fg(o,e,t){const n=`${o.x},${o.y},${o.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${o.x},${o.y},${o.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Bg=Object.freeze({__proto__:null,BoxGeometry:Jr,CapsuleGeometry:Pu,CircleGeometry:Iu,ConeGeometry:Bl,CylinderGeometry:Fl,DodecahedronGeometry:Lu,EdgesGeometry:by,ExtrudeGeometry:Uu,IcosahedronGeometry:Ou,LatheGeometry:Nu,OctahedronGeometry:kl,PlaneGeometry:Ms,PolyhedronGeometry:Qs,RingGeometry:Fu,ShapeGeometry:Bu,SphereGeometry:zl,TetrahedronGeometry:ku,TorusGeometry:zu,TorusKnotGeometry:Vu,TubeGeometry:Hu,WireframeGeometry:Dy});class Uy extends Xt{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Oy extends Qn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class ca extends Xt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Js,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new An,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class yi extends ca{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new G(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Xe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Ny extends Xt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new le(16777215),this.specular=new le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Js,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new An,this.combine=Rl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Fy extends Xt{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Js,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class By extends Xt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Js,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class ky extends Xt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Js,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new An,this.combine=Rl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class tm extends Xt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=ty,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class nm extends Xt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class zy extends Xt{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Js,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Vy extends pn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Dr(o,e){return!o||o.constructor===e?o:typeof e.BYTES_PER_ELEMENT=="number"?new e(o):Array.prototype.slice.call(o)}function Hy(o){return ArrayBuffer.isView(o)&&!(o instanceof DataView)}function Gy(o){function e(i,s){return o[i]-o[s]}const t=o.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Kf(o,e,t){const n=o.length,i=new o.constructor(n);for(let s=0,r=0;r!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[r++]=o[a+l]}return i}function im(o,e,t,n){let i=1,s=o[0];for(;s!==void 0&&s[n]===void 0;)s=o[i++];if(s===void 0)return;let r=s[n];if(r!==void 0)if(Array.isArray(r))do r=s[n],r!==void 0&&(e.push(s.time),t.push(...r)),s=o[i++];while(s!==void 0);else if(r.toArray!==void 0)do r=s[n],r!==void 0&&(e.push(s.time),r.toArray(t,t.length)),s=o[i++];while(s!==void 0);else do r=s[n],r!==void 0&&(e.push(s.time),t.push(r)),s=o[i++];while(s!==void 0)}function RT(o,e,t,n,i=30){const s=o.clone();s.name=e;const r=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*i;if(!(p<t||p>=n)){u.push(c.times[f]);for(let m=0;m<h;++m)d.push(c.values[f*h+m])}}u.length!==0&&(c.times=Dr(u,c.times.constructor),c.values=Dr(d,c.values.constructor),r.push(c))}s.tracks=r;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function PT(o,e=0,t=o,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let r=0;r<i;++r){const a=t.tracks[r],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=o.tracks.find(function(_){return _.name===a.name&&_.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let m;if(s<=a.times[0]){const _=h,y=u-h;m=a.values.slice(_,y)}else if(s>=a.times[p]){const _=p*u+h,y=_+u-h;m=a.values.slice(_,y)}else{const _=a.createInterpolant(),y=h,v=u-h;_.evaluate(s),m=_.resultBuffer.slice(y,v)}l==="quaternion"&&new vt().fromArray(m).normalize().conjugate().toArray(m);const g=c.times.length;for(let _=0;_<g;++_){const y=_*f+d;if(l==="quaternion")vt.multiplyQuaternionsFlat(c.values,y,m,0,c.values,y);else{const v=f-d*2;for(let x=0;x<v;++x)c.values[y+x]-=m[x]}}}return o.blendMode=Bp,o}class IT{static convertArray(e,t){return Dr(e,t)}static isTypedArray(e){return Hy(e)}static getKeyframeOrder(e){return Gy(e)}static sortedArray(e,t,n){return Kf(e,t,n)}static flattenJSON(e,t,n,i){im(e,t,n,i)}static subclip(e,t,n,i,s=30){return RT(e,t,n,i,s)}static makeClipAdditive(e,t=0,n=e,i=30){return PT(e,t,n,i)}}class ha{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let r;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}r=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}r=n,n=0;break n}break e}for(;n<r;){const a=n+r>>>1;e<t[a]?r=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let r=0;r!==i;++r)t[r]=n[s+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Wy extends ha{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ir,endingEnd:Ir}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,r=e+1,a=i[s],l=i[r];if(a===void 0)switch(this.getSettings_().endingStart){case Lr:s=e,a=2*t-n;break;case cl:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Lr:r=e,l=2*n-t;break;case cl:r=1,l=n+i[1]-i[0];break;default:r=e-1,l=t}const c=(n-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*h,this._offsetNext=r*h}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),m=p*p,g=m*p,_=-d*g+2*d*m-d*p,y=(1+d)*g+(-1.5-2*d)*m+(-.5+d)*p+1,v=(-1-f)*g+(1.5+f)*m+.5*p,x=f*g-f*m;for(let S=0;S!==a;++S)s[S]=_*r[h+S]+y*r[c+S]+v*r[l+S]+x*r[u+S];return s}}class sm extends ha{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==a;++d)s[d]=r[c+d]*u+r[l+d]*h;return s}}class Xy extends ha{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class vi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Dr(t,this.TimeBufferType),this.values=Dr(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Dr(e.times,Array),values:Dr(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Xy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new sm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Wy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Zo:t=this.InterpolantFactoryMethodDiscrete;break;case jo:t=this.InterpolantFactoryMethodLinear;break;case nh:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Zo;case this.InterpolantFactoryMethodLinear:return jo;case this.InterpolantFactoryMethodSmooth:return nh}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,r=i-1;for(;s!==i&&n[s]<e;)++s;for(;r!==-1&&n[r]>t;)--r;if(++r,s!==0||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);const a=this.getValueSize();this.times=n.slice(s,r),this.values=this.values.slice(s*a,r*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(r!==null&&r>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,r),e=!1;break}r=l}if(i!==void 0&&Hy(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===nh,s=e.length-1;let r=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(i)l=!0;else{const u=a*n,d=u-n,f=u+n;for(let p=0;p!==n;++p){const m=t[u+p];if(m!==t[d+p]||m!==t[f+p]){l=!0;break}}}if(l){if(a!==r){e[r]=e[a];const u=a*n,d=r*n;for(let f=0;f!==n;++f)t[d+f]=t[u+f]}++r}}if(s>0){e[r]=e[s];for(let a=s*n,l=r*n,c=0;c!==n;++c)t[l+c]=t[a+c];++r}return r!==e.length?(this.times=e.slice(0,r),this.values=t.slice(0,r*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}vi.prototype.ValueTypeName="";vi.prototype.TimeBufferType=Float32Array;vi.prototype.ValueBufferType=Float32Array;vi.prototype.DefaultInterpolation=jo;class eo extends vi{constructor(e,t,n){super(e,t,n)}}eo.prototype.ValueTypeName="bool";eo.prototype.ValueBufferType=Array;eo.prototype.DefaultInterpolation=Zo;eo.prototype.InterpolantFactoryMethodLinear=void 0;eo.prototype.InterpolantFactoryMethodSmooth=void 0;class rm extends vi{constructor(e,t,n,i){super(e,t,n,i)}}rm.prototype.ValueTypeName="color";class $r extends vi{constructor(e,t,n,i){super(e,t,n,i)}}$r.prototype.ValueTypeName="number";class qy extends ha{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let h=c+a;c!==h;c+=4)vt.slerpFlat(s,0,r,c-a,r,c,l);return s}}class Zr extends vi{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new qy(this.times,this.values,this.getValueSize(),e)}}Zr.prototype.ValueTypeName="quaternion";Zr.prototype.InterpolantFactoryMethodSmooth=void 0;class to extends vi{constructor(e,t,n){super(e,t,n)}}to.prototype.ValueTypeName="string";to.prototype.ValueBufferType=Array;to.prototype.DefaultInterpolation=Zo;to.prototype.InterpolantFactoryMethodLinear=void 0;to.prototype.InterpolantFactoryMethodSmooth=void 0;class jr extends vi{constructor(e,t,n,i){super(e,t,n,i)}}jr.prototype.ValueTypeName="vector";class ea{constructor(e="",t=-1,n=[],i=_u){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Zn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,a=n.length;r!==a;++r)t.push(DT(n[r]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,r=n.length;s!==r;++s)t.push(vi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,r=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const h=Gy(l);l=Kf(l,1,h),c=Kf(c,1,h),!i&&l[0]===0&&(l.push(s),c.push(c[0])),r.push(new $r(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,r)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(s);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(c)}}const r=[];for(const a in i)r.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return r}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,p,m){if(f.length!==0){const g=[],_=[];im(f,g,_,p),g.length!==0&&m.push(new u(d,g,_))}},i=[],s=e.name||"default",r=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let m=0;m<d[p].morphTargets.length;m++)f[d[p].morphTargets[m]]=-1;for(const m in f){const g=[],_=[];for(let y=0;y!==d[p].morphTargets.length;++y){const v=d[p];g.push(v.time),_.push(v.morphTarget===m?1:0)}i.push(new $r(".morphTargetInfluence["+m+"]",g,_))}l=f.length*r}else{const f=".bones["+t[u].name+"]";n(jr,f+".position",d,"pos",i),n(Zr,f+".quaternion",d,"rot",i),n(jr,f+".scale",d,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function LT(o){switch(o.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return $r;case"vector":case"vector2":case"vector3":case"vector4":return jr;case"color":return rm;case"quaternion":return Zr;case"bool":case"boolean":return eo;case"string":return to}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+o)}function DT(o){if(o.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=LT(o.type);if(o.times===void 0){const t=[],n=[];im(o.keys,t,n,"value"),o.times=t,o.values=n}return e.parse!==void 0?e.parse(o):new e(o.name,o.times,o.values,o.interpolation)}const us={enabled:!1,files:{},add:function(o,e){this.enabled!==!1&&(this.files[o]=e)},get:function(o){if(this.enabled!==!1)return this.files[o]},remove:function(o){delete this.files[o]},clear:function(){this.files={}}};class Gu{constructor(e,t,n){const i=this;let s=!1,r=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){a++,s===!1&&i.onStart!==void 0&&i.onStart(h,r,a),s=!0},this.itemEnd=function(h){r++,i.onProgress!==void 0&&i.onProgress(h,r,a),r===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const no=new Gu;class mn{constructor(e){this.manager=e!==void 0?e:no,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}mn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ji={};class UT extends Error{constructor(e,t){super(e),this.response=t}}class kn extends mn{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=us.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ji[e]!==void 0){Ji[e].push({onLoad:t,onProgress:n,onError:i});return}Ji[e]=[],Ji[e].push({onLoad:t,onProgress:n,onError:i});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(r).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Ji[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let m=0;const g=new ReadableStream({start(_){y();function y(){u.read().then(({done:v,value:x})=>{if(v)_.close();else{m+=x.byteLength;const S=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:f});for(let T=0,w=h.length;T<w;T++){const E=h[T];E.onProgress&&E.onProgress(S)}_.enqueue(x),y()}},v=>{_.error(v)})}}});return new Response(g)}else throw new UT(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a==="")return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{us.add(e,c);const h=Ji[e];delete Ji[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=Ji[e];if(h===void 0)throw this.manager.itemError(e),c;delete Ji[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class OT extends mn{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new kn(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ea.parse(e[n]);t.push(i)}return t}}class NT extends mn{constructor(e){super(e)}load(e,t,n,i){const s=this,r=[],a=new Cu,l=new kn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=s.parse(d,!0);r[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=Tt),a.image=r,a.format=f.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=s.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){r[p]={mipmaps:[]};for(let m=0;m<d.mipmapCount;m++)r[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+m]),r[p].format=d.format,r[p].width=d.width,r[p].height=d.height}a.image=r}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=Tt),a.format=d.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class _l extends mn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=us.get(e);if(r!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const a=fl("img");function l(){h(),us.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(u){h(),i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class FT extends mn{constructor(e){super(e)}load(e,t,n,i){const s=new Dl;s.colorSpace=At;const r=new _l(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function l(c){r.load(e[c],function(h){s.images[c]=h,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class BT extends mn{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new jn,a=new kn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){let c;try{c=s.parse(l)}catch(h){if(i!==void 0)i(h);else{console.error(h);return}}c.image!==void 0?r.image=c.image:c.data!==void 0&&(r.image.width=c.width,r.image.height=c.height,r.image.data=c.data),r.wrapS=c.wrapS!==void 0?c.wrapS:Yn,r.wrapT=c.wrapT!==void 0?c.wrapT:Yn,r.magFilter=c.magFilter!==void 0?c.magFilter:Tt,r.minFilter=c.minFilter!==void 0?c.minFilter:Tt,r.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(r.colorSpace=c.colorSpace),c.flipY!==void 0&&(r.flipY=c.flipY),c.format!==void 0&&(r.format=c.format),c.type!==void 0&&(r.type=c.type),c.mipmaps!==void 0&&(r.mipmaps=c.mipmaps,r.minFilter=fi),c.mipmapCount===1&&(r.minFilter=Tt),c.generateMipmaps!==void 0&&(r.generateMipmaps=c.generateMipmaps),r.needsUpdate=!0,t&&t(r,c)},n,i),r}}class Yy extends mn{constructor(e){super(e)}load(e,t,n,i){const s=new Mt,r=new _l(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class er extends tt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class $y extends er{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(tt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Nd=new de,kg=new A,zg=new A;class om{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new G(512,512),this.mapType=Jn,this.map=null,this.mapPass=null,this.matrix=new de,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Qr,this._frameExtents=new G(1,1),this._viewportCount=1,this._viewports=[new st(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;kg.setFromMatrixPosition(e.matrixWorld),t.position.copy(kg),zg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(zg),t.updateMatrixWorld(),Nd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Nd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Nd)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class kT extends om{constructor(){super(new Bt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Ko*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class am extends er{constructor(e,t,n=0,i=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(tt.DEFAULT_UP),this.updateMatrix(),this.target=new tt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new kT}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Vg=new de,Ta=new A,Fd=new A;class zT extends om{constructor(){super(new Bt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new G(4,2),this._viewportCount=6,this._viewports=[new st(2,1,1,1),new st(0,1,1,1),new st(3,1,1,1),new st(1,1,1,1),new st(3,0,1,1),new st(1,0,1,1)],this._cubeDirections=[new A(1,0,0),new A(-1,0,0),new A(0,0,1),new A(0,0,-1),new A(0,1,0),new A(0,-1,0)],this._cubeUps=[new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,0,1),new A(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Ta.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ta),Fd.copy(n.position),Fd.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Fd),n.updateMatrixWorld(),i.makeTranslation(-Ta.x,-Ta.y,-Ta.z),Vg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Vg)}}class lm extends er{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new zT}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ss extends Mu{constructor(e=-1,t=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,r=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,r=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class VT extends om{constructor(){super(new Ss(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class cm extends er{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(tt.DEFAULT_UP),this.updateMatrix(),this.target=new tt,this.shadow=new VT}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Zy extends er{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class jy extends er{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Ky{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new A)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*i),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*n),t.addScaledVector(r[4],1.092548*(n*i)),t.addScaledVector(r[5],1.092548*(i*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(n*s)),t.addScaledVector(r[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*i),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*n),t.addScaledVector(r[4],2*.429043*n*i),t.addScaledVector(r[5],2*.429043*i*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*n*s),t.addScaledVector(r[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Jy extends er{constructor(e=new Ky,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Wu extends mn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,r=new kn(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const r=e.uniforms[s];switch(i.uniforms[s]={},r.type){case"t":i.uniforms[s].value=n(r.value);break;case"c":i.uniforms[s].value=new le().setHex(r.value);break;case"v2":i.uniforms[s].value=new G().fromArray(r.value);break;case"v3":i.uniforms[s].value=new A().fromArray(r.value);break;case"v4":i.uniforms[s].value=new st().fromArray(r.value);break;case"m3":i.uniforms[s].value=new We().fromArray(r.value);break;case"m4":i.uniforms[s].value=new de().fromArray(r.value);break;default:i.uniforms[s].value=r.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new G().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new G().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Wu.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:Uy,SpriteMaterial:Xp,RawShaderMaterial:Oy,ShaderMaterial:Qn,PointsMaterial:Nl,MeshPhysicalMaterial:yi,MeshStandardMaterial:ca,MeshPhongMaterial:Ny,MeshToonMaterial:Fy,MeshNormalMaterial:By,MeshLambertMaterial:ky,MeshDepthMaterial:tm,MeshDistanceMaterial:nm,MeshBasicMaterial:un,MeshMatcapMaterial:zy,LineDashedMaterial:Vy,LineBasicMaterial:pn,Material:Xt};return new t[e]}}class Ws{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Qy extends ze{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class ev extends mn{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new kn(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(f,p){if(t[p]!==void 0)return t[p];const g=f.interleavedBuffers[p],_=s(f,g.buffer),y=Do(g.type,_),v=new Ul(y,g.stride);return v.uuid=g.uuid,t[p]=v,v}function s(f,p){if(n[p]!==void 0)return n[p];const g=f.arrayBuffers[p],_=new Uint32Array(g).buffer;return n[p]=_,_}const r=e.isInstancedBufferGeometry?new Qy:new ze,a=e.data.index;if(a!==void 0){const f=Do(a.type,a.array);r.setIndex(new ke(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let m;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);m=new Zs(g,p.itemSize,p.offset,p.normalized)}else{const g=Do(p.type,p.array),_=p.isInstancedBufferAttribute?qr:ke;m=new _(g,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),r.setAttribute(f,m)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],m=[];for(let g=0,_=p.length;g<_;g++){const y=p[g];let v;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);v=new Zs(x,y.itemSize,y.offset,y.normalized)}else{const x=Do(y.type,y.array);v=new ke(x,y.itemSize,y.normalized)}y.name!==void 0&&(v.name=y.name),m.push(v)}r.morphAttributes[f]=m}e.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const m=u[f];r.addGroup(m.start,m.count,m.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new A;d.center!==void 0&&f.fromArray(d.center),r.boundingSphere=new Ot(f,d.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class HT extends mn{constructor(e){super(e)}load(e,t,n,i){const s=this,r=this.path===""?Ws.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const a=new kn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Ws.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new kn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const r=await s.loadAsync(e,t),a=JSON.parse(r),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),r=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,r),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,n),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in r)if(r[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),r=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,r),l=this.parseObject(e.object,i,a,r,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new kr().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,r=e.length;s<r;s++){const a=new Ol().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new ev;for(let s=0,r=e.length;s<r;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in Bg?a=Bg[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Wu;s.setTextures(t);for(let r=0,a=e.length;r<a;r++){const l=e[r];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=ea.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function r(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return r(h)}else return l.data?{data:Do(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Gu(t);s=new _l(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,m=d.length;p<m;p++){const g=d[p],_=a(g);_!==null&&(_ instanceof HTMLImageElement?f.push(_):f.push(new jn(_.data,_.width,_.height)))}i[u.uuid]=new hs(f)}else{const f=a(u.url);i[u.uuid]=new hs(f)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(r){if(typeof r=="string"){const a=r,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return r.data?{data:Do(r.type,r.data),width:r.width,height:r.height}:null}if(e!==void 0&&e.length>0){i=new _l(this.manager),i.setCrossOrigin(this.crossOrigin);for(let r=0,a=e.length;r<a;r++){const l=e[r],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await s(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new jn(p.data,p.width,p.height)))}n[l.uuid]=new hs(h)}else{const h=await s(l.url);n[l.uuid]=new hs(h)}}}return n}parseTextures(e,t){function n(s,r){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),r[s])}const i={};if(e!==void 0)for(let s=0,r=e.length;s<r;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new Dl,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new jn:h=new Mt,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=n(a.mapping,GT)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=n(a.wrap[0],Hg),h.wrapT=n(a.wrap[1],Hg)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=n(a.minFilter,Gg)),a.magFilter!==void 0&&(h.magFilter=n(a.magFilter,Gg)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),i[a.uuid]=h}return i}parseObject(e,t,n,i,s){let r;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,m=d.length;p<m;p++){const g=d[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),f.push(n[g])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function c(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let h,u;switch(e.type){case"Scene":r=new Wp,e.background!==void 0&&(Number.isInteger(e.background)?r.background=new le(e.background):r.background=c(e.background)),e.environment!==void 0&&(r.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?r.fog=new bu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(r.fog=new Su(e.fog.color,e.fog.density)),e.fog.name!==""&&(r.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(r.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(r.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&r.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(r.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&r.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":r=new Bt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(r.focus=e.focus),e.zoom!==void 0&&(r.zoom=e.zoom),e.filmGauge!==void 0&&(r.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(r.filmOffset=e.filmOffset),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new Ss(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(r.zoom=e.zoom),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new Zy(e.color,e.intensity);break;case"DirectionalLight":r=new cm(e.color,e.intensity),r.target=e.target||"";break;case"PointLight":r=new lm(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new jy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new am(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),r.target=e.target||"";break;case"HemisphereLight":r=new $y(e.color,e.groundColor,e.intensity);break;case"LightProbe":r=new Jy().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),r=new qp(h,u),e.bindMode!==void 0&&(r.bindMode=e.bindMode),e.bindMatrix!==void 0&&r.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(r.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),r=new _t(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;r=new wu(h,u,d),r.instanceMatrix=new qr(new Float32Array(f.array),16),p!==void 0&&(r.instanceColor=new qr(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),r=new Yp(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),r.geometry=h,r.perObjectFrustumCulled=e.perObjectFrustumCulled,r.sortObjects=e.sortObjects,r._drawRanges=e.drawRanges,r._reservedRanges=e.reservedRanges,r._geometryInfo=e.geometryInfo.map(m=>{let g=null,_=null;return m.boundingBox!==void 0&&(g=new Wt,g.min.fromArray(m.boundingBox.min),g.max.fromArray(m.boundingBox.max)),m.boundingSphere!==void 0&&(_=new Ot,_.radius=m.boundingSphere.radius,_.center.fromArray(m.boundingSphere.center)),{...m,boundingBox:g,boundingSphere:_}}),r._instanceInfo=e.instanceInfo,r._availableInstanceIds=e._availableInstanceIds,r._availableGeometryIds=e._availableGeometryIds,r._nextIndexStart=e.nextIndexStart,r._nextVertexStart=e.nextVertexStart,r._geometryCount=e.geometryCount,r._maxInstanceCount=e.maxInstanceCount,r._maxVertexCount=e.maxVertexCount,r._maxIndexCount=e.maxIndexCount,r._geometryInitialized=e.geometryInitialized,r._matricesTexture=c(e.matricesTexture.uuid),r._indirectTexture=c(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(r._colorsTexture=c(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(r.boundingSphere=new Ot,r.boundingSphere.center.fromArray(e.boundingSphere.center),r.boundingSphere.radius=e.boundingSphere.radius),e.boundingBox!==void 0&&(r.boundingBox=new Wt,r.boundingBox.min.fromArray(e.boundingBox.min),r.boundingBox.max.fromArray(e.boundingBox.max));break;case"LOD":r=new My;break;case"Line":r=new xs(a(e.geometry),l(e.material));break;case"LineLoop":r=new $p(a(e.geometry),l(e.material));break;case"LineSegments":r=new Li(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":r=new Au(a(e.geometry),l(e.material));break;case"Sprite":r=new vy(l(e.material));break;case"Group":r=new mi;break;case"Bone":r=new Tu;break;default:r=new tt}if(r.uuid=e.uuid,e.name!==void 0&&(r.name=e.name),e.matrix!==void 0?(r.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(e.position!==void 0&&r.position.fromArray(e.position),e.rotation!==void 0&&r.rotation.fromArray(e.rotation),e.quaternion!==void 0&&r.quaternion.fromArray(e.quaternion),e.scale!==void 0&&r.scale.fromArray(e.scale)),e.up!==void 0&&r.up.fromArray(e.up),e.castShadow!==void 0&&(r.castShadow=e.castShadow),e.receiveShadow!==void 0&&(r.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(r.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(r.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(r.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(r.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&r.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(r.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(r.visible=e.visible),e.frustumCulled!==void 0&&(r.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(r.renderOrder=e.renderOrder),e.userData!==void 0&&(r.userData=e.userData),e.layers!==void 0&&(r.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)r.add(this.parseObject(d[f],t,n,i,s))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];r.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(r.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],m=r.getObjectByProperty("uuid",p.object);m!==void 0&&r.addLevel(m,p.distance,p.hysteresis)}}return r}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new tt}})}}const GT={UVMapping:cu,CubeReflectionMapping:gs,CubeRefractionMapping:Ys,EquirectangularReflectionMapping:al,EquirectangularRefractionMapping:ll,CubeUVReflectionMapping:aa},Hg={RepeatWrapping:$s,ClampToEdgeWrapping:Yn,MirroredRepeatWrapping:Wo},Gg={NearestFilter:Gt,NearestMipmapNearestFilter:hu,NearestMipmapLinearFilter:Pr,LinearFilter:Tt,LinearMipmapNearestFilter:Fo,LinearMipmapLinearFilter:fi};class tv extends mn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=us.get(e);if(r!==void 0){if(s.manager.itemStart(e),r.then){r.then(c=>{t&&t(c),s.manager.itemEnd(e)}).catch(c=>{i&&i(c)});return}return setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return us.add(e,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){i&&i(c),us.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});us.add(e,l),s.manager.itemStart(e)}}let Rc;class hm{static getContext(){return Rc===void 0&&(Rc=new(window.AudioContext||window.webkitAudioContext)),Rc}static setContext(e){Rc=e}}class WT extends mn{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new kn(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(l){try{const c=l.slice(0);hm.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},n,i);function a(l){i?i(l):console.error(l),s.manager.itemError(e)}}}const Wg=new de,Xg=new de,hr=new de;class XT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Bt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Bt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,hr.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,r=t.near*Math.tan(Br*t.fov*.5)/t.zoom;let a,l;Xg.elements[12]=-i,Wg.elements[12]=i,a=-r*t.aspect+s,l=r*t.aspect+s,hr.elements[0]=2*t.near/(l-a),hr.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(hr),a=-r*t.aspect-s,l=r*t.aspect-s,hr.elements[0]=2*t.near/(l-a),hr.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(hr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Xg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Wg)}}class nv extends Bt{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Xu{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=qg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=qg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function qg(){return performance.now()}const ur=new A,Yg=new vt,qT=new A,dr=new A;class YT extends tt{constructor(){super(),this.type="AudioListener",this.context=hm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Xu}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ur,Yg,qT),dr.set(0,0,-1).applyQuaternion(Yg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ur.x,i),t.positionY.linearRampToValueAtTime(ur.y,i),t.positionZ.linearRampToValueAtTime(ur.z,i),t.forwardX.linearRampToValueAtTime(dr.x,i),t.forwardY.linearRampToValueAtTime(dr.y,i),t.forwardZ.linearRampToValueAtTime(dr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(ur.x,ur.y,ur.z),t.setOrientation(dr.x,dr.y,dr.z,n.x,n.y,n.z)}}class iv extends tt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const fr=new A,$g=new vt,$T=new A,pr=new A;class ZT extends iv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(fr,$g,$T),pr.set(0,0,1).applyQuaternion($g);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(fr.x,n),t.positionY.linearRampToValueAtTime(fr.y,n),t.positionZ.linearRampToValueAtTime(fr.z,n),t.orientationX.linearRampToValueAtTime(pr.x,n),t.orientationY.linearRampToValueAtTime(pr.y,n),t.orientationZ.linearRampToValueAtTime(pr.z,n)}else t.setPosition(fr.x,fr.y,fr.z),t.setOrientation(pr.x,pr.y,pr.z)}}class jT{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class sv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,r;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let r=this.cumulativeWeight;if(r===0){for(let a=0;a!==i;++a)n[s+a]=n[a];r=t}else{r+=t;const a=t/r;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=r}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-s,t)}r>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,r=i;s!==r;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let r=0;r!==s;++r)e[t+r]=e[n+r]}_slerp(e,t,n,i){vt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const r=this._workIndex*s;vt.multiplyQuaternionsFlat(e,r,e,t,e,n),vt.slerpFlat(e,t,e,t,e,r,i)}_lerp(e,t,n,i,s){const r=1-i;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*r+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let r=0;r!==s;++r){const a=t+r;e[a]=e[a]+e[n+r]*i}}}const um="\\[\\]\\.:\\/",KT=new RegExp("["+um+"]","g"),dm="[^"+um+"]",JT="[^"+um.replace("\\.","")+"]",QT=/((?:WC+[\/:])*)/.source.replace("WC",dm),ew=/(WCOD+)?/.source.replace("WCOD",JT),tw=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",dm),nw=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",dm),iw=new RegExp("^"+QT+ew+tw+nw+"$"),sw=["material","materials","bones","map"];class rw{constructor(e,t,n){const i=n||it.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class it{constructor(e,t,n){this.path=t,this.parsedPath=n||it.parseTrackName(t),this.node=it.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new it.Composite(e,t,n):new it(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(KT,"")}static parseTrackName(e){const t=iw.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);sw.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let r=0;r<s.length;r++){const a=s[r];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=it.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const r=e[i];if(r===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else r.fromArray!==void 0&&r.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(l=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}it.Composite=rw;it.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};it.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};it.prototype.GetterByBindingType=[it.prototype._getValue_direct,it.prototype._getValue_array,it.prototype._getValue_arrayElement,it.prototype._getValue_toArray];it.prototype.SetterByBindingTypeAndVersioning=[[it.prototype._setValue_direct,it.prototype._setValue_direct_setNeedsUpdate,it.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[it.prototype._setValue_array,it.prototype._setValue_array_setNeedsUpdate,it.prototype._setValue_array_setMatrixWorldNeedsUpdate],[it.prototype._setValue_arrayElement,it.prototype._setValue_arrayElement_setNeedsUpdate,it.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[it.prototype._setValue_fromArray,it.prototype._setValue_fromArray_setNeedsUpdate,it.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ow{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Zn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,r=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let m=0,g=r;m!==g;++m)s[m].push(new it(d,n[m],i[m]))}else if(p<c){a=e[p];const m=--c,g=e[m];t[g.uuid]=p,e[p]=g,t[f]=m,e[m]=d;for(let _=0,y=r;_!==y;++_){const v=s[_],x=v[m];let S=v[p];v[p]=x,S===void 0&&(S=new it(d,n[_],i[_])),v[m]=S}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let r=0,a=arguments.length;r!==a;++r){const l=arguments[r],c=l.uuid,h=t[c];if(h!==void 0&&h>=s){const u=s++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=i;f!==p;++f){const m=n[f],g=m[u],_=m[h];m[h]=g,m[u]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,r=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<s){const d=--s,f=e[d],p=--r,m=e[p];t[f.uuid]=u,e[u]=f,t[m.uuid]=d,e[d]=m,e.pop();for(let g=0,_=i;g!==_;++g){const y=n[g],v=y[d],x=y[p];y[u]=v,y[d]=x,y.pop()}}else{const d=--r,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,m=i;p!==m;++p){const g=n[p];g[u]=g[d],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const r=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);i=s.length,n[e]=i,r.push(e),a.push(t),s.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new it(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length-1,l=r[a],c=e[a];t[c]=n,r[n]=l,r.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class rv{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,r=s.length,a=new Array(r),l={endingStart:Ir,endingEnd:Ir};for(let c=0;c!==r;++c){const h=s[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Jx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const i=this._clip.duration,s=e._clip.duration,r=s/i,a=i/s;e.warp(1,r,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,r=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/r,c[1]=t/r,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const r=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Bp:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(r),c[h].accumulateAdditive(a);break;case _u:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(r),c[h].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const r=n===Qx;if(e===0)return s===-1?i:r&&(s&1)===1?t-i:i;if(n===Kx){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,r)):this._setEndings(this.repetitions===0,!0,r)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,r)}else this._setEndings(!1,!1,r);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(r&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Lr,i.endingEnd=Lr):(e?i.endingStart=this.zeroSlopeAtStart?Lr:Ir:i.endingStart=cl,t?i.endingEnd=this.zeroSlopeAtEnd?Lr:Ir:i.endingEnd=cl)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let r=this._weightInterpolant;r===null&&(r=i._lendControlInterpolant(),this._weightInterpolant=r);const a=r.parameterPositions,l=r.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}const aw=new Float32Array(1);class lw extends en{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,r=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==s;++u){const d=i[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,r[u]=p;else{if(p=r[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const m=t&&t._propertyBindings[u].binding.parsedPath;p=new sv(it.create(n,f,m),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),r[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let r=s[t];if(r===void 0)r={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=r;else{const a=r.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),r.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,r=this._actionsByClip,a=r[s],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete r[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let r=i[t];r===void 0&&(r={},i[t]=r),r[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,r=this._bindingsByRootAndName,a=r[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete r[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new sm(new Float32Array(2),new Float32Array(2),1,aw),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let r=typeof e=="string"?ea.findByName(i,e):e;const a=r!==null?r.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(r!==null?n=r.blendMode:n=_u),l!==void 0){const u=l.actionByRoot[s];if(u!==void 0&&u.blendMode===n)return u;c=l.knownActions[0],r===null&&(r=c._clip)}if(r===null)return null;const h=new rv(this,r,t,n);return this._bindAction(h,c),this._addInactiveAction(h,a,s),h}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?ea.findByName(n,e):e,r=s?s.uuid:e,a=this._actionsByClip[r];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),r=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,s,r);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(r);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const r=s.knownActions;for(let a=0,l=r.length;a!==l;++a){const c=r[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const r in n){const a=n[r].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const r in s){const a=s[r];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class cw extends xu{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new yu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class hw extends xu{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new Ll(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class fm{constructor(e){this.value=e}clone(){return new fm(this.value.clone===void 0?this.value:this.value.clone())}}let uw=0;class dw extends en{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:uw++}),this.name="",this.usage=ul,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let r=0;r<s.length;r++)this.uniforms.push(s[r].clone())}return this}clone(){return new this.constructor().copy(this)}}class fw extends Ul{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class pw{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Zg=new de;class ov{constructor(e,t,n=0,i=1/0){this.ray=new ni(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new vu,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Zg.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Zg),this}intersectObject(e,t=!0,n=[]){return Jf(e,this,n,t),n.sort(jg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Jf(e[i],this,n,t);return n.sort(jg),n}}function jg(o,e){return o.distance-e.distance}function Jf(o,e,t,n){let i=!0;if(o.layers.test(e.layers)&&o.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const s=o.children;for(let r=0,a=s.length;r<a;r++)Jf(s[r],e,t,!0)}}class av{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Xe(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Xe(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class mw{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class qu{constructor(e,t,n,i){qu.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=i,this}}const Kg=new G;class lv{constructor(e=new G(1/0,1/0),t=new G(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Kg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Kg).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Jg=new A,Pc=new A;class gw{constructor(e=new A,t=new A){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Jg.subVectors(e,this.start),Pc.subVectors(this.end,this.start);const n=Pc.dot(Pc);let s=Pc.dot(Jg)/n;return t&&(s=Xe(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Qg=new A;class _w extends tt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new ze,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,a=1,l=32;r<l;r++,a++){const c=r/l*Math.PI*2,h=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new be(i,3));const s=new pn({fog:!1,toneMapped:!1});this.cone=new Li(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Qg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Qg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Rs=new A,Ic=new de,Bd=new de;class xw extends Li{constructor(e){const t=cv(e),n=new ze,i=[],s=[],r=new le(0,0,1),a=new le(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(r.r,r.g,r.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new be(i,3)),n.setAttribute("color",new be(s,3));const l=new pn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Bd.copy(this.root.matrixWorld).invert();for(let s=0,r=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Ic.multiplyMatrices(Bd,a.matrixWorld),Rs.setFromMatrixPosition(Ic),i.setXYZ(r,Rs.x,Rs.y,Rs.z),Ic.multiplyMatrices(Bd,a.parent.matrixWorld),Rs.setFromMatrixPosition(Ic),i.setXYZ(r+1,Rs.x,Rs.y,Rs.z),r+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function cv(o){const e=[];o.isBone===!0&&e.push(o);for(let t=0;t<o.children.length;t++)e.push(...cv(o.children[t]));return e}class yw extends _t{constructor(e,t,n){const i=new zl(t,4,2),s=new un({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const vw=new A,e_=new le,t_=new le;class Mw extends tt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new kl(t);i.rotateY(Math.PI*.5),this.material=new un({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),r=new Float32Array(s.count*3);i.setAttribute("color",new ke(r,3)),this.add(new _t(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");e_.copy(this.light.color),t_.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?e_:t_;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(vw.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Sw extends Li{constructor(e=10,t=10,n=4473924,i=8947848){n=new le(n),i=new le(i);const s=t/2,r=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=r){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const m=d===s?n:i;m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3}const h=new ze;h.setAttribute("position",new be(l,3)),h.setAttribute("color",new be(c,3));const u=new pn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class bw extends Li{constructor(e=10,t=16,n=8,i=64,s=4473924,r=8947848){s=new le(s),r=new le(r);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const m=u&1?s:r;l.push(m.r,m.g,m.b),l.push(m.r,m.g,m.b)}for(let u=0;u<n;u++){const d=u&1?s:r,f=e-e/n*u;for(let p=0;p<i;p++){let m=p/i*(Math.PI*2),g=Math.sin(m)*f,_=Math.cos(m)*f;a.push(g,0,_),l.push(d.r,d.g,d.b),m=(p+1)/i*(Math.PI*2),g=Math.sin(m)*f,_=Math.cos(m)*f,a.push(g,0,_),l.push(d.r,d.g,d.b)}}const c=new ze;c.setAttribute("position",new be(a,3)),c.setAttribute("color",new be(l,3));const h=new pn({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const n_=new A,Lc=new A,i_=new A;class Tw extends tt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new ze;i.setAttribute("position",new be([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new pn({fog:!1,toneMapped:!1});this.lightPlane=new xs(i,s),this.add(this.lightPlane),i=new ze,i.setAttribute("position",new be([0,0,0,0,0,1],3)),this.targetLine=new xs(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),n_.setFromMatrixPosition(this.light.matrixWorld),Lc.setFromMatrixPosition(this.light.target.matrixWorld),i_.subVectors(Lc,n_),this.lightPlane.lookAt(Lc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Lc),this.targetLine.scale.z=i_.length()}}const Dc=new A,Lt=new Mu;class ww extends Li{constructor(e){const t=new ze,n=new pn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],r={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,m){l(p),l(m)}function l(p){i.push(0,0,0),s.push(0,0,0),r[p]===void 0&&(r[p]=[]),r[p].push(i.length/3-1)}t.setAttribute("position",new be(i,3)),t.setAttribute("color",new be(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update();const c=new le(16755200),h=new le(16711680),u=new le(43775),d=new le(16777215),f=new le(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,n,i,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Lt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const s=this.camera.coordinateSystem===pi?-1:0;Nt("c",t,e,Lt,0,0,s),Nt("t",t,e,Lt,0,0,1),Nt("n1",t,e,Lt,-1,-1,s),Nt("n2",t,e,Lt,n,-1,s),Nt("n3",t,e,Lt,-1,i,s),Nt("n4",t,e,Lt,n,i,s),Nt("f1",t,e,Lt,-1,-1,1),Nt("f2",t,e,Lt,n,-1,1),Nt("f3",t,e,Lt,-1,i,1),Nt("f4",t,e,Lt,n,i,1),Nt("u1",t,e,Lt,n*.7,i*1.1,s),Nt("u2",t,e,Lt,-1*.7,i*1.1,s),Nt("u3",t,e,Lt,0,i*2,s),Nt("cf1",t,e,Lt,-1,0,1),Nt("cf2",t,e,Lt,n,0,1),Nt("cf3",t,e,Lt,0,-1,1),Nt("cf4",t,e,Lt,0,i,1),Nt("cn1",t,e,Lt,-1,0,s),Nt("cn2",t,e,Lt,n,0,s),Nt("cn3",t,e,Lt,0,-1,s),Nt("cn4",t,e,Lt,0,i,s),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Nt(o,e,t,n,i,s,r){Dc.set(i,s,r).unproject(n);const a=e[o];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],Dc.x,Dc.y,Dc.z)}}const Uc=new Wt;class Ew extends Li{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new ze;s.setIndex(new ke(n,1)),s.setAttribute("position",new ke(i,3)),super(s,new pn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Uc.setFromObject(this.object),Uc.isEmpty())return;const e=Uc.min,t=Uc.max,n=this.geometry.attributes.position,i=n.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Aw extends Li{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ze;s.setIndex(new ke(n,1)),s.setAttribute("position",new be(i,3)),super(s,new pn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Cw extends xs{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],r=new ze;r.setAttribute("position",new be(s,3)),r.computeBoundingSphere(),super(r,new pn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new ze;l.setAttribute("position",new be(a,3)),l.computeBoundingSphere(),this.add(new _t(l,new un({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const s_=new A;let Oc,kd;class Rw extends tt{constructor(e=new A(0,0,1),t=new A(0,0,0),n=1,i=16776960,s=n*.2,r=s*.2){super(),this.type="ArrowHelper",Oc===void 0&&(Oc=new ze,Oc.setAttribute("position",new be([0,0,0,0,1,0],3)),kd=new Bl(.5,1,5,1),kd.translate(0,-.5,0)),this.position.copy(t),this.line=new xs(Oc,new pn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new _t(kd,new un({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,r)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{s_.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(s_,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Pw extends Li{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ze;i.setAttribute("position",new be(t,3)),i.setAttribute("color",new be(n,3));const s=new pn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new le,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Iw{constructor(){this.type="ShapePath",this.color=new le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new $h,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,r){return this.currentPath.bezierCurveTo(e,t,n,i,s,r),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const y=[];for(let v=0,x=_.length;v<x;v++){const S=_[v],T=new kr;T.curves=S.curves,y.push(T)}return y}function n(_,y){const v=y.length;let x=!1;for(let S=v-1,T=0;T<v;S=T++){let w=y[S],E=y[T],M=E.x-w.x,b=E.y-w.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(w=y[T],M=-M,E=y[S],b=-b),_.y<w.y||_.y>E.y)continue;if(_.y===w.y){if(_.x===w.x)return!0}else{const I=b*(_.x-w.x)-M*(_.y-w.y);if(I===0)return!0;if(I<0)continue;x=!x}}else{if(_.y!==w.y)continue;if(E.x<=_.x&&_.x<=w.x||w.x<=_.x&&_.x<=E.x)return!0}}return x}const i=Ii.isClockWise,s=this.subPaths;if(s.length===0)return[];let r,a,l;const c=[];if(s.length===1)return a=s[0],l=new kr,l.curves=a.curves,c.push(l),c;let h=!i(s[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,m;d[p]=void 0,f[p]=[];for(let _=0,y=s.length;_<y;_++)a=s[_],m=a.getPoints(),r=i(m),r=e?!r:r,r?(!h&&d[p]&&p++,d[p]={s:new kr,p:m},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:m[0]});if(!d[0])return t(s);if(d.length>1){let _=!1,y=0;for(let v=0,x=d.length;v<x;v++)u[v]=[];for(let v=0,x=d.length;v<x;v++){const S=f[v];for(let T=0;T<S.length;T++){const w=S[T];let E=!0;for(let M=0;M<d.length;M++)n(w.p,d[M].p)&&(v!==M&&y++,E?(E=!1,u[M].push(w)):_=!0);E&&u[v].push(w)}}y>0&&_===!1&&(f=u)}let g;for(let _=0,y=d.length;_<y;_++){l=d[_].s,c.push(l),g=f[_];for(let v=0,x=g.length;v<x;v++)l.holes.push(g[v].h)}return c}}class Lw extends en{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function Dw(o,e){const t=o.image&&o.image.width?o.image.width/o.image.height:1;return t>e?(o.repeat.x=1,o.repeat.y=t/e,o.offset.x=0,o.offset.y=(1-o.repeat.y)/2):(o.repeat.x=e/t,o.repeat.y=1,o.offset.x=(1-o.repeat.x)/2,o.offset.y=0),o}function Uw(o,e){const t=o.image&&o.image.width?o.image.width/o.image.height:1;return t>e?(o.repeat.x=e/t,o.repeat.y=1,o.offset.x=(1-o.repeat.x)/2,o.offset.y=0):(o.repeat.x=1,o.repeat.y=t/e,o.offset.x=0,o.offset.y=(1-o.repeat.y)/2),o}function Ow(o){return o.repeat.x=1,o.repeat.y=1,o.offset.x=0,o.offset.y=0,o}function Qf(o,e,t,n){const i=Nw(n);switch(t){case Op:return o*e;case pu:return o*e/i.components*i.byteLength;case Pl:return o*e/i.components*i.byteLength;case Il:return o*e*2/i.components*i.byteLength;case mu:return o*e*2/i.components*i.byteLength;case Np:return o*e*3/i.components*i.byteLength;case wn:return o*e*4/i.components*i.byteLength;case gu:return o*e*4/i.components*i.byteLength;case Za:case ja:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*8;case Ka:case Ja:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case yh:case Mh:return Math.max(o,16)*Math.max(e,8)/4;case xh:case vh:return Math.max(o,8)*Math.max(e,8)/2;case Sh:case bh:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*8;case Th:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case wh:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case Eh:return Math.floor((o+4)/5)*Math.floor((e+3)/4)*16;case Ah:return Math.floor((o+4)/5)*Math.floor((e+4)/5)*16;case Ch:return Math.floor((o+5)/6)*Math.floor((e+4)/5)*16;case Rh:return Math.floor((o+5)/6)*Math.floor((e+5)/6)*16;case Ph:return Math.floor((o+7)/8)*Math.floor((e+4)/5)*16;case Ih:return Math.floor((o+7)/8)*Math.floor((e+5)/6)*16;case Lh:return Math.floor((o+7)/8)*Math.floor((e+7)/8)*16;case Dh:return Math.floor((o+9)/10)*Math.floor((e+4)/5)*16;case Uh:return Math.floor((o+9)/10)*Math.floor((e+5)/6)*16;case Oh:return Math.floor((o+9)/10)*Math.floor((e+7)/8)*16;case Nh:return Math.floor((o+9)/10)*Math.floor((e+9)/10)*16;case Fh:return Math.floor((o+11)/12)*Math.floor((e+9)/10)*16;case Bh:return Math.floor((o+11)/12)*Math.floor((e+11)/12)*16;case Qa:case kh:case zh:return Math.ceil(o/4)*Math.ceil(e/4)*16;case Fp:case Vh:return Math.ceil(o/4)*Math.ceil(e/4)*8;case Hh:case Gh:return Math.ceil(o/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function Nw(o){switch(o){case Jn:case Lp:return{byteLength:1,components:1};case Xo:case Dp:case la:return{byteLength:2,components:1};case du:case fu:return{byteLength:2,components:4};case _s:case uu:case Dn:return{byteLength:4,components:1};case Up:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${o}.`)}class Fw{static contain(e,t){return Dw(e,t)}static cover(e,t){return Uw(e,t)}static fill(e){return Ow(e)}static getByteLength(e,t,n,i){return Qf(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Cl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Cl);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function hv(){let o=null,e=!1,t=null,n=null;function i(s,r){t(s,r),n=o.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=o.requestAnimationFrame(i),e=!0)},stop:function(){o.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){o=s}}}function Bw(o){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=o.createBuffer();o.bindBuffer(l,d),o.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=o.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=o.HALF_FLOAT:f=o.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=o.SHORT;else if(c instanceof Uint32Array)f=o.UNSIGNED_INT;else if(c instanceof Int32Array)f=o.INT;else if(c instanceof Int8Array)f=o.BYTE;else if(c instanceof Uint8Array)f=o.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=o.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function n(a,l,c){const h=l.array,u=l.updateRanges;if(o.bindBuffer(c,a),u.length===0)o.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],m=u[f];m.start<=p.start+p.count+1?p.count=Math.max(p.count,m.start+m.count-p.start):(++d,u[d]=m)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const m=u[f];o.bufferSubData(c,m.start*h.BYTES_PER_ELEMENT,h,m.start,m.count)}l.clearUpdateRanges()}l.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(o.deleteBuffer(l.buffer),e.delete(a))}function r(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:i,remove:s,update:r}}var kw=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,zw=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Vw=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Hw=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Gw=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Ww=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Xw=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,qw=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Yw=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,$w=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Zw=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,jw=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Kw=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Jw=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Qw=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,e1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,t1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,n1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,i1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,s1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,r1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,o1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,a1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,l1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,c1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,h1=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,u1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,d1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,f1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,p1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,m1="gl_FragColor = linearToOutputTexel( gl_FragColor );",g1=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,_1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,x1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,y1=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,v1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,M1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,S1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,b1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,T1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,w1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,E1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,A1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,C1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,R1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,P1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,I1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,L1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,D1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,U1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,O1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,N1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,F1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,B1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,k1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,z1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,V1=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,H1=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,G1=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,W1=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,X1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,q1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Y1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,$1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Z1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,j1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,K1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,J1=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Q1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,eE=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,tE=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,nE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,iE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,sE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,rE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,oE=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,aE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,lE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,cE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,hE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,uE=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,dE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,fE=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,pE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,mE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,gE=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,_E=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,xE=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,yE=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,vE=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,ME=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,SE=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,bE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,TE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,wE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,EE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,AE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,CE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,RE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,PE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,IE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,LE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,DE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,UE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,OE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,NE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,FE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const BE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,kE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,zE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,VE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,HE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,GE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,WE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,XE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,qE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,YE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,$E=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,ZE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,jE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,KE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,JE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,QE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eA=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tA=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nA=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,iA=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sA=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,rA=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,oA=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aA=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lA=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,cA=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hA=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,uA=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dA=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,fA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pA=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mA=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gA=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,_A=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ze={alphahash_fragment:kw,alphahash_pars_fragment:zw,alphamap_fragment:Vw,alphamap_pars_fragment:Hw,alphatest_fragment:Gw,alphatest_pars_fragment:Ww,aomap_fragment:Xw,aomap_pars_fragment:qw,batching_pars_vertex:Yw,batching_vertex:$w,begin_vertex:Zw,beginnormal_vertex:jw,bsdfs:Kw,iridescence_fragment:Jw,bumpmap_pars_fragment:Qw,clipping_planes_fragment:e1,clipping_planes_pars_fragment:t1,clipping_planes_pars_vertex:n1,clipping_planes_vertex:i1,color_fragment:s1,color_pars_fragment:r1,color_pars_vertex:o1,color_vertex:a1,common:l1,cube_uv_reflection_fragment:c1,defaultnormal_vertex:h1,displacementmap_pars_vertex:u1,displacementmap_vertex:d1,emissivemap_fragment:f1,emissivemap_pars_fragment:p1,colorspace_fragment:m1,colorspace_pars_fragment:g1,envmap_fragment:_1,envmap_common_pars_fragment:x1,envmap_pars_fragment:y1,envmap_pars_vertex:v1,envmap_physical_pars_fragment:I1,envmap_vertex:M1,fog_vertex:S1,fog_pars_vertex:b1,fog_fragment:T1,fog_pars_fragment:w1,gradientmap_pars_fragment:E1,lightmap_pars_fragment:A1,lights_lambert_fragment:C1,lights_lambert_pars_fragment:R1,lights_pars_begin:P1,lights_toon_fragment:L1,lights_toon_pars_fragment:D1,lights_phong_fragment:U1,lights_phong_pars_fragment:O1,lights_physical_fragment:N1,lights_physical_pars_fragment:F1,lights_fragment_begin:B1,lights_fragment_maps:k1,lights_fragment_end:z1,logdepthbuf_fragment:V1,logdepthbuf_pars_fragment:H1,logdepthbuf_pars_vertex:G1,logdepthbuf_vertex:W1,map_fragment:X1,map_pars_fragment:q1,map_particle_fragment:Y1,map_particle_pars_fragment:$1,metalnessmap_fragment:Z1,metalnessmap_pars_fragment:j1,morphinstance_vertex:K1,morphcolor_vertex:J1,morphnormal_vertex:Q1,morphtarget_pars_vertex:eE,morphtarget_vertex:tE,normal_fragment_begin:nE,normal_fragment_maps:iE,normal_pars_fragment:sE,normal_pars_vertex:rE,normal_vertex:oE,normalmap_pars_fragment:aE,clearcoat_normal_fragment_begin:lE,clearcoat_normal_fragment_maps:cE,clearcoat_pars_fragment:hE,iridescence_pars_fragment:uE,opaque_fragment:dE,packing:fE,premultiplied_alpha_fragment:pE,project_vertex:mE,dithering_fragment:gE,dithering_pars_fragment:_E,roughnessmap_fragment:xE,roughnessmap_pars_fragment:yE,shadowmap_pars_fragment:vE,shadowmap_pars_vertex:ME,shadowmap_vertex:SE,shadowmask_pars_fragment:bE,skinbase_vertex:TE,skinning_pars_vertex:wE,skinning_vertex:EE,skinnormal_vertex:AE,specularmap_fragment:CE,specularmap_pars_fragment:RE,tonemapping_fragment:PE,tonemapping_pars_fragment:IE,transmission_fragment:LE,transmission_pars_fragment:DE,uv_pars_fragment:UE,uv_pars_vertex:OE,uv_vertex:NE,worldpos_vertex:FE,background_vert:BE,background_frag:kE,backgroundCube_vert:zE,backgroundCube_frag:VE,cube_vert:HE,cube_frag:GE,depth_vert:WE,depth_frag:XE,distanceRGBA_vert:qE,distanceRGBA_frag:YE,equirect_vert:$E,equirect_frag:ZE,linedashed_vert:jE,linedashed_frag:KE,meshbasic_vert:JE,meshbasic_frag:QE,meshlambert_vert:eA,meshlambert_frag:tA,meshmatcap_vert:nA,meshmatcap_frag:iA,meshnormal_vert:sA,meshnormal_frag:rA,meshphong_vert:oA,meshphong_frag:aA,meshphysical_vert:lA,meshphysical_frag:cA,meshtoon_vert:hA,meshtoon_frag:uA,points_vert:dA,points_frag:fA,shadow_vert:pA,shadow_frag:mA,sprite_vert:gA,sprite_frag:_A},me={common:{diffuse:{value:new le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new We},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new We}},envmap:{envMap:{value:null},envMapRotation:{value:new We},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new We}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new We}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new We},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new We},normalScale:{value:new G(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new We},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new We}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new We}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new We}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0},uvTransform:{value:new We}},sprite:{diffuse:{value:new le(16777215)},opacity:{value:1},center:{value:new G(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new We},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0}}},Ri={basic:{uniforms:Mn([me.common,me.specularmap,me.envmap,me.aomap,me.lightmap,me.fog]),vertexShader:Ze.meshbasic_vert,fragmentShader:Ze.meshbasic_frag},lambert:{uniforms:Mn([me.common,me.specularmap,me.envmap,me.aomap,me.lightmap,me.emissivemap,me.bumpmap,me.normalmap,me.displacementmap,me.fog,me.lights,{emissive:{value:new le(0)}}]),vertexShader:Ze.meshlambert_vert,fragmentShader:Ze.meshlambert_frag},phong:{uniforms:Mn([me.common,me.specularmap,me.envmap,me.aomap,me.lightmap,me.emissivemap,me.bumpmap,me.normalmap,me.displacementmap,me.fog,me.lights,{emissive:{value:new le(0)},specular:{value:new le(1118481)},shininess:{value:30}}]),vertexShader:Ze.meshphong_vert,fragmentShader:Ze.meshphong_frag},standard:{uniforms:Mn([me.common,me.envmap,me.aomap,me.lightmap,me.emissivemap,me.bumpmap,me.normalmap,me.displacementmap,me.roughnessmap,me.metalnessmap,me.fog,me.lights,{emissive:{value:new le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag},toon:{uniforms:Mn([me.common,me.aomap,me.lightmap,me.emissivemap,me.bumpmap,me.normalmap,me.displacementmap,me.gradientmap,me.fog,me.lights,{emissive:{value:new le(0)}}]),vertexShader:Ze.meshtoon_vert,fragmentShader:Ze.meshtoon_frag},matcap:{uniforms:Mn([me.common,me.bumpmap,me.normalmap,me.displacementmap,me.fog,{matcap:{value:null}}]),vertexShader:Ze.meshmatcap_vert,fragmentShader:Ze.meshmatcap_frag},points:{uniforms:Mn([me.points,me.fog]),vertexShader:Ze.points_vert,fragmentShader:Ze.points_frag},dashed:{uniforms:Mn([me.common,me.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ze.linedashed_vert,fragmentShader:Ze.linedashed_frag},depth:{uniforms:Mn([me.common,me.displacementmap]),vertexShader:Ze.depth_vert,fragmentShader:Ze.depth_frag},normal:{uniforms:Mn([me.common,me.bumpmap,me.normalmap,me.displacementmap,{opacity:{value:1}}]),vertexShader:Ze.meshnormal_vert,fragmentShader:Ze.meshnormal_frag},sprite:{uniforms:Mn([me.sprite,me.fog]),vertexShader:Ze.sprite_vert,fragmentShader:Ze.sprite_frag},background:{uniforms:{uvTransform:{value:new We},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ze.background_vert,fragmentShader:Ze.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new We}},vertexShader:Ze.backgroundCube_vert,fragmentShader:Ze.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ze.cube_vert,fragmentShader:Ze.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ze.equirect_vert,fragmentShader:Ze.equirect_frag},distanceRGBA:{uniforms:Mn([me.common,me.displacementmap,{referencePosition:{value:new A},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ze.distanceRGBA_vert,fragmentShader:Ze.distanceRGBA_frag},shadow:{uniforms:Mn([me.lights,me.fog,{color:{value:new le(0)},opacity:{value:1}}]),vertexShader:Ze.shadow_vert,fragmentShader:Ze.shadow_frag}};Ri.physical={uniforms:Mn([Ri.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new We},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new We},clearcoatNormalScale:{value:new G(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new We},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new We},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new We},sheen:{value:0},sheenColor:{value:new le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new We},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new We},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new We},transmissionSamplerSize:{value:new G},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new We},attenuationDistance:{value:0},attenuationColor:{value:new le(0)},specularColor:{value:new le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new We},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new We},anisotropyVector:{value:new G},anisotropyMap:{value:null},anisotropyMapTransform:{value:new We}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag};const Nc={r:0,b:0,g:0},mr=new An,xA=new de;function yA(o,e,t,n,i,s,r){const a=new le(0);let l=s===!0?0:1,c,h,u=null,d=0,f=null;function p(v){let x=v.isScene===!0?v.background:null;return x&&x.isTexture&&(x=(v.backgroundBlurriness>0?t:e).get(x)),x}function m(v){let x=!1;const S=p(v);S===null?_(a,l):S&&S.isColor&&(_(S,1),x=!0);const T=o.xr.getEnvironmentBlendMode();T==="additive"?n.buffers.color.setClear(0,0,0,1,r):T==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,r),(o.autoClear||x)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),o.clear(o.autoClearColor,o.autoClearDepth,o.autoClearStencil))}function g(v,x){const S=p(x);S&&(S.isCubeTexture||S.mapping===aa)?(h===void 0&&(h=new _t(new Jr(1,1,1),new Qn({name:"BackgroundCubeMaterial",uniforms:Jo(Ri.backgroundCube.uniforms),vertexShader:Ri.backgroundCube.vertexShader,fragmentShader:Ri.backgroundCube.fragmentShader,side:En,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(T,w,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),mr.copy(x.backgroundRotation),mr.x*=-1,mr.y*=-1,mr.z*=-1,S.isCubeTexture&&S.isRenderTargetTexture===!1&&(mr.y*=-1,mr.z*=-1),h.material.uniforms.envMap.value=S,h.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(xA.makeRotationFromEuler(mr)),h.material.toneMapped=Je.getTransfer(S.colorSpace)!==ft,(u!==S||d!==S.version||f!==o.toneMapping)&&(h.material.needsUpdate=!0,u=S,d=S.version,f=o.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null)):S&&S.isTexture&&(c===void 0&&(c=new _t(new Ms(2,2),new Qn({name:"BackgroundMaterial",uniforms:Jo(Ri.background.uniforms),vertexShader:Ri.background.vertexShader,fragmentShader:Ri.background.fragmentShader,side:Hi,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=S,c.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,c.material.toneMapped=Je.getTransfer(S.colorSpace)!==ft,S.matrixAutoUpdate===!0&&S.updateMatrix(),c.material.uniforms.uvTransform.value.copy(S.matrix),(u!==S||d!==S.version||f!==o.toneMapping)&&(c.material.needsUpdate=!0,u=S,d=S.version,f=o.toneMapping),c.layers.enableAll(),v.unshift(c,c.geometry,c.material,0,0,null))}function _(v,x){v.getRGB(Nc,my(o)),n.buffers.color.setClear(Nc.r,Nc.g,Nc.b,x,r)}function y(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(v,x=1){a.set(v),l=x,_(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(v){l=v,_(a,l)},render:m,addToRenderList:g,dispose:y}}function vA(o,e){const t=o.getParameter(o.MAX_VERTEX_ATTRIBS),n={},i=d(null);let s=i,r=!1;function a(b,I,D,U,O){let V=!1;const F=u(U,D,I);s!==F&&(s=F,c(s.object)),V=f(b,U,D,O),V&&p(b,U,D,O),O!==null&&e.update(O,o.ELEMENT_ARRAY_BUFFER),(V||r)&&(r=!1,x(b,I,D,U),O!==null&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,e.get(O).buffer))}function l(){return o.createVertexArray()}function c(b){return o.bindVertexArray(b)}function h(b){return o.deleteVertexArray(b)}function u(b,I,D){const U=D.wireframe===!0;let O=n[b.id];O===void 0&&(O={},n[b.id]=O);let V=O[I.id];V===void 0&&(V={},O[I.id]=V);let F=V[U];return F===void 0&&(F=d(l()),V[U]=F),F}function d(b){const I=[],D=[],U=[];for(let O=0;O<t;O++)I[O]=0,D[O]=0,U[O]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:D,attributeDivisors:U,object:b,attributes:{},index:null}}function f(b,I,D,U){const O=s.attributes,V=I.attributes;let F=0;const $=D.getAttributes();for(const H in $)if($[H].location>=0){const ne=O[H];let se=V[H];if(se===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(se=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(se=b.instanceColor)),ne===void 0||ne.attribute!==se||se&&ne.data!==se.data)return!0;F++}return s.attributesNum!==F||s.index!==U}function p(b,I,D,U){const O={},V=I.attributes;let F=0;const $=D.getAttributes();for(const H in $)if($[H].location>=0){let ne=V[H];ne===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(ne=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(ne=b.instanceColor));const se={};se.attribute=ne,ne&&ne.data&&(se.data=ne.data),O[H]=se,F++}s.attributes=O,s.attributesNum=F,s.index=U}function m(){const b=s.newAttributes;for(let I=0,D=b.length;I<D;I++)b[I]=0}function g(b){_(b,0)}function _(b,I){const D=s.newAttributes,U=s.enabledAttributes,O=s.attributeDivisors;D[b]=1,U[b]===0&&(o.enableVertexAttribArray(b),U[b]=1),O[b]!==I&&(o.vertexAttribDivisor(b,I),O[b]=I)}function y(){const b=s.newAttributes,I=s.enabledAttributes;for(let D=0,U=I.length;D<U;D++)I[D]!==b[D]&&(o.disableVertexAttribArray(D),I[D]=0)}function v(b,I,D,U,O,V,F){F===!0?o.vertexAttribIPointer(b,I,D,O,V):o.vertexAttribPointer(b,I,D,U,O,V)}function x(b,I,D,U){m();const O=U.attributes,V=D.getAttributes(),F=I.defaultAttributeValues;for(const $ in V){const H=V[$];if(H.location>=0){let te=O[$];if(te===void 0&&($==="instanceMatrix"&&b.instanceMatrix&&(te=b.instanceMatrix),$==="instanceColor"&&b.instanceColor&&(te=b.instanceColor)),te!==void 0){const ne=te.normalized,se=te.itemSize,Me=e.get(te);if(Me===void 0)continue;const Fe=Me.buffer,q=Me.type,Y=Me.bytesPerElement,fe=q===o.INT||q===o.UNSIGNED_INT||te.gpuType===uu;if(te.isInterleavedBufferAttribute){const he=te.data,we=he.stride,Ie=te.offset;if(he.isInstancedInterleavedBuffer){for(let Re=0;Re<H.locationSize;Re++)_(H.location+Re,he.meshPerAttribute);b.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=he.meshPerAttribute*he.count)}else for(let Re=0;Re<H.locationSize;Re++)g(H.location+Re);o.bindBuffer(o.ARRAY_BUFFER,Fe);for(let Re=0;Re<H.locationSize;Re++)v(H.location+Re,se/H.locationSize,q,ne,we*Y,(Ie+se/H.locationSize*Re)*Y,fe)}else{if(te.isInstancedBufferAttribute){for(let he=0;he<H.locationSize;he++)_(H.location+he,te.meshPerAttribute);b.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=te.meshPerAttribute*te.count)}else for(let he=0;he<H.locationSize;he++)g(H.location+he);o.bindBuffer(o.ARRAY_BUFFER,Fe);for(let he=0;he<H.locationSize;he++)v(H.location+he,se/H.locationSize,q,ne,se*Y,se/H.locationSize*he*Y,fe)}}else if(F!==void 0){const ne=F[$];if(ne!==void 0)switch(ne.length){case 2:o.vertexAttrib2fv(H.location,ne);break;case 3:o.vertexAttrib3fv(H.location,ne);break;case 4:o.vertexAttrib4fv(H.location,ne);break;default:o.vertexAttrib1fv(H.location,ne)}}}}y()}function S(){E();for(const b in n){const I=n[b];for(const D in I){const U=I[D];for(const O in U)h(U[O].object),delete U[O];delete I[D]}delete n[b]}}function T(b){if(n[b.id]===void 0)return;const I=n[b.id];for(const D in I){const U=I[D];for(const O in U)h(U[O].object),delete U[O];delete I[D]}delete n[b.id]}function w(b){for(const I in n){const D=n[I];if(D[b.id]===void 0)continue;const U=D[b.id];for(const O in U)h(U[O].object),delete U[O];delete D[b.id]}}function E(){M(),r=!0,s!==i&&(s=i,c(s.object))}function M(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:E,resetDefaultState:M,dispose:S,releaseStatesOfGeometry:T,releaseStatesOfProgram:w,initAttributes:m,enableAttribute:g,disableUnusedAttributes:y}}function MA(o,e,t){let n;function i(c){n=c}function s(c,h){o.drawArrays(n,c,h),t.update(h,n,1)}function r(c,h,u){u!==0&&(o.drawArraysInstanced(n,c,h,u),t.update(h,n,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,n,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)r(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,c,0,h,0,d,0,u);let p=0;for(let m=0;m<u;m++)p+=h[m]*d[m];t.update(p,n,1)}}this.setMode=i,this.render=s,this.renderInstances=r,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function SA(o,e,t,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const w=e.get("EXT_texture_filter_anisotropic");i=o.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function r(w){return!(w!==wn&&n.convert(w)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(w){const E=w===la&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(w!==Jn&&n.convert(w)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_TYPE)&&w!==Dn&&!E)}function l(w){if(w==="highp"){if(o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.HIGH_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.HIGH_FLOAT).precision>0)return"highp";w="mediump"}return w==="mediump"&&o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.MEDIUM_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),p=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=o.getParameter(o.MAX_TEXTURE_SIZE),g=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),_=o.getParameter(o.MAX_VERTEX_ATTRIBS),y=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),v=o.getParameter(o.MAX_VARYING_VECTORS),x=o.getParameter(o.MAX_FRAGMENT_UNIFORM_VECTORS),S=p>0,T=o.getParameter(o.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:r,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:m,maxCubemapSize:g,maxAttributes:_,maxVertexUniforms:y,maxVaryings:v,maxFragmentUniforms:x,vertexTextures:S,maxSamples:T}}function bA(o){const e=this;let t=null,n=0,i=!1,s=!1;const r=new Ci,a=new We,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,m=u.clipIntersection,g=u.clipShadows,_=o.get(u);if(!i||p===null||p.length===0||s&&!g)s?h(null):c();else{const y=s?0:n,v=y*4;let x=_.clippingState||null;l.value=x,x=h(p,d,v,f);for(let S=0;S!==v;++S)x[S]=t[S];_.clippingState=x,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,f,p){const m=u!==null?u.length:0;let g=null;if(m!==0){if(g=l.value,p!==!0||g===null){const _=f+m*4,y=d.matrixWorldInverse;a.getNormalMatrix(y),(g===null||g.length<_)&&(g=new Float32Array(_));for(let v=0,x=f;v!==m;++v,x+=4)r.copy(u[v]).applyMatrix4(y,a),r.normal.toArray(g,x),g[x+3]=r.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function TA(o){let e=new WeakMap;function t(r,a){return a===al?r.mapping=gs:a===ll&&(r.mapping=Ys),r}function n(r){if(r&&r.isTexture){const a=r.mapping;if(a===al||a===ll)if(e.has(r)){const l=e.get(r).texture;return t(l,r.mapping)}else{const l=r.image;if(l&&l.height>0){const c=new xy(l.height);return c.fromEquirectangularTexture(o,r),e.set(r,c),r.addEventListener("dispose",i),t(c.texture,r.mapping)}else return null}}return r}function i(r){const a=r.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const Uo=4,r_=[.125,.215,.35,.446,.526,.582],Rr=20,zd=new Ss,o_=new le;let Vd=null,Hd=0,Gd=0,Wd=!1;const Er=(1+Math.sqrt(5))/2,bo=1/Er,a_=[new A(-Er,bo,0),new A(Er,bo,0),new A(-bo,0,Er),new A(bo,0,Er),new A(0,Er,-bo),new A(0,Er,bo),new A(-1,1,-1),new A(1,1,-1),new A(-1,1,1),new A(1,1,1)],wA=new A;class ep{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,s={}){const{size:r=256,position:a=wA}=s;Vd=this._renderer.getRenderTarget(),Hd=this._renderer.getActiveCubeFace(),Gd=this._renderer.getActiveMipmapLevel(),Wd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(r);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,n,i,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=h_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=c_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Vd,Hd,Gd),this._renderer.xr.enabled=Wd,e.scissorTest=!1,Fc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===gs||e.mapping===Ys?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Vd=this._renderer.getRenderTarget(),Hd=this._renderer.getActiveCubeFace(),Gd=this._renderer.getActiveMipmapLevel(),Wd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Tt,minFilter:Tt,generateMipmaps:!1,type:la,format:wn,colorSpace:nn,depthBuffer:!1},i=l_(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=l_(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=EA(s)),this._blurMaterial=AA(s,e,t)}return i}_compileMaterial(e){const t=new _t(this._lodPlanes[0],e);this._renderer.compile(t,zd)}_sceneToCubeUV(e,t,n,i,s){const l=new Bt(90,1,t,n),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(o_),u.toneMapping=fs,u.autoClear=!1;const p=new un({name:"PMREM.Background",side:En,depthWrite:!1,depthTest:!1}),m=new _t(new Jr,p);let g=!1;const _=e.background;_?_.isColor&&(p.color.copy(_),e.background=null,g=!0):(p.color.copy(o_),g=!0);for(let y=0;y<6;y++){const v=y%3;v===0?(l.up.set(0,c[y],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+h[y],s.y,s.z)):v===1?(l.up.set(0,0,c[y]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+h[y],s.z)):(l.up.set(0,c[y],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+h[y]));const x=this._cubeSize;Fc(i,v*x,y>2?x:0,x,x),u.setRenderTarget(i),g&&u.render(m,l),u.render(e,l)}m.geometry.dispose(),m.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=_}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===gs||e.mapping===Ys;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=h_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=c_());const s=i?this._cubemapMaterial:this._equirectMaterial,r=new _t(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Fc(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(r,zd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=a_[(i-s-1)%a_.length];this._blur(e,s-1,s,r,a)}t.autoClear=n}_blur(e,t,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,i,"latitudinal",s),this._halfBlur(r,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,r,a){const l=this._renderer,c=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new _t(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Rr-1),m=s/p,g=isFinite(s)?1+Math.floor(h*m):Rr;g>Rr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Rr}`);const _=[];let y=0;for(let w=0;w<Rr;++w){const E=w/m,M=Math.exp(-E*E/2);_.push(M),w===0?y+=M:w<g&&(y+=2*M)}for(let w=0;w<_.length;w++)_[w]=_[w]/y;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=_,d.latitudinal.value=r==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:v}=this;d.dTheta.value=p,d.mipInt.value=v-n;const x=this._sizeLods[i],S=3*x*(i>v-Uo?i-v+Uo:0),T=4*(this._cubeSize-x);Fc(t,S,T,3*x,2*x),l.setRenderTarget(t),l.render(u,zd)}}function EA(o){const e=[],t=[],n=[];let i=o;const s=o-Uo+1+r_.length;for(let r=0;r<s;r++){const a=Math.pow(2,i);t.push(a);let l=1/a;r>o-Uo?l=r_[r-o+Uo-1]:r===0&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,m=3,g=2,_=1,y=new Float32Array(m*p*f),v=new Float32Array(g*p*f),x=new Float32Array(_*p*f);for(let T=0;T<f;T++){const w=T%3*2/3-1,E=T>2?0:-1,M=[w,E,0,w+2/3,E,0,w+2/3,E+1,0,w,E,0,w+2/3,E+1,0,w,E+1,0];y.set(M,m*p*T),v.set(d,g*p*T);const b=[T,T,T,T,T,T];x.set(b,_*p*T)}const S=new ze;S.setAttribute("position",new ke(y,m)),S.setAttribute("uv",new ke(v,g)),S.setAttribute("faceIndex",new ke(x,_)),e.push(S),i>Uo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function l_(o,e,t){const n=new xi(o,e,t);return n.texture.mapping=aa,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Fc(o,e,t,n,i){o.viewport.set(e,t,n,i),o.scissor.set(e,t,n,i)}function AA(o,e,t){const n=new Float32Array(Rr),i=new A(0,1,0);return new Qn({name:"SphericalGaussianBlur",defines:{n:Rr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${o}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:pm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ds,depthTest:!1,depthWrite:!1})}function c_(){return new Qn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:pm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ds,depthTest:!1,depthWrite:!1})}function h_(){return new Qn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:pm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ds,depthTest:!1,depthWrite:!1})}function pm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function CA(o){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===al||l===ll,h=l===gs||l===Ys;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new ep(o)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&i(f)?(t===null&&(t=new ep(o)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",s),u.texture):null}}}return a}function i(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function r(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:r}}function RA(o){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=o.getExtension("WEBGL_depth_texture")||o.getExtension("MOZ_WEBGL_depth_texture")||o.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=o.getExtension("EXT_texture_filter_anisotropic")||o.getExtension("MOZ_EXT_texture_filter_anisotropic")||o.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=o.getExtension("WEBGL_compressed_texture_s3tc")||o.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=o.getExtension("WEBGL_compressed_texture_pvrtc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=o.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&ih("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function PA(o,e,t,n){const i={},s=new WeakMap;function r(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",r),delete i[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return i[d.id]===!0||(d.addEventListener("dispose",r),i[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const f in d)e.update(d[f],o.ARRAY_BUFFER)}function c(u){const d=[],f=u.index,p=u.attributes.position;let m=0;if(f!==null){const y=f.array;m=f.version;for(let v=0,x=y.length;v<x;v+=3){const S=y[v+0],T=y[v+1],w=y[v+2];d.push(S,T,T,w,w,S)}}else if(p!==void 0){const y=p.array;m=p.version;for(let v=0,x=y.length/3-1;v<x;v+=3){const S=v+0,T=v+1,w=v+2;d.push(S,T,T,w,w,S)}}else return;const g=new(uy(d)?Gp:Hp)(d,1);g.version=m;const _=s.get(u);_&&e.remove(_),s.set(u,g)}function h(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function IA(o,e,t){let n;function i(d){n=d}let s,r;function a(d){s=d.type,r=d.bytesPerElement}function l(d,f){o.drawElements(n,f,s,d*r),t.update(f,n,1)}function c(d,f,p){p!==0&&(o.drawElementsInstanced(n,f,s,d*r,p),t.update(f,n,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,s,d,0,p);let g=0;for(let _=0;_<p;_++)g+=f[_];t.update(g,n,1)}function u(d,f,p,m){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let _=0;_<d.length;_++)c(d[_]/r,f[_],m[_]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,s,d,0,m,0,p);let _=0;for(let y=0;y<p;y++)_+=f[y]*m[y];t.update(_,n,1)}}this.setMode=i,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function LA(o){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,r,a){switch(t.calls++,r){case o.TRIANGLES:t.triangles+=a*(s/3);break;case o.LINES:t.lines+=a*(s/2);break;case o.LINE_STRIP:t.lines+=a*(s-1);break;case o.LINE_LOOP:t.lines+=a*s;break;case o.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function DA(o,e,t){const n=new WeakMap,i=new st;function s(r,a,l){const c=r.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(a);if(d===void 0||d.count!==u){let M=function(){w.dispose(),n.delete(a),a.removeEventListener("dispose",M)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,m=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],_=a.morphAttributes.normal||[],y=a.morphAttributes.color||[];let v=0;f===!0&&(v=1),p===!0&&(v=2),m===!0&&(v=3);let x=a.attributes.position.count*v,S=1;x>e.maxTextureSize&&(S=Math.ceil(x/e.maxTextureSize),x=e.maxTextureSize);const T=new Float32Array(x*S*4*u),w=new Ll(T,x,S,u);w.type=Dn,w.needsUpdate=!0;const E=v*4;for(let b=0;b<u;b++){const I=g[b],D=_[b],U=y[b],O=x*S*4*b;for(let V=0;V<I.count;V++){const F=V*E;f===!0&&(i.fromBufferAttribute(I,V),T[O+F+0]=i.x,T[O+F+1]=i.y,T[O+F+2]=i.z,T[O+F+3]=0),p===!0&&(i.fromBufferAttribute(D,V),T[O+F+4]=i.x,T[O+F+5]=i.y,T[O+F+6]=i.z,T[O+F+7]=0),m===!0&&(i.fromBufferAttribute(U,V),T[O+F+8]=i.x,T[O+F+9]=i.y,T[O+F+10]=i.z,T[O+F+11]=U.itemSize===4?i.w:1)}}d={count:u,texture:w,size:new G(x,S)},n.set(a,d),a.addEventListener("dispose",M)}if(r.isInstancedMesh===!0&&r.morphTexture!==null)l.getUniforms().setValue(o,"morphTexture",r.morphTexture,t);else{let f=0;for(let m=0;m<c.length;m++)f+=c[m];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(o,"morphTargetBaseInfluence",p),l.getUniforms().setValue(o,"morphTargetInfluences",c)}l.getUniforms().setValue(o,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(o,"morphTargetsTextureSize",d.size)}return{update:s}}function UA(o,e,t,n){let i=new WeakMap;function s(l){const c=n.render.frame,h=l.geometry,u=e.get(l,h);if(i.get(u)!==c&&(e.update(u),i.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==c&&(t.update(l.instanceMatrix,o.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,o.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==c&&(d.update(),i.set(d,c))}return u}function r(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:r}}const uv=new Mt,u_=new Ru(1,1),dv=new Ll,fv=new yu,pv=new Dl,d_=[],f_=[],p_=new Float32Array(16),m_=new Float32Array(9),g_=new Float32Array(4);function ua(o,e,t){const n=o[0];if(n<=0||n>0)return o;const i=e*t;let s=d_[i];if(s===void 0&&(s=new Float32Array(i),d_[i]=s),e!==0){n.toArray(s,0);for(let r=1,a=0;r!==e;++r)a+=t,o[r].toArray(s,a)}return s}function qt(o,e){if(o.length!==e.length)return!1;for(let t=0,n=o.length;t<n;t++)if(o[t]!==e[t])return!1;return!0}function Yt(o,e){for(let t=0,n=e.length;t<n;t++)o[t]=e[t]}function Yu(o,e){let t=f_[e];t===void 0&&(t=new Int32Array(e),f_[e]=t);for(let n=0;n!==e;++n)t[n]=o.allocateTextureUnit();return t}function OA(o,e){const t=this.cache;t[0]!==e&&(o.uniform1f(this.addr,e),t[0]=e)}function NA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;o.uniform2fv(this.addr,e),Yt(t,e)}}function FA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(o.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(qt(t,e))return;o.uniform3fv(this.addr,e),Yt(t,e)}}function BA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;o.uniform4fv(this.addr,e),Yt(t,e)}}function kA(o,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;o.uniformMatrix2fv(this.addr,!1,e),Yt(t,e)}else{if(qt(t,n))return;g_.set(n),o.uniformMatrix2fv(this.addr,!1,g_),Yt(t,n)}}function zA(o,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;o.uniformMatrix3fv(this.addr,!1,e),Yt(t,e)}else{if(qt(t,n))return;m_.set(n),o.uniformMatrix3fv(this.addr,!1,m_),Yt(t,n)}}function VA(o,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;o.uniformMatrix4fv(this.addr,!1,e),Yt(t,e)}else{if(qt(t,n))return;p_.set(n),o.uniformMatrix4fv(this.addr,!1,p_),Yt(t,n)}}function HA(o,e){const t=this.cache;t[0]!==e&&(o.uniform1i(this.addr,e),t[0]=e)}function GA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;o.uniform2iv(this.addr,e),Yt(t,e)}}function WA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;o.uniform3iv(this.addr,e),Yt(t,e)}}function XA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;o.uniform4iv(this.addr,e),Yt(t,e)}}function qA(o,e){const t=this.cache;t[0]!==e&&(o.uniform1ui(this.addr,e),t[0]=e)}function YA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;o.uniform2uiv(this.addr,e),Yt(t,e)}}function $A(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;o.uniform3uiv(this.addr,e),Yt(t,e)}}function ZA(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;o.uniform4uiv(this.addr,e),Yt(t,e)}}function jA(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i);let s;this.type===o.SAMPLER_2D_SHADOW?(u_.compareFunction=zp,s=u_):s=uv,t.setTexture2D(e||s,i)}function KA(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||fv,i)}function JA(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||pv,i)}function QA(o,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(o.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||dv,i)}function eC(o){switch(o){case 5126:return OA;case 35664:return NA;case 35665:return FA;case 35666:return BA;case 35674:return kA;case 35675:return zA;case 35676:return VA;case 5124:case 35670:return HA;case 35667:case 35671:return GA;case 35668:case 35672:return WA;case 35669:case 35673:return XA;case 5125:return qA;case 36294:return YA;case 36295:return $A;case 36296:return ZA;case 35678:case 36198:case 36298:case 36306:case 35682:return jA;case 35679:case 36299:case 36307:return KA;case 35680:case 36300:case 36308:case 36293:return JA;case 36289:case 36303:case 36311:case 36292:return QA}}function tC(o,e){o.uniform1fv(this.addr,e)}function nC(o,e){const t=ua(e,this.size,2);o.uniform2fv(this.addr,t)}function iC(o,e){const t=ua(e,this.size,3);o.uniform3fv(this.addr,t)}function sC(o,e){const t=ua(e,this.size,4);o.uniform4fv(this.addr,t)}function rC(o,e){const t=ua(e,this.size,4);o.uniformMatrix2fv(this.addr,!1,t)}function oC(o,e){const t=ua(e,this.size,9);o.uniformMatrix3fv(this.addr,!1,t)}function aC(o,e){const t=ua(e,this.size,16);o.uniformMatrix4fv(this.addr,!1,t)}function lC(o,e){o.uniform1iv(this.addr,e)}function cC(o,e){o.uniform2iv(this.addr,e)}function hC(o,e){o.uniform3iv(this.addr,e)}function uC(o,e){o.uniform4iv(this.addr,e)}function dC(o,e){o.uniform1uiv(this.addr,e)}function fC(o,e){o.uniform2uiv(this.addr,e)}function pC(o,e){o.uniform3uiv(this.addr,e)}function mC(o,e){o.uniform4uiv(this.addr,e)}function gC(o,e,t){const n=this.cache,i=e.length,s=Yu(t,i);qt(n,s)||(o.uniform1iv(this.addr,s),Yt(n,s));for(let r=0;r!==i;++r)t.setTexture2D(e[r]||uv,s[r])}function _C(o,e,t){const n=this.cache,i=e.length,s=Yu(t,i);qt(n,s)||(o.uniform1iv(this.addr,s),Yt(n,s));for(let r=0;r!==i;++r)t.setTexture3D(e[r]||fv,s[r])}function xC(o,e,t){const n=this.cache,i=e.length,s=Yu(t,i);qt(n,s)||(o.uniform1iv(this.addr,s),Yt(n,s));for(let r=0;r!==i;++r)t.setTextureCube(e[r]||pv,s[r])}function yC(o,e,t){const n=this.cache,i=e.length,s=Yu(t,i);qt(n,s)||(o.uniform1iv(this.addr,s),Yt(n,s));for(let r=0;r!==i;++r)t.setTexture2DArray(e[r]||dv,s[r])}function vC(o){switch(o){case 5126:return tC;case 35664:return nC;case 35665:return iC;case 35666:return sC;case 35674:return rC;case 35675:return oC;case 35676:return aC;case 5124:case 35670:return lC;case 35667:case 35671:return cC;case 35668:case 35672:return hC;case 35669:case 35673:return uC;case 5125:return dC;case 36294:return fC;case 36295:return pC;case 36296:return mC;case 35678:case 36198:case 36298:case 36306:case 35682:return gC;case 35679:case 36299:case 36307:return _C;case 35680:case 36300:case 36308:case 36293:return xC;case 36289:case 36303:case 36311:case 36292:return yC}}class MC{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=eC(t.type)}}class SC{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=vC(t.type)}}class bC{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,r=i.length;s!==r;++s){const a=i[s];a.setValue(e,t[a.id],n)}}}const Xd=/(\w+)(\])?(\[|\.)?/g;function __(o,e){o.seq.push(e),o.map[e.id]=e}function TC(o,e,t){const n=o.name,i=n.length;for(Xd.lastIndex=0;;){const s=Xd.exec(n),r=Xd.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&r+2===i){__(t,c===void 0?new MC(a,o,e):new SC(a,o,e));break}else{let u=t.map[a];u===void 0&&(u=new bC(a),__(t,u)),t=u}}}class rh{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),r=e.getUniformLocation(t,s.name);TC(s,r,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,r=t.length;s!==r;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function x_(o,e,t){const n=o.createShader(e);return o.shaderSource(n,t),o.compileShader(n),n}const wC=37297;let EC=0;function AC(o,e){const t=o.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let r=i;r<s;r++){const a=r+1;n.push(`${a===e?">":" "} ${a}: ${t[r]}`)}return n.join(`
`)}const y_=new We;function CC(o){Je._getMatrix(y_,Je.workingColorSpace,o);const e=`mat3( ${y_.elements.map(t=>t.toFixed(4))} )`;switch(Je.getTransfer(o)){case hl:return[e,"LinearTransferOETF"];case ft:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",o),[e,"LinearTransferOETF"]}}function v_(o,e,t){const n=o.getShaderParameter(e,o.COMPILE_STATUS),i=o.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const r=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+AC(o.getShaderSource(e),r)}else return i}function RC(o,e){const t=CC(e);return[`vec4 ${o}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function PC(o,e){let t;switch(e){case Hx:t="Linear";break;case Gx:t="Reinhard";break;case Wx:t="Cineon";break;case Xx:t="ACESFilmic";break;case Yx:t="AgX";break;case $x:t="Neutral";break;case qx:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+o+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Bc=new A;function IC(){Je.getLuminanceCoefficients(Bc);const o=Bc.x.toFixed(4),e=Bc.y.toFixed(4),t=Bc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${o}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function LC(o){return[o.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",o.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ga).join(`
`)}function DC(o){const e=[];for(const t in o){const n=o[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function UC(o,e){const t={},n=o.getProgramParameter(e,o.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=o.getActiveAttrib(e,i),r=s.name;let a=1;s.type===o.FLOAT_MAT2&&(a=2),s.type===o.FLOAT_MAT3&&(a=3),s.type===o.FLOAT_MAT4&&(a=4),t[r]={type:s.type,location:o.getAttribLocation(e,r),locationSize:a}}return t}function Ga(o){return o!==""}function M_(o,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return o.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function S_(o,e){return o.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const OC=/^[ \t]*#include +<([\w\d./]+)>/gm;function tp(o){return o.replace(OC,FC)}const NC=new Map;function FC(o,e){let t=Ze[e];if(t===void 0){const n=NC.get(e);if(n!==void 0)t=Ze[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return tp(t)}const BC=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function b_(o){return o.replace(BC,kC)}function kC(o,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function T_(o){let e=`precision ${o.precision} float;
	precision ${o.precision} int;
	precision ${o.precision} sampler2D;
	precision ${o.precision} samplerCube;
	precision ${o.precision} sampler3D;
	precision ${o.precision} sampler2DArray;
	precision ${o.precision} sampler2DShadow;
	precision ${o.precision} samplerCubeShadow;
	precision ${o.precision} sampler2DArrayShadow;
	precision ${o.precision} isampler2D;
	precision ${o.precision} isampler3D;
	precision ${o.precision} isamplerCube;
	precision ${o.precision} isampler2DArray;
	precision ${o.precision} usampler2D;
	precision ${o.precision} usampler3D;
	precision ${o.precision} usamplerCube;
	precision ${o.precision} usampler2DArray;
	`;return o.precision==="highp"?e+=`
#define HIGH_PRECISION`:o.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:o.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function zC(o){let e="SHADOWMAP_TYPE_BASIC";return o.shadowMapType===Cp?e="SHADOWMAP_TYPE_PCF":o.shadowMapType===Tx?e="SHADOWMAP_TYPE_PCF_SOFT":o.shadowMapType===Ni&&(e="SHADOWMAP_TYPE_VSM"),e}function VC(o){let e="ENVMAP_TYPE_CUBE";if(o.envMap)switch(o.envMapMode){case gs:case Ys:e="ENVMAP_TYPE_CUBE";break;case aa:e="ENVMAP_TYPE_CUBE_UV";break}return e}function HC(o){let e="ENVMAP_MODE_REFLECTION";if(o.envMap)switch(o.envMapMode){case Ys:e="ENVMAP_MODE_REFRACTION";break}return e}function GC(o){let e="ENVMAP_BLENDING_NONE";if(o.envMap)switch(o.combine){case Rl:e="ENVMAP_BLENDING_MULTIPLY";break;case zx:e="ENVMAP_BLENDING_MIX";break;case Vx:e="ENVMAP_BLENDING_ADD";break}return e}function WC(o){const e=o.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function XC(o,e,t,n){const i=o.getContext(),s=t.defines;let r=t.vertexShader,a=t.fragmentShader;const l=zC(t),c=VC(t),h=HC(t),u=GC(t),d=WC(t),f=LC(t),p=DC(s),m=i.createProgram();let g,_,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ga).join(`
`),g.length>0&&(g+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ga).join(`
`),_.length>0&&(_+=`
`)):(g=[T_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ga).join(`
`),_=[T_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==fs?"#define TONE_MAPPING":"",t.toneMapping!==fs?Ze.tonemapping_pars_fragment:"",t.toneMapping!==fs?PC("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ze.colorspace_pars_fragment,RC("linearToOutputTexel",t.outputColorSpace),IC(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ga).join(`
`)),r=tp(r),r=M_(r,t),r=S_(r,t),a=tp(a),a=M_(a,t),a=S_(a,t),r=b_(r),a=b_(a),t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,_=["#define varying in",t.glslVersion===qf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===qf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const v=y+g+r,x=y+_+a,S=x_(i,i.VERTEX_SHADER,v),T=x_(i,i.FRAGMENT_SHADER,x);i.attachShader(m,S),i.attachShader(m,T),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m);function w(I){if(o.debug.checkShaderErrors){const D=i.getProgramInfoLog(m).trim(),U=i.getShaderInfoLog(S).trim(),O=i.getShaderInfoLog(T).trim();let V=!0,F=!0;if(i.getProgramParameter(m,i.LINK_STATUS)===!1)if(V=!1,typeof o.debug.onShaderError=="function")o.debug.onShaderError(i,m,S,T);else{const $=v_(i,S,"vertex"),H=v_(i,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,i.VALIDATE_STATUS)+`

Material Name: `+I.name+`
Material Type: `+I.type+`

Program Info Log: `+D+`
`+$+`
`+H)}else D!==""?console.warn("THREE.WebGLProgram: Program Info Log:",D):(U===""||O==="")&&(F=!1);F&&(I.diagnostics={runnable:V,programLog:D,vertexShader:{log:U,prefix:g},fragmentShader:{log:O,prefix:_}})}i.deleteShader(S),i.deleteShader(T),E=new rh(i,m),M=UC(i,m)}let E;this.getUniforms=function(){return E===void 0&&w(this),E};let M;this.getAttributes=function(){return M===void 0&&w(this),M};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(m,wC)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=EC++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=S,this.fragmentShader=T,this}let qC=0;class YC{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return r.has(i)===!1&&(r.add(i),i.usedTimes++),r.has(s)===!1&&(r.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new $C(e),t.set(e,n)),n}}class $C{constructor(e){this.id=qC++,this.code=e,this.usedTimes=0}}function ZC(o,e,t,n,i,s,r){const a=new vu,l=new YC,c=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(M){return c.add(M),M===0?"uv":`uv${M}`}function g(M,b,I,D,U){const O=D.fog,V=U.geometry,F=M.isMeshStandardMaterial?D.environment:null,$=(M.isMeshStandardMaterial?t:e).get(M.envMap||F),H=$&&$.mapping===aa?$.image.height:null,te=p[M.type];M.precision!==null&&(f=i.getMaxPrecision(M.precision),f!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",f,"instead."));const ne=V.morphAttributes.position||V.morphAttributes.normal||V.morphAttributes.color,se=ne!==void 0?ne.length:0;let Me=0;V.morphAttributes.position!==void 0&&(Me=1),V.morphAttributes.normal!==void 0&&(Me=2),V.morphAttributes.color!==void 0&&(Me=3);let Fe,q,Y,fe;if(te){const dt=Ri[te];Fe=dt.vertexShader,q=dt.fragmentShader}else Fe=M.vertexShader,q=M.fragmentShader,l.update(M),Y=l.getVertexShaderID(M),fe=l.getFragmentShaderID(M);const he=o.getRenderTarget(),we=o.state.buffers.depth.getReversed(),Ie=U.isInstancedMesh===!0,Re=U.isBatchedMesh===!0,ct=!!M.map,Ke=!!M.matcap,Be=!!$,L=!!M.aoMap,pe=!!M.lightMap,ie=!!M.bumpMap,ce=!!M.normalMap,J=!!M.displacementMap,Pe=!!M.emissiveMap,re=!!M.metalnessMap,P=!!M.roughnessMap,C=M.anisotropy>0,z=M.clearcoat>0,K=M.dispersion>0,ee=M.iridescence>0,Z=M.sheen>0,Ce=M.transmission>0,ge=C&&!!M.anisotropyMap,Le=z&&!!M.clearcoatMap,Ne=z&&!!M.clearcoatNormalMap,oe=z&&!!M.clearcoatRoughnessMap,Se=ee&&!!M.iridescenceMap,Oe=ee&&!!M.iridescenceThicknessMap,He=Z&&!!M.sheenColorMap,Ee=Z&&!!M.sheenRoughnessMap,nt=!!M.specularMap,je=!!M.specularColorMap,xt=!!M.specularIntensityMap,N=Ce&&!!M.transmissionMap,xe=Ce&&!!M.thicknessMap,j=!!M.gradientMap,Q=!!M.alphaMap,ve=M.alphaTest>0,ye=!!M.alphaHash,$e=!!M.extensions;let Pt=fs;M.toneMapped&&(he===null||he.isXRRenderTarget===!0)&&(Pt=o.toneMapping);const sn={shaderID:te,shaderType:M.type,shaderName:M.name,vertexShader:Fe,fragmentShader:q,defines:M.defines,customVertexShaderID:Y,customFragmentShaderID:fe,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:f,batching:Re,batchingColor:Re&&U._colorsTexture!==null,instancing:Ie,instancingColor:Ie&&U.instanceColor!==null,instancingMorph:Ie&&U.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:he===null?o.outputColorSpace:he.isXRRenderTarget===!0?he.texture.colorSpace:nn,alphaToCoverage:!!M.alphaToCoverage,map:ct,matcap:Ke,envMap:Be,envMapMode:Be&&$.mapping,envMapCubeUVHeight:H,aoMap:L,lightMap:pe,bumpMap:ie,normalMap:ce,displacementMap:d&&J,emissiveMap:Pe,normalMapObjectSpace:ce&&M.normalMapType===iy,normalMapTangentSpace:ce&&M.normalMapType===Js,metalnessMap:re,roughnessMap:P,anisotropy:C,anisotropyMap:ge,clearcoat:z,clearcoatMap:Le,clearcoatNormalMap:Ne,clearcoatRoughnessMap:oe,dispersion:K,iridescence:ee,iridescenceMap:Se,iridescenceThicknessMap:Oe,sheen:Z,sheenColorMap:He,sheenRoughnessMap:Ee,specularMap:nt,specularColorMap:je,specularIntensityMap:xt,transmission:Ce,transmissionMap:N,thicknessMap:xe,gradientMap:j,opaque:M.transparent===!1&&M.blending===Fr&&M.alphaToCoverage===!1,alphaMap:Q,alphaTest:ve,alphaHash:ye,combine:M.combine,mapUv:ct&&m(M.map.channel),aoMapUv:L&&m(M.aoMap.channel),lightMapUv:pe&&m(M.lightMap.channel),bumpMapUv:ie&&m(M.bumpMap.channel),normalMapUv:ce&&m(M.normalMap.channel),displacementMapUv:J&&m(M.displacementMap.channel),emissiveMapUv:Pe&&m(M.emissiveMap.channel),metalnessMapUv:re&&m(M.metalnessMap.channel),roughnessMapUv:P&&m(M.roughnessMap.channel),anisotropyMapUv:ge&&m(M.anisotropyMap.channel),clearcoatMapUv:Le&&m(M.clearcoatMap.channel),clearcoatNormalMapUv:Ne&&m(M.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:oe&&m(M.clearcoatRoughnessMap.channel),iridescenceMapUv:Se&&m(M.iridescenceMap.channel),iridescenceThicknessMapUv:Oe&&m(M.iridescenceThicknessMap.channel),sheenColorMapUv:He&&m(M.sheenColorMap.channel),sheenRoughnessMapUv:Ee&&m(M.sheenRoughnessMap.channel),specularMapUv:nt&&m(M.specularMap.channel),specularColorMapUv:je&&m(M.specularColorMap.channel),specularIntensityMapUv:xt&&m(M.specularIntensityMap.channel),transmissionMapUv:N&&m(M.transmissionMap.channel),thicknessMapUv:xe&&m(M.thicknessMap.channel),alphaMapUv:Q&&m(M.alphaMap.channel),vertexTangents:!!V.attributes.tangent&&(ce||C),vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!V.attributes.color&&V.attributes.color.itemSize===4,pointsUvs:U.isPoints===!0&&!!V.attributes.uv&&(ct||Q),fog:!!O,useFog:M.fog===!0,fogExp2:!!O&&O.isFogExp2,flatShading:M.flatShading===!0,sizeAttenuation:M.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:we,skinning:U.isSkinnedMesh===!0,morphTargets:V.morphAttributes.position!==void 0,morphNormals:V.morphAttributes.normal!==void 0,morphColors:V.morphAttributes.color!==void 0,morphTargetsCount:se,morphTextureStride:Me,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:M.dithering,shadowMapEnabled:o.shadowMap.enabled&&I.length>0,shadowMapType:o.shadowMap.type,toneMapping:Pt,decodeVideoTexture:ct&&M.map.isVideoTexture===!0&&Je.getTransfer(M.map.colorSpace)===ft,decodeVideoTextureEmissive:Pe&&M.emissiveMap.isVideoTexture===!0&&Je.getTransfer(M.emissiveMap.colorSpace)===ft,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===Pi,flipSided:M.side===En,useDepthPacking:M.depthPacking>=0,depthPacking:M.depthPacking||0,index0AttributeName:M.index0AttributeName,extensionClipCullDistance:$e&&M.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:($e&&M.extensions.multiDraw===!0||Re)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:M.customProgramCacheKey()};return sn.vertexUv1s=c.has(1),sn.vertexUv2s=c.has(2),sn.vertexUv3s=c.has(3),c.clear(),sn}function _(M){const b=[];if(M.shaderID?b.push(M.shaderID):(b.push(M.customVertexShaderID),b.push(M.customFragmentShaderID)),M.defines!==void 0)for(const I in M.defines)b.push(I),b.push(M.defines[I]);return M.isRawShaderMaterial===!1&&(y(b,M),v(b,M),b.push(o.outputColorSpace)),b.push(M.customProgramCacheKey),b.join()}function y(M,b){M.push(b.precision),M.push(b.outputColorSpace),M.push(b.envMapMode),M.push(b.envMapCubeUVHeight),M.push(b.mapUv),M.push(b.alphaMapUv),M.push(b.lightMapUv),M.push(b.aoMapUv),M.push(b.bumpMapUv),M.push(b.normalMapUv),M.push(b.displacementMapUv),M.push(b.emissiveMapUv),M.push(b.metalnessMapUv),M.push(b.roughnessMapUv),M.push(b.anisotropyMapUv),M.push(b.clearcoatMapUv),M.push(b.clearcoatNormalMapUv),M.push(b.clearcoatRoughnessMapUv),M.push(b.iridescenceMapUv),M.push(b.iridescenceThicknessMapUv),M.push(b.sheenColorMapUv),M.push(b.sheenRoughnessMapUv),M.push(b.specularMapUv),M.push(b.specularColorMapUv),M.push(b.specularIntensityMapUv),M.push(b.transmissionMapUv),M.push(b.thicknessMapUv),M.push(b.combine),M.push(b.fogExp2),M.push(b.sizeAttenuation),M.push(b.morphTargetsCount),M.push(b.morphAttributeCount),M.push(b.numDirLights),M.push(b.numPointLights),M.push(b.numSpotLights),M.push(b.numSpotLightMaps),M.push(b.numHemiLights),M.push(b.numRectAreaLights),M.push(b.numDirLightShadows),M.push(b.numPointLightShadows),M.push(b.numSpotLightShadows),M.push(b.numSpotLightShadowsWithMaps),M.push(b.numLightProbes),M.push(b.shadowMapType),M.push(b.toneMapping),M.push(b.numClippingPlanes),M.push(b.numClipIntersection),M.push(b.depthPacking)}function v(M,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),M.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),M.push(a.mask)}function x(M){const b=p[M.type];let I;if(b){const D=Ri[b];I=gy.clone(D.uniforms)}else I=M.uniforms;return I}function S(M,b){let I;for(let D=0,U=h.length;D<U;D++){const O=h[D];if(O.cacheKey===b){I=O,++I.usedTimes;break}}return I===void 0&&(I=new XC(o,b,M,s),h.push(I)),I}function T(M){if(--M.usedTimes===0){const b=h.indexOf(M);h[b]=h[h.length-1],h.pop(),M.destroy()}}function w(M){l.remove(M)}function E(){l.dispose()}return{getParameters:g,getProgramCacheKey:_,getUniforms:x,acquireProgram:S,releaseProgram:T,releaseShaderCache:w,programs:h,dispose:E}}function jC(){let o=new WeakMap;function e(r){return o.has(r)}function t(r){let a=o.get(r);return a===void 0&&(a={},o.set(r,a)),a}function n(r){o.delete(r)}function i(r,a,l){o.get(r)[a]=l}function s(){o=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:s}}function KC(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function w_(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function E_(){const o=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function r(u,d,f,p,m,g){let _=o[e];return _===void 0?(_={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:m,group:g},o[e]=_):(_.id=u.id,_.object=u,_.geometry=d,_.material=f,_.groupOrder=p,_.renderOrder=u.renderOrder,_.z=m,_.group=g),e++,_}function a(u,d,f,p,m,g){const _=r(u,d,f,p,m,g);f.transmission>0?n.push(_):f.transparent===!0?i.push(_):t.push(_)}function l(u,d,f,p,m,g){const _=r(u,d,f,p,m,g);f.transmission>0?n.unshift(_):f.transparent===!0?i.unshift(_):t.unshift(_)}function c(u,d){t.length>1&&t.sort(u||KC),n.length>1&&n.sort(d||w_),i.length>1&&i.sort(d||w_)}function h(){for(let u=e,d=o.length;u<d;u++){const f=o[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:h,sort:c}}function JC(){let o=new WeakMap;function e(n,i){const s=o.get(n);let r;return s===void 0?(r=new E_,o.set(n,[r])):i>=s.length?(r=new E_,s.push(r)):r=s[i],r}function t(){o=new WeakMap}return{get:e,dispose:t}}function QC(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new A,color:new le};break;case"SpotLight":t={position:new A,direction:new A,color:new le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new A,color:new le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new A,skyColor:new le,groundColor:new le};break;case"RectAreaLight":t={color:new le,position:new A,halfWidth:new A,halfHeight:new A};break}return o[e.id]=t,t}}}function eR(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G,shadowCameraNear:1,shadowCameraFar:1e3};break}return o[e.id]=t,t}}}let tR=0;function nR(o,e){return(e.castShadow?2:0)-(o.castShadow?2:0)+(e.map?1:0)-(o.map?1:0)}function iR(o){const e=new QC,t=eR(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new A);const i=new A,s=new de,r=new de;function a(c){let h=0,u=0,d=0;for(let M=0;M<9;M++)n.probe[M].set(0,0,0);let f=0,p=0,m=0,g=0,_=0,y=0,v=0,x=0,S=0,T=0,w=0;c.sort(nR);for(let M=0,b=c.length;M<b;M++){const I=c[M],D=I.color,U=I.intensity,O=I.distance,V=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)h+=D.r*U,u+=D.g*U,d+=D.b*U;else if(I.isLightProbe){for(let F=0;F<9;F++)n.probe[F].addScaledVector(I.sh.coefficients[F],U);w++}else if(I.isDirectionalLight){const F=e.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity),I.castShadow){const $=I.shadow,H=t.get(I);H.shadowIntensity=$.intensity,H.shadowBias=$.bias,H.shadowNormalBias=$.normalBias,H.shadowRadius=$.radius,H.shadowMapSize=$.mapSize,n.directionalShadow[f]=H,n.directionalShadowMap[f]=V,n.directionalShadowMatrix[f]=I.shadow.matrix,y++}n.directional[f]=F,f++}else if(I.isSpotLight){const F=e.get(I);F.position.setFromMatrixPosition(I.matrixWorld),F.color.copy(D).multiplyScalar(U),F.distance=O,F.coneCos=Math.cos(I.angle),F.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),F.decay=I.decay,n.spot[m]=F;const $=I.shadow;if(I.map&&(n.spotLightMap[S]=I.map,S++,$.updateMatrices(I),I.castShadow&&T++),n.spotLightMatrix[m]=$.matrix,I.castShadow){const H=t.get(I);H.shadowIntensity=$.intensity,H.shadowBias=$.bias,H.shadowNormalBias=$.normalBias,H.shadowRadius=$.radius,H.shadowMapSize=$.mapSize,n.spotShadow[m]=H,n.spotShadowMap[m]=V,x++}m++}else if(I.isRectAreaLight){const F=e.get(I);F.color.copy(D).multiplyScalar(U),F.halfWidth.set(I.width*.5,0,0),F.halfHeight.set(0,I.height*.5,0),n.rectArea[g]=F,g++}else if(I.isPointLight){const F=e.get(I);if(F.color.copy(I.color).multiplyScalar(I.intensity),F.distance=I.distance,F.decay=I.decay,I.castShadow){const $=I.shadow,H=t.get(I);H.shadowIntensity=$.intensity,H.shadowBias=$.bias,H.shadowNormalBias=$.normalBias,H.shadowRadius=$.radius,H.shadowMapSize=$.mapSize,H.shadowCameraNear=$.camera.near,H.shadowCameraFar=$.camera.far,n.pointShadow[p]=H,n.pointShadowMap[p]=V,n.pointShadowMatrix[p]=I.shadow.matrix,v++}n.point[p]=F,p++}else if(I.isHemisphereLight){const F=e.get(I);F.skyColor.copy(I.color).multiplyScalar(U),F.groundColor.copy(I.groundColor).multiplyScalar(U),n.hemi[_]=F,_++}}g>0&&(o.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=me.LTC_FLOAT_1,n.rectAreaLTC2=me.LTC_FLOAT_2):(n.rectAreaLTC1=me.LTC_HALF_1,n.rectAreaLTC2=me.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const E=n.hash;(E.directionalLength!==f||E.pointLength!==p||E.spotLength!==m||E.rectAreaLength!==g||E.hemiLength!==_||E.numDirectionalShadows!==y||E.numPointShadows!==v||E.numSpotShadows!==x||E.numSpotMaps!==S||E.numLightProbes!==w)&&(n.directional.length=f,n.spot.length=m,n.rectArea.length=g,n.point.length=p,n.hemi.length=_,n.directionalShadow.length=y,n.directionalShadowMap.length=y,n.pointShadow.length=v,n.pointShadowMap.length=v,n.spotShadow.length=x,n.spotShadowMap.length=x,n.directionalShadowMatrix.length=y,n.pointShadowMatrix.length=v,n.spotLightMatrix.length=x+S-T,n.spotLightMap.length=S,n.numSpotLightShadowsWithMaps=T,n.numLightProbes=w,E.directionalLength=f,E.pointLength=p,E.spotLength=m,E.rectAreaLength=g,E.hemiLength=_,E.numDirectionalShadows=y,E.numPointShadows=v,E.numSpotShadows=x,E.numSpotMaps=S,E.numLightProbes=w,n.version=tR++)}function l(c,h){let u=0,d=0,f=0,p=0,m=0;const g=h.matrixWorldInverse;for(let _=0,y=c.length;_<y;_++){const v=c[_];if(v.isDirectionalLight){const x=n.directional[u];x.direction.setFromMatrixPosition(v.matrixWorld),i.setFromMatrixPosition(v.target.matrixWorld),x.direction.sub(i),x.direction.transformDirection(g),u++}else if(v.isSpotLight){const x=n.spot[f];x.position.setFromMatrixPosition(v.matrixWorld),x.position.applyMatrix4(g),x.direction.setFromMatrixPosition(v.matrixWorld),i.setFromMatrixPosition(v.target.matrixWorld),x.direction.sub(i),x.direction.transformDirection(g),f++}else if(v.isRectAreaLight){const x=n.rectArea[p];x.position.setFromMatrixPosition(v.matrixWorld),x.position.applyMatrix4(g),r.identity(),s.copy(v.matrixWorld),s.premultiply(g),r.extractRotation(s),x.halfWidth.set(v.width*.5,0,0),x.halfHeight.set(0,v.height*.5,0),x.halfWidth.applyMatrix4(r),x.halfHeight.applyMatrix4(r),p++}else if(v.isPointLight){const x=n.point[d];x.position.setFromMatrixPosition(v.matrixWorld),x.position.applyMatrix4(g),d++}else if(v.isHemisphereLight){const x=n.hemi[m];x.direction.setFromMatrixPosition(v.matrixWorld),x.direction.transformDirection(g),m++}}}return{setup:a,setupView:l,state:n}}function A_(o){const e=new iR(o),t=[],n=[];function i(h){c.camera=h,t.length=0,n.length=0}function s(h){t.push(h)}function r(h){n.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:r}}function sR(o){let e=new WeakMap;function t(i,s=0){const r=e.get(i);let a;return r===void 0?(a=new A_(o),e.set(i,[a])):s>=r.length?(a=new A_(o),r.push(a)):a=r[s],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const rR=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,oR=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function aR(o,e,t){let n=new Qr;const i=new G,s=new G,r=new st,a=new tm({depthPacking:ny}),l=new nm,c={},h=t.maxTextureSize,u={[Hi]:En,[En]:Hi,[Pi]:Pi},d=new Qn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new G},radius:{value:4}},vertexShader:rR,fragmentShader:oR}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new ze;p.setAttribute("position",new ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new _t(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Cp;let _=this.type;this.render=function(T,w,E){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||T.length===0)return;const M=o.getRenderTarget(),b=o.getActiveCubeFace(),I=o.getActiveMipmapLevel(),D=o.state;D.setBlending(ds),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const U=_!==Ni&&this.type===Ni,O=_===Ni&&this.type!==Ni;for(let V=0,F=T.length;V<F;V++){const $=T[V],H=$.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",$,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const te=H.getFrameExtents();if(i.multiply(te),s.copy(H.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(s.x=Math.floor(h/te.x),i.x=s.x*te.x,H.mapSize.x=s.x),i.y>h&&(s.y=Math.floor(h/te.y),i.y=s.y*te.y,H.mapSize.y=s.y)),H.map===null||U===!0||O===!0){const se=this.type!==Ni?{minFilter:Gt,magFilter:Gt}:{};H.map!==null&&H.map.dispose(),H.map=new xi(i.x,i.y,se),H.map.texture.name=$.name+".shadowMap",H.camera.updateProjectionMatrix()}o.setRenderTarget(H.map),o.clear();const ne=H.getViewportCount();for(let se=0;se<ne;se++){const Me=H.getViewport(se);r.set(s.x*Me.x,s.y*Me.y,s.x*Me.z,s.y*Me.w),D.viewport(r),H.updateMatrices($,se),n=H.getFrustum(),x(w,E,H.camera,$,this.type)}H.isPointLightShadow!==!0&&this.type===Ni&&y(H,E),H.needsUpdate=!1}_=this.type,g.needsUpdate=!1,o.setRenderTarget(M,b,I)};function y(T,w){const E=e.update(m);d.defines.VSM_SAMPLES!==T.blurSamples&&(d.defines.VSM_SAMPLES=T.blurSamples,f.defines.VSM_SAMPLES=T.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new xi(i.x,i.y)),d.uniforms.shadow_pass.value=T.map.texture,d.uniforms.resolution.value=T.mapSize,d.uniforms.radius.value=T.radius,o.setRenderTarget(T.mapPass),o.clear(),o.renderBufferDirect(w,null,E,d,m,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,o.setRenderTarget(T.map),o.clear(),o.renderBufferDirect(w,null,E,f,m,null)}function v(T,w,E,M){let b=null;const I=E.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(I!==void 0)b=I;else if(b=E.isPointLight===!0?l:a,o.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0||w.alphaToCoverage===!0){const D=b.uuid,U=w.uuid;let O=c[D];O===void 0&&(O={},c[D]=O);let V=O[U];V===void 0&&(V=b.clone(),O[U]=V,w.addEventListener("dispose",S)),b=V}if(b.visible=w.visible,b.wireframe=w.wireframe,M===Ni?b.side=w.shadowSide!==null?w.shadowSide:w.side:b.side=w.shadowSide!==null?w.shadowSide:u[w.side],b.alphaMap=w.alphaMap,b.alphaTest=w.alphaToCoverage===!0?.5:w.alphaTest,b.map=w.map,b.clipShadows=w.clipShadows,b.clippingPlanes=w.clippingPlanes,b.clipIntersection=w.clipIntersection,b.displacementMap=w.displacementMap,b.displacementScale=w.displacementScale,b.displacementBias=w.displacementBias,b.wireframeLinewidth=w.wireframeLinewidth,b.linewidth=w.linewidth,E.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const D=o.properties.get(b);D.light=E}return b}function x(T,w,E,M,b){if(T.visible===!1)return;if(T.layers.test(w.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&b===Ni)&&(!T.frustumCulled||n.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,T.matrixWorld);const U=e.update(T),O=T.material;if(Array.isArray(O)){const V=U.groups;for(let F=0,$=V.length;F<$;F++){const H=V[F],te=O[H.materialIndex];if(te&&te.visible){const ne=v(T,te,M,b);T.onBeforeShadow(o,T,w,E,U,ne,H),o.renderBufferDirect(E,null,U,ne,T,H),T.onAfterShadow(o,T,w,E,U,ne,H)}}}else if(O.visible){const V=v(T,O,M,b);T.onBeforeShadow(o,T,w,E,U,V,null),o.renderBufferDirect(E,null,U,V,T,null),T.onAfterShadow(o,T,w,E,U,V,null)}}const D=T.children;for(let U=0,O=D.length;U<O;U++)x(D[U],w,E,M,b)}function S(T){T.target.removeEventListener("dispose",S);for(const E in c){const M=c[E],b=T.target.uuid;b in M&&(M[b].dispose(),delete M[b])}}}const lR={[uh]:dh,[fh]:gh,[ph]:_h,[Xr]:mh,[dh]:uh,[gh]:fh,[_h]:ph,[mh]:Xr};function cR(o,e){function t(){let N=!1;const xe=new st;let j=null;const Q=new st(0,0,0,0);return{setMask:function(ve){j!==ve&&!N&&(o.colorMask(ve,ve,ve,ve),j=ve)},setLocked:function(ve){N=ve},setClear:function(ve,ye,$e,Pt,sn){sn===!0&&(ve*=Pt,ye*=Pt,$e*=Pt),xe.set(ve,ye,$e,Pt),Q.equals(xe)===!1&&(o.clearColor(ve,ye,$e,Pt),Q.copy(xe))},reset:function(){N=!1,j=null,Q.set(-1,0,0,0)}}}function n(){let N=!1,xe=!1,j=null,Q=null,ve=null;return{setReversed:function(ye){if(xe!==ye){const $e=e.get("EXT_clip_control");ye?$e.clipControlEXT($e.LOWER_LEFT_EXT,$e.ZERO_TO_ONE_EXT):$e.clipControlEXT($e.LOWER_LEFT_EXT,$e.NEGATIVE_ONE_TO_ONE_EXT),xe=ye;const Pt=ve;ve=null,this.setClear(Pt)}},getReversed:function(){return xe},setTest:function(ye){ye?he(o.DEPTH_TEST):we(o.DEPTH_TEST)},setMask:function(ye){j!==ye&&!N&&(o.depthMask(ye),j=ye)},setFunc:function(ye){if(xe&&(ye=lR[ye]),Q!==ye){switch(ye){case uh:o.depthFunc(o.NEVER);break;case dh:o.depthFunc(o.ALWAYS);break;case fh:o.depthFunc(o.LESS);break;case Xr:o.depthFunc(o.LEQUAL);break;case ph:o.depthFunc(o.EQUAL);break;case mh:o.depthFunc(o.GEQUAL);break;case gh:o.depthFunc(o.GREATER);break;case _h:o.depthFunc(o.NOTEQUAL);break;default:o.depthFunc(o.LEQUAL)}Q=ye}},setLocked:function(ye){N=ye},setClear:function(ye){ve!==ye&&(xe&&(ye=1-ye),o.clearDepth(ye),ve=ye)},reset:function(){N=!1,j=null,Q=null,ve=null,xe=!1}}}function i(){let N=!1,xe=null,j=null,Q=null,ve=null,ye=null,$e=null,Pt=null,sn=null;return{setTest:function(dt){N||(dt?he(o.STENCIL_TEST):we(o.STENCIL_TEST))},setMask:function(dt){xe!==dt&&!N&&(o.stencilMask(dt),xe=dt)},setFunc:function(dt,Mi,Xi){(j!==dt||Q!==Mi||ve!==Xi)&&(o.stencilFunc(dt,Mi,Xi),j=dt,Q=Mi,ve=Xi)},setOp:function(dt,Mi,Xi){(ye!==dt||$e!==Mi||Pt!==Xi)&&(o.stencilOp(dt,Mi,Xi),ye=dt,$e=Mi,Pt=Xi)},setLocked:function(dt){N=dt},setClear:function(dt){sn!==dt&&(o.clearStencil(dt),sn=dt)},reset:function(){N=!1,xe=null,j=null,Q=null,ve=null,ye=null,$e=null,Pt=null,sn=null}}}const s=new t,r=new n,a=new i,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,m=!1,g=null,_=null,y=null,v=null,x=null,S=null,T=null,w=new le(0,0,0),E=0,M=!1,b=null,I=null,D=null,U=null,O=null;const V=o.getParameter(o.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,$=0;const H=o.getParameter(o.VERSION);H.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(H)[1]),F=$>=1):H.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),F=$>=2);let te=null,ne={};const se=o.getParameter(o.SCISSOR_BOX),Me=o.getParameter(o.VIEWPORT),Fe=new st().fromArray(se),q=new st().fromArray(Me);function Y(N,xe,j,Q){const ve=new Uint8Array(4),ye=o.createTexture();o.bindTexture(N,ye),o.texParameteri(N,o.TEXTURE_MIN_FILTER,o.NEAREST),o.texParameteri(N,o.TEXTURE_MAG_FILTER,o.NEAREST);for(let $e=0;$e<j;$e++)N===o.TEXTURE_3D||N===o.TEXTURE_2D_ARRAY?o.texImage3D(xe,0,o.RGBA,1,1,Q,0,o.RGBA,o.UNSIGNED_BYTE,ve):o.texImage2D(xe+$e,0,o.RGBA,1,1,0,o.RGBA,o.UNSIGNED_BYTE,ve);return ye}const fe={};fe[o.TEXTURE_2D]=Y(o.TEXTURE_2D,o.TEXTURE_2D,1),fe[o.TEXTURE_CUBE_MAP]=Y(o.TEXTURE_CUBE_MAP,o.TEXTURE_CUBE_MAP_POSITIVE_X,6),fe[o.TEXTURE_2D_ARRAY]=Y(o.TEXTURE_2D_ARRAY,o.TEXTURE_2D_ARRAY,1,1),fe[o.TEXTURE_3D]=Y(o.TEXTURE_3D,o.TEXTURE_3D,1,1),s.setClear(0,0,0,1),r.setClear(1),a.setClear(0),he(o.DEPTH_TEST),r.setFunc(Xr),ie(!1),ce(zf),he(o.CULL_FACE),L(ds);function he(N){h[N]!==!0&&(o.enable(N),h[N]=!0)}function we(N){h[N]!==!1&&(o.disable(N),h[N]=!1)}function Ie(N,xe){return u[N]!==xe?(o.bindFramebuffer(N,xe),u[N]=xe,N===o.DRAW_FRAMEBUFFER&&(u[o.FRAMEBUFFER]=xe),N===o.FRAMEBUFFER&&(u[o.DRAW_FRAMEBUFFER]=xe),!0):!1}function Re(N,xe){let j=f,Q=!1;if(N){j=d.get(xe),j===void 0&&(j=[],d.set(xe,j));const ve=N.textures;if(j.length!==ve.length||j[0]!==o.COLOR_ATTACHMENT0){for(let ye=0,$e=ve.length;ye<$e;ye++)j[ye]=o.COLOR_ATTACHMENT0+ye;j.length=ve.length,Q=!0}}else j[0]!==o.BACK&&(j[0]=o.BACK,Q=!0);Q&&o.drawBuffers(j)}function ct(N){return p!==N?(o.useProgram(N),p=N,!0):!1}const Ke={[Fs]:o.FUNC_ADD,[wx]:o.FUNC_SUBTRACT,[Ex]:o.FUNC_REVERSE_SUBTRACT};Ke[Ax]=o.MIN,Ke[Cx]=o.MAX;const Be={[Pp]:o.ZERO,[Ip]:o.ONE,[Rx]:o.SRC_COLOR,[ch]:o.SRC_ALPHA,[Ox]:o.SRC_ALPHA_SATURATE,[Dx]:o.DST_COLOR,[Ix]:o.DST_ALPHA,[Px]:o.ONE_MINUS_SRC_COLOR,[hh]:o.ONE_MINUS_SRC_ALPHA,[Ux]:o.ONE_MINUS_DST_COLOR,[Lx]:o.ONE_MINUS_DST_ALPHA,[Nx]:o.CONSTANT_COLOR,[Fx]:o.ONE_MINUS_CONSTANT_COLOR,[Bx]:o.CONSTANT_ALPHA,[kx]:o.ONE_MINUS_CONSTANT_ALPHA};function L(N,xe,j,Q,ve,ye,$e,Pt,sn,dt){if(N===ds){m===!0&&(we(o.BLEND),m=!1);return}if(m===!1&&(he(o.BLEND),m=!0),N!==Rp){if(N!==g||dt!==M){if((_!==Fs||x!==Fs)&&(o.blendEquation(o.FUNC_ADD),_=Fs,x=Fs),dt)switch(N){case Fr:o.blendFuncSeparate(o.ONE,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA);break;case Vf:o.blendFunc(o.ONE,o.ONE);break;case Hf:o.blendFuncSeparate(o.ZERO,o.ONE_MINUS_SRC_COLOR,o.ZERO,o.ONE);break;case Gf:o.blendFuncSeparate(o.ZERO,o.SRC_COLOR,o.ZERO,o.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}else switch(N){case Fr:o.blendFuncSeparate(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA);break;case Vf:o.blendFunc(o.SRC_ALPHA,o.ONE);break;case Hf:o.blendFuncSeparate(o.ZERO,o.ONE_MINUS_SRC_COLOR,o.ZERO,o.ONE);break;case Gf:o.blendFunc(o.ZERO,o.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}y=null,v=null,S=null,T=null,w.set(0,0,0),E=0,g=N,M=dt}return}ve=ve||xe,ye=ye||j,$e=$e||Q,(xe!==_||ve!==x)&&(o.blendEquationSeparate(Ke[xe],Ke[ve]),_=xe,x=ve),(j!==y||Q!==v||ye!==S||$e!==T)&&(o.blendFuncSeparate(Be[j],Be[Q],Be[ye],Be[$e]),y=j,v=Q,S=ye,T=$e),(Pt.equals(w)===!1||sn!==E)&&(o.blendColor(Pt.r,Pt.g,Pt.b,sn),w.copy(Pt),E=sn),g=N,M=!1}function pe(N,xe){N.side===Pi?we(o.CULL_FACE):he(o.CULL_FACE);let j=N.side===En;xe&&(j=!j),ie(j),N.blending===Fr&&N.transparent===!1?L(ds):L(N.blending,N.blendEquation,N.blendSrc,N.blendDst,N.blendEquationAlpha,N.blendSrcAlpha,N.blendDstAlpha,N.blendColor,N.blendAlpha,N.premultipliedAlpha),r.setFunc(N.depthFunc),r.setTest(N.depthTest),r.setMask(N.depthWrite),s.setMask(N.colorWrite);const Q=N.stencilWrite;a.setTest(Q),Q&&(a.setMask(N.stencilWriteMask),a.setFunc(N.stencilFunc,N.stencilRef,N.stencilFuncMask),a.setOp(N.stencilFail,N.stencilZFail,N.stencilZPass)),Pe(N.polygonOffset,N.polygonOffsetFactor,N.polygonOffsetUnits),N.alphaToCoverage===!0?he(o.SAMPLE_ALPHA_TO_COVERAGE):we(o.SAMPLE_ALPHA_TO_COVERAGE)}function ie(N){b!==N&&(N?o.frontFace(o.CW):o.frontFace(o.CCW),b=N)}function ce(N){N!==Sx?(he(o.CULL_FACE),N!==I&&(N===zf?o.cullFace(o.BACK):N===bx?o.cullFace(o.FRONT):o.cullFace(o.FRONT_AND_BACK))):we(o.CULL_FACE),I=N}function J(N){N!==D&&(F&&o.lineWidth(N),D=N)}function Pe(N,xe,j){N?(he(o.POLYGON_OFFSET_FILL),(U!==xe||O!==j)&&(o.polygonOffset(xe,j),U=xe,O=j)):we(o.POLYGON_OFFSET_FILL)}function re(N){N?he(o.SCISSOR_TEST):we(o.SCISSOR_TEST)}function P(N){N===void 0&&(N=o.TEXTURE0+V-1),te!==N&&(o.activeTexture(N),te=N)}function C(N,xe,j){j===void 0&&(te===null?j=o.TEXTURE0+V-1:j=te);let Q=ne[j];Q===void 0&&(Q={type:void 0,texture:void 0},ne[j]=Q),(Q.type!==N||Q.texture!==xe)&&(te!==j&&(o.activeTexture(j),te=j),o.bindTexture(N,xe||fe[N]),Q.type=N,Q.texture=xe)}function z(){const N=ne[te];N!==void 0&&N.type!==void 0&&(o.bindTexture(N.type,null),N.type=void 0,N.texture=void 0)}function K(){try{o.compressedTexImage2D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function ee(){try{o.compressedTexImage3D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Z(){try{o.texSubImage2D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Ce(){try{o.texSubImage3D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function ge(){try{o.compressedTexSubImage2D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Le(){try{o.compressedTexSubImage3D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Ne(){try{o.texStorage2D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function oe(){try{o.texStorage3D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Se(){try{o.texImage2D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Oe(){try{o.texImage3D(...arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function He(N){Fe.equals(N)===!1&&(o.scissor(N.x,N.y,N.z,N.w),Fe.copy(N))}function Ee(N){q.equals(N)===!1&&(o.viewport(N.x,N.y,N.z,N.w),q.copy(N))}function nt(N,xe){let j=c.get(xe);j===void 0&&(j=new WeakMap,c.set(xe,j));let Q=j.get(N);Q===void 0&&(Q=o.getUniformBlockIndex(xe,N.name),j.set(N,Q))}function je(N,xe){const Q=c.get(xe).get(N);l.get(xe)!==Q&&(o.uniformBlockBinding(xe,Q,N.__bindingPointIndex),l.set(xe,Q))}function xt(){o.disable(o.BLEND),o.disable(o.CULL_FACE),o.disable(o.DEPTH_TEST),o.disable(o.POLYGON_OFFSET_FILL),o.disable(o.SCISSOR_TEST),o.disable(o.STENCIL_TEST),o.disable(o.SAMPLE_ALPHA_TO_COVERAGE),o.blendEquation(o.FUNC_ADD),o.blendFunc(o.ONE,o.ZERO),o.blendFuncSeparate(o.ONE,o.ZERO,o.ONE,o.ZERO),o.blendColor(0,0,0,0),o.colorMask(!0,!0,!0,!0),o.clearColor(0,0,0,0),o.depthMask(!0),o.depthFunc(o.LESS),r.setReversed(!1),o.clearDepth(1),o.stencilMask(4294967295),o.stencilFunc(o.ALWAYS,0,4294967295),o.stencilOp(o.KEEP,o.KEEP,o.KEEP),o.clearStencil(0),o.cullFace(o.BACK),o.frontFace(o.CCW),o.polygonOffset(0,0),o.activeTexture(o.TEXTURE0),o.bindFramebuffer(o.FRAMEBUFFER,null),o.bindFramebuffer(o.DRAW_FRAMEBUFFER,null),o.bindFramebuffer(o.READ_FRAMEBUFFER,null),o.useProgram(null),o.lineWidth(1),o.scissor(0,0,o.canvas.width,o.canvas.height),o.viewport(0,0,o.canvas.width,o.canvas.height),h={},te=null,ne={},u={},d=new WeakMap,f=[],p=null,m=!1,g=null,_=null,y=null,v=null,x=null,S=null,T=null,w=new le(0,0,0),E=0,M=!1,b=null,I=null,D=null,U=null,O=null,Fe.set(0,0,o.canvas.width,o.canvas.height),q.set(0,0,o.canvas.width,o.canvas.height),s.reset(),r.reset(),a.reset()}return{buffers:{color:s,depth:r,stencil:a},enable:he,disable:we,bindFramebuffer:Ie,drawBuffers:Re,useProgram:ct,setBlending:L,setMaterial:pe,setFlipSided:ie,setCullFace:ce,setLineWidth:J,setPolygonOffset:Pe,setScissorTest:re,activeTexture:P,bindTexture:C,unbindTexture:z,compressedTexImage2D:K,compressedTexImage3D:ee,texImage2D:Se,texImage3D:Oe,updateUBOMapping:nt,uniformBlockBinding:je,texStorage2D:Ne,texStorage3D:oe,texSubImage2D:Z,texSubImage3D:Ce,compressedTexSubImage2D:ge,compressedTexSubImage3D:Le,scissor:He,viewport:Ee,reset:xt}}function hR(o,e,t,n,i,s,r){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new G,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(P,C){return f?new OffscreenCanvas(P,C):fl("canvas")}function m(P,C,z){let K=1;const ee=re(P);if((ee.width>z||ee.height>z)&&(K=z/Math.max(ee.width,ee.height)),K<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const Z=Math.floor(K*ee.width),Ce=Math.floor(K*ee.height);u===void 0&&(u=p(Z,Ce));const ge=C?p(Z,Ce):u;return ge.width=Z,ge.height=Ce,ge.getContext("2d").drawImage(P,0,0,Z,Ce),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ee.width+"x"+ee.height+") to ("+Z+"x"+Ce+")."),ge}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ee.width+"x"+ee.height+")."),P;return P}function g(P){return P.generateMipmaps}function _(P){o.generateMipmap(P)}function y(P){return P.isWebGLCubeRenderTarget?o.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?o.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?o.TEXTURE_2D_ARRAY:o.TEXTURE_2D}function v(P,C,z,K,ee=!1){if(P!==null){if(o[P]!==void 0)return o[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let Z=C;if(C===o.RED&&(z===o.FLOAT&&(Z=o.R32F),z===o.HALF_FLOAT&&(Z=o.R16F),z===o.UNSIGNED_BYTE&&(Z=o.R8)),C===o.RED_INTEGER&&(z===o.UNSIGNED_BYTE&&(Z=o.R8UI),z===o.UNSIGNED_SHORT&&(Z=o.R16UI),z===o.UNSIGNED_INT&&(Z=o.R32UI),z===o.BYTE&&(Z=o.R8I),z===o.SHORT&&(Z=o.R16I),z===o.INT&&(Z=o.R32I)),C===o.RG&&(z===o.FLOAT&&(Z=o.RG32F),z===o.HALF_FLOAT&&(Z=o.RG16F),z===o.UNSIGNED_BYTE&&(Z=o.RG8)),C===o.RG_INTEGER&&(z===o.UNSIGNED_BYTE&&(Z=o.RG8UI),z===o.UNSIGNED_SHORT&&(Z=o.RG16UI),z===o.UNSIGNED_INT&&(Z=o.RG32UI),z===o.BYTE&&(Z=o.RG8I),z===o.SHORT&&(Z=o.RG16I),z===o.INT&&(Z=o.RG32I)),C===o.RGB_INTEGER&&(z===o.UNSIGNED_BYTE&&(Z=o.RGB8UI),z===o.UNSIGNED_SHORT&&(Z=o.RGB16UI),z===o.UNSIGNED_INT&&(Z=o.RGB32UI),z===o.BYTE&&(Z=o.RGB8I),z===o.SHORT&&(Z=o.RGB16I),z===o.INT&&(Z=o.RGB32I)),C===o.RGBA_INTEGER&&(z===o.UNSIGNED_BYTE&&(Z=o.RGBA8UI),z===o.UNSIGNED_SHORT&&(Z=o.RGBA16UI),z===o.UNSIGNED_INT&&(Z=o.RGBA32UI),z===o.BYTE&&(Z=o.RGBA8I),z===o.SHORT&&(Z=o.RGBA16I),z===o.INT&&(Z=o.RGBA32I)),C===o.RGB&&z===o.UNSIGNED_INT_5_9_9_9_REV&&(Z=o.RGB9_E5),C===o.RGBA){const Ce=ee?hl:Je.getTransfer(K);z===o.FLOAT&&(Z=o.RGBA32F),z===o.HALF_FLOAT&&(Z=o.RGBA16F),z===o.UNSIGNED_BYTE&&(Z=Ce===ft?o.SRGB8_ALPHA8:o.RGBA8),z===o.UNSIGNED_SHORT_4_4_4_4&&(Z=o.RGBA4),z===o.UNSIGNED_SHORT_5_5_5_1&&(Z=o.RGB5_A1)}return(Z===o.R16F||Z===o.R32F||Z===o.RG16F||Z===o.RG32F||Z===o.RGBA16F||Z===o.RGBA32F)&&e.get("EXT_color_buffer_float"),Z}function x(P,C){let z;return P?C===null||C===_s||C===qo?z=o.DEPTH24_STENCIL8:C===Dn?z=o.DEPTH32F_STENCIL8:C===Xo&&(z=o.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===_s||C===qo?z=o.DEPTH_COMPONENT24:C===Dn?z=o.DEPTH_COMPONENT32F:C===Xo&&(z=o.DEPTH_COMPONENT16),z}function S(P,C){return g(P)===!0||P.isFramebufferTexture&&P.minFilter!==Gt&&P.minFilter!==Tt?Math.log2(Math.max(C.width,C.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?C.mipmaps.length:1}function T(P){const C=P.target;C.removeEventListener("dispose",T),E(C),C.isVideoTexture&&h.delete(C)}function w(P){const C=P.target;C.removeEventListener("dispose",w),b(C)}function E(P){const C=n.get(P);if(C.__webglInit===void 0)return;const z=P.source,K=d.get(z);if(K){const ee=K[C.__cacheKey];ee.usedTimes--,ee.usedTimes===0&&M(P),Object.keys(K).length===0&&d.delete(z)}n.remove(P)}function M(P){const C=n.get(P);o.deleteTexture(C.__webglTexture);const z=P.source,K=d.get(z);delete K[C.__cacheKey],r.memory.textures--}function b(P){const C=n.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),n.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let K=0;K<6;K++){if(Array.isArray(C.__webglFramebuffer[K]))for(let ee=0;ee<C.__webglFramebuffer[K].length;ee++)o.deleteFramebuffer(C.__webglFramebuffer[K][ee]);else o.deleteFramebuffer(C.__webglFramebuffer[K]);C.__webglDepthbuffer&&o.deleteRenderbuffer(C.__webglDepthbuffer[K])}else{if(Array.isArray(C.__webglFramebuffer))for(let K=0;K<C.__webglFramebuffer.length;K++)o.deleteFramebuffer(C.__webglFramebuffer[K]);else o.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&o.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&o.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let K=0;K<C.__webglColorRenderbuffer.length;K++)C.__webglColorRenderbuffer[K]&&o.deleteRenderbuffer(C.__webglColorRenderbuffer[K]);C.__webglDepthRenderbuffer&&o.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const z=P.textures;for(let K=0,ee=z.length;K<ee;K++){const Z=n.get(z[K]);Z.__webglTexture&&(o.deleteTexture(Z.__webglTexture),r.memory.textures--),n.remove(z[K])}n.remove(P)}let I=0;function D(){I=0}function U(){const P=I;return P>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+i.maxTextures),I+=1,P}function O(P){const C=[];return C.push(P.wrapS),C.push(P.wrapT),C.push(P.wrapR||0),C.push(P.magFilter),C.push(P.minFilter),C.push(P.anisotropy),C.push(P.internalFormat),C.push(P.format),C.push(P.type),C.push(P.generateMipmaps),C.push(P.premultiplyAlpha),C.push(P.flipY),C.push(P.unpackAlignment),C.push(P.colorSpace),C.join()}function V(P,C){const z=n.get(P);if(P.isVideoTexture&&J(P),P.isRenderTargetTexture===!1&&P.version>0&&z.__version!==P.version){const K=P.image;if(K===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(K.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{q(z,P,C);return}}t.bindTexture(o.TEXTURE_2D,z.__webglTexture,o.TEXTURE0+C)}function F(P,C){const z=n.get(P);if(P.version>0&&z.__version!==P.version){q(z,P,C);return}t.bindTexture(o.TEXTURE_2D_ARRAY,z.__webglTexture,o.TEXTURE0+C)}function $(P,C){const z=n.get(P);if(P.version>0&&z.__version!==P.version){q(z,P,C);return}t.bindTexture(o.TEXTURE_3D,z.__webglTexture,o.TEXTURE0+C)}function H(P,C){const z=n.get(P);if(P.version>0&&z.__version!==P.version){Y(z,P,C);return}t.bindTexture(o.TEXTURE_CUBE_MAP,z.__webglTexture,o.TEXTURE0+C)}const te={[$s]:o.REPEAT,[Yn]:o.CLAMP_TO_EDGE,[Wo]:o.MIRRORED_REPEAT},ne={[Gt]:o.NEAREST,[hu]:o.NEAREST_MIPMAP_NEAREST,[Pr]:o.NEAREST_MIPMAP_LINEAR,[Tt]:o.LINEAR,[Fo]:o.LINEAR_MIPMAP_NEAREST,[fi]:o.LINEAR_MIPMAP_LINEAR},se={[sy]:o.NEVER,[hy]:o.ALWAYS,[ry]:o.LESS,[zp]:o.LEQUAL,[oy]:o.EQUAL,[cy]:o.GEQUAL,[ay]:o.GREATER,[ly]:o.NOTEQUAL};function Me(P,C){if(C.type===Dn&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===Tt||C.magFilter===Fo||C.magFilter===Pr||C.magFilter===fi||C.minFilter===Tt||C.minFilter===Fo||C.minFilter===Pr||C.minFilter===fi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),o.texParameteri(P,o.TEXTURE_WRAP_S,te[C.wrapS]),o.texParameteri(P,o.TEXTURE_WRAP_T,te[C.wrapT]),(P===o.TEXTURE_3D||P===o.TEXTURE_2D_ARRAY)&&o.texParameteri(P,o.TEXTURE_WRAP_R,te[C.wrapR]),o.texParameteri(P,o.TEXTURE_MAG_FILTER,ne[C.magFilter]),o.texParameteri(P,o.TEXTURE_MIN_FILTER,ne[C.minFilter]),C.compareFunction&&(o.texParameteri(P,o.TEXTURE_COMPARE_MODE,o.COMPARE_REF_TO_TEXTURE),o.texParameteri(P,o.TEXTURE_COMPARE_FUNC,se[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===Gt||C.minFilter!==Pr&&C.minFilter!==fi||C.type===Dn&&e.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const z=e.get("EXT_texture_filter_anisotropic");o.texParameterf(P,z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function Fe(P,C){let z=!1;P.__webglInit===void 0&&(P.__webglInit=!0,C.addEventListener("dispose",T));const K=C.source;let ee=d.get(K);ee===void 0&&(ee={},d.set(K,ee));const Z=O(C);if(Z!==P.__cacheKey){ee[Z]===void 0&&(ee[Z]={texture:o.createTexture(),usedTimes:0},r.memory.textures++,z=!0),ee[Z].usedTimes++;const Ce=ee[P.__cacheKey];Ce!==void 0&&(ee[P.__cacheKey].usedTimes--,Ce.usedTimes===0&&M(C)),P.__cacheKey=Z,P.__webglTexture=ee[Z].texture}return z}function q(P,C,z){let K=o.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(K=o.TEXTURE_2D_ARRAY),C.isData3DTexture&&(K=o.TEXTURE_3D);const ee=Fe(P,C),Z=C.source;t.bindTexture(K,P.__webglTexture,o.TEXTURE0+z);const Ce=n.get(Z);if(Z.version!==Ce.__version||ee===!0){t.activeTexture(o.TEXTURE0+z);const ge=Je.getPrimaries(Je.workingColorSpace),Le=C.colorSpace===ls?null:Je.getPrimaries(C.colorSpace),Ne=C.colorSpace===ls||ge===Le?o.NONE:o.BROWSER_DEFAULT_WEBGL;o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,C.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,C.unpackAlignment),o.pixelStorei(o.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ne);let oe=m(C.image,!1,i.maxTextureSize);oe=Pe(C,oe);const Se=s.convert(C.format,C.colorSpace),Oe=s.convert(C.type);let He=v(C.internalFormat,Se,Oe,C.colorSpace,C.isVideoTexture);Me(K,C);let Ee;const nt=C.mipmaps,je=C.isVideoTexture!==!0,xt=Ce.__version===void 0||ee===!0,N=Z.dataReady,xe=S(C,oe);if(C.isDepthTexture)He=x(C.format===$o,C.type),xt&&(je?t.texStorage2D(o.TEXTURE_2D,1,He,oe.width,oe.height):t.texImage2D(o.TEXTURE_2D,0,He,oe.width,oe.height,0,Se,Oe,null));else if(C.isDataTexture)if(nt.length>0){je&&xt&&t.texStorage2D(o.TEXTURE_2D,xe,He,nt[0].width,nt[0].height);for(let j=0,Q=nt.length;j<Q;j++)Ee=nt[j],je?N&&t.texSubImage2D(o.TEXTURE_2D,j,0,0,Ee.width,Ee.height,Se,Oe,Ee.data):t.texImage2D(o.TEXTURE_2D,j,He,Ee.width,Ee.height,0,Se,Oe,Ee.data);C.generateMipmaps=!1}else je?(xt&&t.texStorage2D(o.TEXTURE_2D,xe,He,oe.width,oe.height),N&&t.texSubImage2D(o.TEXTURE_2D,0,0,0,oe.width,oe.height,Se,Oe,oe.data)):t.texImage2D(o.TEXTURE_2D,0,He,oe.width,oe.height,0,Se,Oe,oe.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){je&&xt&&t.texStorage3D(o.TEXTURE_2D_ARRAY,xe,He,nt[0].width,nt[0].height,oe.depth);for(let j=0,Q=nt.length;j<Q;j++)if(Ee=nt[j],C.format!==wn)if(Se!==null)if(je){if(N)if(C.layerUpdates.size>0){const ve=Qf(Ee.width,Ee.height,C.format,C.type);for(const ye of C.layerUpdates){const $e=Ee.data.subarray(ye*ve/Ee.data.BYTES_PER_ELEMENT,(ye+1)*ve/Ee.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(o.TEXTURE_2D_ARRAY,j,0,0,ye,Ee.width,Ee.height,1,Se,$e)}C.clearLayerUpdates()}else t.compressedTexSubImage3D(o.TEXTURE_2D_ARRAY,j,0,0,0,Ee.width,Ee.height,oe.depth,Se,Ee.data)}else t.compressedTexImage3D(o.TEXTURE_2D_ARRAY,j,He,Ee.width,Ee.height,oe.depth,0,Ee.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else je?N&&t.texSubImage3D(o.TEXTURE_2D_ARRAY,j,0,0,0,Ee.width,Ee.height,oe.depth,Se,Oe,Ee.data):t.texImage3D(o.TEXTURE_2D_ARRAY,j,He,Ee.width,Ee.height,oe.depth,0,Se,Oe,Ee.data)}else{je&&xt&&t.texStorage2D(o.TEXTURE_2D,xe,He,nt[0].width,nt[0].height);for(let j=0,Q=nt.length;j<Q;j++)Ee=nt[j],C.format!==wn?Se!==null?je?N&&t.compressedTexSubImage2D(o.TEXTURE_2D,j,0,0,Ee.width,Ee.height,Se,Ee.data):t.compressedTexImage2D(o.TEXTURE_2D,j,He,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):je?N&&t.texSubImage2D(o.TEXTURE_2D,j,0,0,Ee.width,Ee.height,Se,Oe,Ee.data):t.texImage2D(o.TEXTURE_2D,j,He,Ee.width,Ee.height,0,Se,Oe,Ee.data)}else if(C.isDataArrayTexture)if(je){if(xt&&t.texStorage3D(o.TEXTURE_2D_ARRAY,xe,He,oe.width,oe.height,oe.depth),N)if(C.layerUpdates.size>0){const j=Qf(oe.width,oe.height,C.format,C.type);for(const Q of C.layerUpdates){const ve=oe.data.subarray(Q*j/oe.data.BYTES_PER_ELEMENT,(Q+1)*j/oe.data.BYTES_PER_ELEMENT);t.texSubImage3D(o.TEXTURE_2D_ARRAY,0,0,0,Q,oe.width,oe.height,1,Se,Oe,ve)}C.clearLayerUpdates()}else t.texSubImage3D(o.TEXTURE_2D_ARRAY,0,0,0,0,oe.width,oe.height,oe.depth,Se,Oe,oe.data)}else t.texImage3D(o.TEXTURE_2D_ARRAY,0,He,oe.width,oe.height,oe.depth,0,Se,Oe,oe.data);else if(C.isData3DTexture)je?(xt&&t.texStorage3D(o.TEXTURE_3D,xe,He,oe.width,oe.height,oe.depth),N&&t.texSubImage3D(o.TEXTURE_3D,0,0,0,0,oe.width,oe.height,oe.depth,Se,Oe,oe.data)):t.texImage3D(o.TEXTURE_3D,0,He,oe.width,oe.height,oe.depth,0,Se,Oe,oe.data);else if(C.isFramebufferTexture){if(xt)if(je)t.texStorage2D(o.TEXTURE_2D,xe,He,oe.width,oe.height);else{let j=oe.width,Q=oe.height;for(let ve=0;ve<xe;ve++)t.texImage2D(o.TEXTURE_2D,ve,He,j,Q,0,Se,Oe,null),j>>=1,Q>>=1}}else if(nt.length>0){if(je&&xt){const j=re(nt[0]);t.texStorage2D(o.TEXTURE_2D,xe,He,j.width,j.height)}for(let j=0,Q=nt.length;j<Q;j++)Ee=nt[j],je?N&&t.texSubImage2D(o.TEXTURE_2D,j,0,0,Se,Oe,Ee):t.texImage2D(o.TEXTURE_2D,j,He,Se,Oe,Ee);C.generateMipmaps=!1}else if(je){if(xt){const j=re(oe);t.texStorage2D(o.TEXTURE_2D,xe,He,j.width,j.height)}N&&t.texSubImage2D(o.TEXTURE_2D,0,0,0,Se,Oe,oe)}else t.texImage2D(o.TEXTURE_2D,0,He,Se,Oe,oe);g(C)&&_(K),Ce.__version=Z.version,C.onUpdate&&C.onUpdate(C)}P.__version=C.version}function Y(P,C,z){if(C.image.length!==6)return;const K=Fe(P,C),ee=C.source;t.bindTexture(o.TEXTURE_CUBE_MAP,P.__webglTexture,o.TEXTURE0+z);const Z=n.get(ee);if(ee.version!==Z.__version||K===!0){t.activeTexture(o.TEXTURE0+z);const Ce=Je.getPrimaries(Je.workingColorSpace),ge=C.colorSpace===ls?null:Je.getPrimaries(C.colorSpace),Le=C.colorSpace===ls||Ce===ge?o.NONE:o.BROWSER_DEFAULT_WEBGL;o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,C.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,C.unpackAlignment),o.pixelStorei(o.UNPACK_COLORSPACE_CONVERSION_WEBGL,Le);const Ne=C.isCompressedTexture||C.image[0].isCompressedTexture,oe=C.image[0]&&C.image[0].isDataTexture,Se=[];for(let Q=0;Q<6;Q++)!Ne&&!oe?Se[Q]=m(C.image[Q],!0,i.maxCubemapSize):Se[Q]=oe?C.image[Q].image:C.image[Q],Se[Q]=Pe(C,Se[Q]);const Oe=Se[0],He=s.convert(C.format,C.colorSpace),Ee=s.convert(C.type),nt=v(C.internalFormat,He,Ee,C.colorSpace),je=C.isVideoTexture!==!0,xt=Z.__version===void 0||K===!0,N=ee.dataReady;let xe=S(C,Oe);Me(o.TEXTURE_CUBE_MAP,C);let j;if(Ne){je&&xt&&t.texStorage2D(o.TEXTURE_CUBE_MAP,xe,nt,Oe.width,Oe.height);for(let Q=0;Q<6;Q++){j=Se[Q].mipmaps;for(let ve=0;ve<j.length;ve++){const ye=j[ve];C.format!==wn?He!==null?je?N&&t.compressedTexSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve,0,0,ye.width,ye.height,He,ye.data):t.compressedTexImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve,nt,ye.width,ye.height,0,ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):je?N&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve,0,0,ye.width,ye.height,He,Ee,ye.data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve,nt,ye.width,ye.height,0,He,Ee,ye.data)}}}else{if(j=C.mipmaps,je&&xt){j.length>0&&xe++;const Q=re(Se[0]);t.texStorage2D(o.TEXTURE_CUBE_MAP,xe,nt,Q.width,Q.height)}for(let Q=0;Q<6;Q++)if(oe){je?N&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,0,0,Se[Q].width,Se[Q].height,He,Ee,Se[Q].data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,nt,Se[Q].width,Se[Q].height,0,He,Ee,Se[Q].data);for(let ve=0;ve<j.length;ve++){const $e=j[ve].image[Q].image;je?N&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve+1,0,0,$e.width,$e.height,He,Ee,$e.data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve+1,nt,$e.width,$e.height,0,He,Ee,$e.data)}}else{je?N&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,0,0,He,Ee,Se[Q]):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,nt,He,Ee,Se[Q]);for(let ve=0;ve<j.length;ve++){const ye=j[ve];je?N&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve+1,0,0,He,Ee,ye.image[Q]):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ve+1,nt,He,Ee,ye.image[Q])}}}g(C)&&_(o.TEXTURE_CUBE_MAP),Z.__version=ee.version,C.onUpdate&&C.onUpdate(C)}P.__version=C.version}function fe(P,C,z,K,ee,Z){const Ce=s.convert(z.format,z.colorSpace),ge=s.convert(z.type),Le=v(z.internalFormat,Ce,ge,z.colorSpace),Ne=n.get(C),oe=n.get(z);if(oe.__renderTarget=C,!Ne.__hasExternalTextures){const Se=Math.max(1,C.width>>Z),Oe=Math.max(1,C.height>>Z);ee===o.TEXTURE_3D||ee===o.TEXTURE_2D_ARRAY?t.texImage3D(ee,Z,Le,Se,Oe,C.depth,0,Ce,ge,null):t.texImage2D(ee,Z,Le,Se,Oe,0,Ce,ge,null)}t.bindFramebuffer(o.FRAMEBUFFER,P),ce(C)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,K,ee,oe.__webglTexture,0,ie(C)):(ee===o.TEXTURE_2D||ee>=o.TEXTURE_CUBE_MAP_POSITIVE_X&&ee<=o.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&o.framebufferTexture2D(o.FRAMEBUFFER,K,ee,oe.__webglTexture,Z),t.bindFramebuffer(o.FRAMEBUFFER,null)}function he(P,C,z){if(o.bindRenderbuffer(o.RENDERBUFFER,P),C.depthBuffer){const K=C.depthTexture,ee=K&&K.isDepthTexture?K.type:null,Z=x(C.stencilBuffer,ee),Ce=C.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,ge=ie(C);ce(C)?a.renderbufferStorageMultisampleEXT(o.RENDERBUFFER,ge,Z,C.width,C.height):z?o.renderbufferStorageMultisample(o.RENDERBUFFER,ge,Z,C.width,C.height):o.renderbufferStorage(o.RENDERBUFFER,Z,C.width,C.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,Ce,o.RENDERBUFFER,P)}else{const K=C.textures;for(let ee=0;ee<K.length;ee++){const Z=K[ee],Ce=s.convert(Z.format,Z.colorSpace),ge=s.convert(Z.type),Le=v(Z.internalFormat,Ce,ge,Z.colorSpace),Ne=ie(C);z&&ce(C)===!1?o.renderbufferStorageMultisample(o.RENDERBUFFER,Ne,Le,C.width,C.height):ce(C)?a.renderbufferStorageMultisampleEXT(o.RENDERBUFFER,Ne,Le,C.width,C.height):o.renderbufferStorage(o.RENDERBUFFER,Le,C.width,C.height)}}o.bindRenderbuffer(o.RENDERBUFFER,null)}function we(P,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(o.FRAMEBUFFER,P),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const K=n.get(C.depthTexture);K.__renderTarget=C,(!K.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),V(C.depthTexture,0);const ee=K.__webglTexture,Z=ie(C);if(C.depthTexture.format===Yo)ce(C)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.TEXTURE_2D,ee,0,Z):o.framebufferTexture2D(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.TEXTURE_2D,ee,0);else if(C.depthTexture.format===$o)ce(C)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.TEXTURE_2D,ee,0,Z):o.framebufferTexture2D(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.TEXTURE_2D,ee,0);else throw new Error("Unknown depthTexture format")}function Ie(P){const C=n.get(P),z=P.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==P.depthTexture){const K=P.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),K){const ee=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,K.removeEventListener("dispose",ee)};K.addEventListener("dispose",ee),C.__depthDisposeCallback=ee}C.__boundDepthTexture=K}if(P.depthTexture&&!C.__autoAllocateDepthBuffer){if(z)throw new Error("target.depthTexture not supported in Cube render targets");const K=P.texture.mipmaps;K&&K.length>0?we(C.__webglFramebuffer[0],P):we(C.__webglFramebuffer,P)}else if(z){C.__webglDepthbuffer=[];for(let K=0;K<6;K++)if(t.bindFramebuffer(o.FRAMEBUFFER,C.__webglFramebuffer[K]),C.__webglDepthbuffer[K]===void 0)C.__webglDepthbuffer[K]=o.createRenderbuffer(),he(C.__webglDepthbuffer[K],P,!1);else{const ee=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,Z=C.__webglDepthbuffer[K];o.bindRenderbuffer(o.RENDERBUFFER,Z),o.framebufferRenderbuffer(o.FRAMEBUFFER,ee,o.RENDERBUFFER,Z)}}else{const K=P.texture.mipmaps;if(K&&K.length>0?t.bindFramebuffer(o.FRAMEBUFFER,C.__webglFramebuffer[0]):t.bindFramebuffer(o.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=o.createRenderbuffer(),he(C.__webglDepthbuffer,P,!1);else{const ee=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,Z=C.__webglDepthbuffer;o.bindRenderbuffer(o.RENDERBUFFER,Z),o.framebufferRenderbuffer(o.FRAMEBUFFER,ee,o.RENDERBUFFER,Z)}}t.bindFramebuffer(o.FRAMEBUFFER,null)}function Re(P,C,z){const K=n.get(P);C!==void 0&&fe(K.__webglFramebuffer,P,P.texture,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,0),z!==void 0&&Ie(P)}function ct(P){const C=P.texture,z=n.get(P),K=n.get(C);P.addEventListener("dispose",w);const ee=P.textures,Z=P.isWebGLCubeRenderTarget===!0,Ce=ee.length>1;if(Ce||(K.__webglTexture===void 0&&(K.__webglTexture=o.createTexture()),K.__version=C.version,r.memory.textures++),Z){z.__webglFramebuffer=[];for(let ge=0;ge<6;ge++)if(C.mipmaps&&C.mipmaps.length>0){z.__webglFramebuffer[ge]=[];for(let Le=0;Le<C.mipmaps.length;Le++)z.__webglFramebuffer[ge][Le]=o.createFramebuffer()}else z.__webglFramebuffer[ge]=o.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){z.__webglFramebuffer=[];for(let ge=0;ge<C.mipmaps.length;ge++)z.__webglFramebuffer[ge]=o.createFramebuffer()}else z.__webglFramebuffer=o.createFramebuffer();if(Ce)for(let ge=0,Le=ee.length;ge<Le;ge++){const Ne=n.get(ee[ge]);Ne.__webglTexture===void 0&&(Ne.__webglTexture=o.createTexture(),r.memory.textures++)}if(P.samples>0&&ce(P)===!1){z.__webglMultisampledFramebuffer=o.createFramebuffer(),z.__webglColorRenderbuffer=[],t.bindFramebuffer(o.FRAMEBUFFER,z.__webglMultisampledFramebuffer);for(let ge=0;ge<ee.length;ge++){const Le=ee[ge];z.__webglColorRenderbuffer[ge]=o.createRenderbuffer(),o.bindRenderbuffer(o.RENDERBUFFER,z.__webglColorRenderbuffer[ge]);const Ne=s.convert(Le.format,Le.colorSpace),oe=s.convert(Le.type),Se=v(Le.internalFormat,Ne,oe,Le.colorSpace,P.isXRRenderTarget===!0),Oe=ie(P);o.renderbufferStorageMultisample(o.RENDERBUFFER,Oe,Se,P.width,P.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+ge,o.RENDERBUFFER,z.__webglColorRenderbuffer[ge])}o.bindRenderbuffer(o.RENDERBUFFER,null),P.depthBuffer&&(z.__webglDepthRenderbuffer=o.createRenderbuffer(),he(z.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(o.FRAMEBUFFER,null)}}if(Z){t.bindTexture(o.TEXTURE_CUBE_MAP,K.__webglTexture),Me(o.TEXTURE_CUBE_MAP,C);for(let ge=0;ge<6;ge++)if(C.mipmaps&&C.mipmaps.length>0)for(let Le=0;Le<C.mipmaps.length;Le++)fe(z.__webglFramebuffer[ge][Le],P,C,o.COLOR_ATTACHMENT0,o.TEXTURE_CUBE_MAP_POSITIVE_X+ge,Le);else fe(z.__webglFramebuffer[ge],P,C,o.COLOR_ATTACHMENT0,o.TEXTURE_CUBE_MAP_POSITIVE_X+ge,0);g(C)&&_(o.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ce){for(let ge=0,Le=ee.length;ge<Le;ge++){const Ne=ee[ge],oe=n.get(Ne);t.bindTexture(o.TEXTURE_2D,oe.__webglTexture),Me(o.TEXTURE_2D,Ne),fe(z.__webglFramebuffer,P,Ne,o.COLOR_ATTACHMENT0+ge,o.TEXTURE_2D,0),g(Ne)&&_(o.TEXTURE_2D)}t.unbindTexture()}else{let ge=o.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(ge=P.isWebGL3DRenderTarget?o.TEXTURE_3D:o.TEXTURE_2D_ARRAY),t.bindTexture(ge,K.__webglTexture),Me(ge,C),C.mipmaps&&C.mipmaps.length>0)for(let Le=0;Le<C.mipmaps.length;Le++)fe(z.__webglFramebuffer[Le],P,C,o.COLOR_ATTACHMENT0,ge,Le);else fe(z.__webglFramebuffer,P,C,o.COLOR_ATTACHMENT0,ge,0);g(C)&&_(ge),t.unbindTexture()}P.depthBuffer&&Ie(P)}function Ke(P){const C=P.textures;for(let z=0,K=C.length;z<K;z++){const ee=C[z];if(g(ee)){const Z=y(P),Ce=n.get(ee).__webglTexture;t.bindTexture(Z,Ce),_(Z),t.unbindTexture()}}}const Be=[],L=[];function pe(P){if(P.samples>0){if(ce(P)===!1){const C=P.textures,z=P.width,K=P.height;let ee=o.COLOR_BUFFER_BIT;const Z=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,Ce=n.get(P),ge=C.length>1;if(ge)for(let Ne=0;Ne<C.length;Ne++)t.bindFramebuffer(o.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ne,o.RENDERBUFFER,null),t.bindFramebuffer(o.FRAMEBUFFER,Ce.__webglFramebuffer),o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ne,o.TEXTURE_2D,null,0);t.bindFramebuffer(o.READ_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer);const Le=P.texture.mipmaps;Le&&Le.length>0?t.bindFramebuffer(o.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer[0]):t.bindFramebuffer(o.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer);for(let Ne=0;Ne<C.length;Ne++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(ee|=o.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(ee|=o.STENCIL_BUFFER_BIT)),ge){o.framebufferRenderbuffer(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.RENDERBUFFER,Ce.__webglColorRenderbuffer[Ne]);const oe=n.get(C[Ne]).__webglTexture;o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,oe,0)}o.blitFramebuffer(0,0,z,K,0,0,z,K,ee,o.NEAREST),l===!0&&(Be.length=0,L.length=0,Be.push(o.COLOR_ATTACHMENT0+Ne),P.depthBuffer&&P.resolveDepthBuffer===!1&&(Be.push(Z),L.push(Z),o.invalidateFramebuffer(o.DRAW_FRAMEBUFFER,L)),o.invalidateFramebuffer(o.READ_FRAMEBUFFER,Be))}if(t.bindFramebuffer(o.READ_FRAMEBUFFER,null),t.bindFramebuffer(o.DRAW_FRAMEBUFFER,null),ge)for(let Ne=0;Ne<C.length;Ne++){t.bindFramebuffer(o.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ne,o.RENDERBUFFER,Ce.__webglColorRenderbuffer[Ne]);const oe=n.get(C[Ne]).__webglTexture;t.bindFramebuffer(o.FRAMEBUFFER,Ce.__webglFramebuffer),o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ne,o.TEXTURE_2D,oe,0)}t.bindFramebuffer(o.DRAW_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const C=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT;o.invalidateFramebuffer(o.DRAW_FRAMEBUFFER,[C])}}}function ie(P){return Math.min(i.maxSamples,P.samples)}function ce(P){const C=n.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function J(P){const C=r.render.frame;h.get(P)!==C&&(h.set(P,C),P.update())}function Pe(P,C){const z=P.colorSpace,K=P.format,ee=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||z!==nn&&z!==ls&&(Je.getTransfer(z)===ft?(K!==wn||ee!==Jn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",z)),C}function re(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=U,this.resetTextureUnits=D,this.setTexture2D=V,this.setTexture2DArray=F,this.setTexture3D=$,this.setTextureCube=H,this.rebindTextures=Re,this.setupRenderTarget=ct,this.updateRenderTargetMipmap=Ke,this.updateMultisampleRenderTarget=pe,this.setupDepthRenderbuffer=Ie,this.setupFrameBufferTexture=fe,this.useMultisampledRTT=ce}function mv(o,e){function t(n,i=ls){let s;const r=Je.getTransfer(i);if(n===Jn)return o.UNSIGNED_BYTE;if(n===du)return o.UNSIGNED_SHORT_4_4_4_4;if(n===fu)return o.UNSIGNED_SHORT_5_5_5_1;if(n===Up)return o.UNSIGNED_INT_5_9_9_9_REV;if(n===Lp)return o.BYTE;if(n===Dp)return o.SHORT;if(n===Xo)return o.UNSIGNED_SHORT;if(n===uu)return o.INT;if(n===_s)return o.UNSIGNED_INT;if(n===Dn)return o.FLOAT;if(n===la)return o.HALF_FLOAT;if(n===Op)return o.ALPHA;if(n===Np)return o.RGB;if(n===wn)return o.RGBA;if(n===Yo)return o.DEPTH_COMPONENT;if(n===$o)return o.DEPTH_STENCIL;if(n===pu)return o.RED;if(n===Pl)return o.RED_INTEGER;if(n===Il)return o.RG;if(n===mu)return o.RG_INTEGER;if(n===gu)return o.RGBA_INTEGER;if(n===Za||n===ja||n===Ka||n===Ja)if(r===ft)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Za)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ja)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ka)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ja)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Za)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ja)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ka)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ja)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===xh||n===yh||n===vh||n===Mh)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===xh)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===yh)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===vh)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Mh)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Sh||n===bh||n===Th)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Sh||n===bh)return r===ft?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Th)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===wh||n===Eh||n===Ah||n===Ch||n===Rh||n===Ph||n===Ih||n===Lh||n===Dh||n===Uh||n===Oh||n===Nh||n===Fh||n===Bh)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===wh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Eh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Ah)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Ch)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Rh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ph)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Ih)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Lh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Dh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Uh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Oh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Nh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Fh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Bh)return r===ft?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Qa||n===kh||n===zh)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Qa)return r===ft?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===kh)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===zh)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Fp||n===Vh||n===Hh||n===Gh)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Qa)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Vh)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Hh)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Gh)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===qo?o.UNSIGNED_INT_24_8:o[n]!==void 0?o[n]:null}return{convert:t}}const uR=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,dR=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class fR{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Mt,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Qn({vertexShader:uR,fragmentShader:dR,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new _t(new Ms(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class pR extends en{constructor(e,t){super();const n=this;let i=null,s=1,r=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const m=new fR,g=t.getContextAttributes();let _=null,y=null;const v=[],x=[],S=new G;let T=null;const w=new Bt;w.viewport=new st;const E=new Bt;E.viewport=new st;const M=[w,E],b=new nv;let I=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(q){let Y=v[q];return Y===void 0&&(Y=new sh,v[q]=Y),Y.getTargetRaySpace()},this.getControllerGrip=function(q){let Y=v[q];return Y===void 0&&(Y=new sh,v[q]=Y),Y.getGripSpace()},this.getHand=function(q){let Y=v[q];return Y===void 0&&(Y=new sh,v[q]=Y),Y.getHandSpace()};function U(q){const Y=x.indexOf(q.inputSource);if(Y===-1)return;const fe=v[Y];fe!==void 0&&(fe.update(q.inputSource,q.frame,c||r),fe.dispatchEvent({type:q.type,data:q.inputSource}))}function O(){i.removeEventListener("select",U),i.removeEventListener("selectstart",U),i.removeEventListener("selectend",U),i.removeEventListener("squeeze",U),i.removeEventListener("squeezestart",U),i.removeEventListener("squeezeend",U),i.removeEventListener("end",O),i.removeEventListener("inputsourceschange",V);for(let q=0;q<v.length;q++){const Y=x[q];Y!==null&&(x[q]=null,v[q].disconnect(Y))}I=null,D=null,m.reset(),e.setRenderTarget(_),f=null,d=null,u=null,i=null,y=null,Fe.stop(),n.isPresenting=!1,e.setPixelRatio(T),e.setSize(S.width,S.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(q){s=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(q){a=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||r},this.setReferenceSpace=function(q){c=q},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(q){if(i=q,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",U),i.addEventListener("selectstart",U),i.addEventListener("selectend",U),i.addEventListener("squeeze",U),i.addEventListener("squeezestart",U),i.addEventListener("squeezeend",U),i.addEventListener("end",O),i.addEventListener("inputsourceschange",V),g.xrCompatible!==!0&&await t.makeXRCompatible(),T=e.getPixelRatio(),e.getSize(S),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let fe=null,he=null,we=null;g.depth&&(we=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,fe=g.stencil?$o:Yo,he=g.stencil?qo:_s);const Ie={colorFormat:t.RGBA8,depthFormat:we,scaleFactor:s};u=new XRWebGLBinding(i,t),d=u.createProjectionLayer(Ie),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),y=new xi(d.textureWidth,d.textureHeight,{format:wn,type:Jn,depthTexture:new Ru(d.textureWidth,d.textureHeight,he,void 0,void 0,void 0,void 0,void 0,void 0,fe),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const fe={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,fe),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),y=new xi(f.framebufferWidth,f.framebufferHeight,{format:wn,type:Jn,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,r=await i.requestReferenceSpace(a),Fe.setContext(i),Fe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};function V(q){for(let Y=0;Y<q.removed.length;Y++){const fe=q.removed[Y],he=x.indexOf(fe);he>=0&&(x[he]=null,v[he].disconnect(fe))}for(let Y=0;Y<q.added.length;Y++){const fe=q.added[Y];let he=x.indexOf(fe);if(he===-1){for(let Ie=0;Ie<v.length;Ie++)if(Ie>=x.length){x.push(fe),he=Ie;break}else if(x[Ie]===null){x[Ie]=fe,he=Ie;break}if(he===-1)break}const we=v[he];we&&we.connect(fe)}}const F=new A,$=new A;function H(q,Y,fe){F.setFromMatrixPosition(Y.matrixWorld),$.setFromMatrixPosition(fe.matrixWorld);const he=F.distanceTo($),we=Y.projectionMatrix.elements,Ie=fe.projectionMatrix.elements,Re=we[14]/(we[10]-1),ct=we[14]/(we[10]+1),Ke=(we[9]+1)/we[5],Be=(we[9]-1)/we[5],L=(we[8]-1)/we[0],pe=(Ie[8]+1)/Ie[0],ie=Re*L,ce=Re*pe,J=he/(-L+pe),Pe=J*-L;if(Y.matrixWorld.decompose(q.position,q.quaternion,q.scale),q.translateX(Pe),q.translateZ(J),q.matrixWorld.compose(q.position,q.quaternion,q.scale),q.matrixWorldInverse.copy(q.matrixWorld).invert(),we[10]===-1)q.projectionMatrix.copy(Y.projectionMatrix),q.projectionMatrixInverse.copy(Y.projectionMatrixInverse);else{const re=Re+J,P=ct+J,C=ie-Pe,z=ce+(he-Pe),K=Ke*ct/P*re,ee=Be*ct/P*re;q.projectionMatrix.makePerspective(C,z,K,ee,re,P),q.projectionMatrixInverse.copy(q.projectionMatrix).invert()}}function te(q,Y){Y===null?q.matrixWorld.copy(q.matrix):q.matrixWorld.multiplyMatrices(Y.matrixWorld,q.matrix),q.matrixWorldInverse.copy(q.matrixWorld).invert()}this.updateCamera=function(q){if(i===null)return;let Y=q.near,fe=q.far;m.texture!==null&&(m.depthNear>0&&(Y=m.depthNear),m.depthFar>0&&(fe=m.depthFar)),b.near=E.near=w.near=Y,b.far=E.far=w.far=fe,(I!==b.near||D!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),I=b.near,D=b.far),w.layers.mask=q.layers.mask|2,E.layers.mask=q.layers.mask|4,b.layers.mask=w.layers.mask|E.layers.mask;const he=q.parent,we=b.cameras;te(b,he);for(let Ie=0;Ie<we.length;Ie++)te(we[Ie],he);we.length===2?H(b,w,E):b.projectionMatrix.copy(w.projectionMatrix),ne(q,b,he)};function ne(q,Y,fe){fe===null?q.matrix.copy(Y.matrixWorld):(q.matrix.copy(fe.matrixWorld),q.matrix.invert(),q.matrix.multiply(Y.matrixWorld)),q.matrix.decompose(q.position,q.quaternion,q.scale),q.updateMatrixWorld(!0),q.projectionMatrix.copy(Y.projectionMatrix),q.projectionMatrixInverse.copy(Y.projectionMatrixInverse),q.isPerspectiveCamera&&(q.fov=Ko*2*Math.atan(1/q.projectionMatrix.elements[5]),q.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(q){l=q,d!==null&&(d.fixedFoveation=q),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=q)},this.hasDepthSensing=function(){return m.texture!==null},this.getDepthSensingMesh=function(){return m.getMesh(b)};let se=null;function Me(q,Y){if(h=Y.getViewerPose(c||r),p=Y,h!==null){const fe=h.views;f!==null&&(e.setRenderTargetFramebuffer(y,f.framebuffer),e.setRenderTarget(y));let he=!1;fe.length!==b.cameras.length&&(b.cameras.length=0,he=!0);for(let Re=0;Re<fe.length;Re++){const ct=fe[Re];let Ke=null;if(f!==null)Ke=f.getViewport(ct);else{const L=u.getViewSubImage(d,ct);Ke=L.viewport,Re===0&&(e.setRenderTargetTextures(y,L.colorTexture,L.depthStencilTexture),e.setRenderTarget(y))}let Be=M[Re];Be===void 0&&(Be=new Bt,Be.layers.enable(Re),Be.viewport=new st,M[Re]=Be),Be.matrix.fromArray(ct.transform.matrix),Be.matrix.decompose(Be.position,Be.quaternion,Be.scale),Be.projectionMatrix.fromArray(ct.projectionMatrix),Be.projectionMatrixInverse.copy(Be.projectionMatrix).invert(),Be.viewport.set(Ke.x,Ke.y,Ke.width,Ke.height),Re===0&&(b.matrix.copy(Be.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),he===!0&&b.cameras.push(Be)}const we=i.enabledFeatures;if(we&&we.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&u){const Re=u.getDepthInformation(fe[0]);Re&&Re.isValid&&Re.texture&&m.init(e,Re,i.renderState)}}for(let fe=0;fe<v.length;fe++){const he=x[fe],we=v[fe];he!==null&&we!==void 0&&we.update(he,Y,c||r)}se&&se(q,Y),Y.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Y}),p=null}const Fe=new hv;Fe.setAnimationLoop(Me),this.setAnimationLoop=function(q){se=q},this.dispose=function(){}}}const gr=new An,mR=new de;function gR(o,e){function t(g,_){g.matrixAutoUpdate===!0&&g.updateMatrix(),_.value.copy(g.matrix)}function n(g,_){_.color.getRGB(g.fogColor.value,my(o)),_.isFog?(g.fogNear.value=_.near,g.fogFar.value=_.far):_.isFogExp2&&(g.fogDensity.value=_.density)}function i(g,_,y,v,x){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(g,_):_.isMeshToonMaterial?(s(g,_),u(g,_)):_.isMeshPhongMaterial?(s(g,_),h(g,_)):_.isMeshStandardMaterial?(s(g,_),d(g,_),_.isMeshPhysicalMaterial&&f(g,_,x)):_.isMeshMatcapMaterial?(s(g,_),p(g,_)):_.isMeshDepthMaterial?s(g,_):_.isMeshDistanceMaterial?(s(g,_),m(g,_)):_.isMeshNormalMaterial?s(g,_):_.isLineBasicMaterial?(r(g,_),_.isLineDashedMaterial&&a(g,_)):_.isPointsMaterial?l(g,_,y,v):_.isSpriteMaterial?c(g,_):_.isShadowMaterial?(g.color.value.copy(_.color),g.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(g,_){g.opacity.value=_.opacity,_.color&&g.diffuse.value.copy(_.color),_.emissive&&g.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(g.map.value=_.map,t(_.map,g.mapTransform)),_.alphaMap&&(g.alphaMap.value=_.alphaMap,t(_.alphaMap,g.alphaMapTransform)),_.bumpMap&&(g.bumpMap.value=_.bumpMap,t(_.bumpMap,g.bumpMapTransform),g.bumpScale.value=_.bumpScale,_.side===En&&(g.bumpScale.value*=-1)),_.normalMap&&(g.normalMap.value=_.normalMap,t(_.normalMap,g.normalMapTransform),g.normalScale.value.copy(_.normalScale),_.side===En&&g.normalScale.value.negate()),_.displacementMap&&(g.displacementMap.value=_.displacementMap,t(_.displacementMap,g.displacementMapTransform),g.displacementScale.value=_.displacementScale,g.displacementBias.value=_.displacementBias),_.emissiveMap&&(g.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,g.emissiveMapTransform)),_.specularMap&&(g.specularMap.value=_.specularMap,t(_.specularMap,g.specularMapTransform)),_.alphaTest>0&&(g.alphaTest.value=_.alphaTest);const y=e.get(_),v=y.envMap,x=y.envMapRotation;v&&(g.envMap.value=v,gr.copy(x),gr.x*=-1,gr.y*=-1,gr.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(gr.y*=-1,gr.z*=-1),g.envMapRotation.value.setFromMatrix4(mR.makeRotationFromEuler(gr)),g.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=_.reflectivity,g.ior.value=_.ior,g.refractionRatio.value=_.refractionRatio),_.lightMap&&(g.lightMap.value=_.lightMap,g.lightMapIntensity.value=_.lightMapIntensity,t(_.lightMap,g.lightMapTransform)),_.aoMap&&(g.aoMap.value=_.aoMap,g.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,g.aoMapTransform))}function r(g,_){g.diffuse.value.copy(_.color),g.opacity.value=_.opacity,_.map&&(g.map.value=_.map,t(_.map,g.mapTransform))}function a(g,_){g.dashSize.value=_.dashSize,g.totalSize.value=_.dashSize+_.gapSize,g.scale.value=_.scale}function l(g,_,y,v){g.diffuse.value.copy(_.color),g.opacity.value=_.opacity,g.size.value=_.size*y,g.scale.value=v*.5,_.map&&(g.map.value=_.map,t(_.map,g.uvTransform)),_.alphaMap&&(g.alphaMap.value=_.alphaMap,t(_.alphaMap,g.alphaMapTransform)),_.alphaTest>0&&(g.alphaTest.value=_.alphaTest)}function c(g,_){g.diffuse.value.copy(_.color),g.opacity.value=_.opacity,g.rotation.value=_.rotation,_.map&&(g.map.value=_.map,t(_.map,g.mapTransform)),_.alphaMap&&(g.alphaMap.value=_.alphaMap,t(_.alphaMap,g.alphaMapTransform)),_.alphaTest>0&&(g.alphaTest.value=_.alphaTest)}function h(g,_){g.specular.value.copy(_.specular),g.shininess.value=Math.max(_.shininess,1e-4)}function u(g,_){_.gradientMap&&(g.gradientMap.value=_.gradientMap)}function d(g,_){g.metalness.value=_.metalness,_.metalnessMap&&(g.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,g.metalnessMapTransform)),g.roughness.value=_.roughness,_.roughnessMap&&(g.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,g.roughnessMapTransform)),_.envMap&&(g.envMapIntensity.value=_.envMapIntensity)}function f(g,_,y){g.ior.value=_.ior,_.sheen>0&&(g.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),g.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(g.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,g.sheenColorMapTransform)),_.sheenRoughnessMap&&(g.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,g.sheenRoughnessMapTransform))),_.clearcoat>0&&(g.clearcoat.value=_.clearcoat,g.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(g.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,g.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(g.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===En&&g.clearcoatNormalScale.value.negate())),_.dispersion>0&&(g.dispersion.value=_.dispersion),_.iridescence>0&&(g.iridescence.value=_.iridescence,g.iridescenceIOR.value=_.iridescenceIOR,g.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(g.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,g.iridescenceMapTransform)),_.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),_.transmission>0&&(g.transmission.value=_.transmission,g.transmissionSamplerMap.value=y.texture,g.transmissionSamplerSize.value.set(y.width,y.height),_.transmissionMap&&(g.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,g.transmissionMapTransform)),g.thickness.value=_.thickness,_.thicknessMap&&(g.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=_.attenuationDistance,g.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(g.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(g.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=_.specularIntensity,g.specularColor.value.copy(_.specularColor),_.specularColorMap&&(g.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,g.specularColorMapTransform)),_.specularIntensityMap&&(g.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,_){_.matcap&&(g.matcap.value=_.matcap)}function m(g,_){const y=e.get(_).light;g.referencePosition.value.setFromMatrixPosition(y.matrixWorld),g.nearDistance.value=y.shadow.camera.near,g.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function _R(o,e,t,n){let i={},s={},r=[];const a=o.getParameter(o.MAX_UNIFORM_BUFFER_BINDINGS);function l(y,v){const x=v.program;n.uniformBlockBinding(y,x)}function c(y,v){let x=i[y.id];x===void 0&&(p(y),x=h(y),i[y.id]=x,y.addEventListener("dispose",g));const S=v.program;n.updateUBOMapping(y,S);const T=e.render.frame;s[y.id]!==T&&(d(y),s[y.id]=T)}function h(y){const v=u();y.__bindingPointIndex=v;const x=o.createBuffer(),S=y.__size,T=y.usage;return o.bindBuffer(o.UNIFORM_BUFFER,x),o.bufferData(o.UNIFORM_BUFFER,S,T),o.bindBuffer(o.UNIFORM_BUFFER,null),o.bindBufferBase(o.UNIFORM_BUFFER,v,x),x}function u(){for(let y=0;y<a;y++)if(r.indexOf(y)===-1)return r.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const v=i[y.id],x=y.uniforms,S=y.__cache;o.bindBuffer(o.UNIFORM_BUFFER,v);for(let T=0,w=x.length;T<w;T++){const E=Array.isArray(x[T])?x[T]:[x[T]];for(let M=0,b=E.length;M<b;M++){const I=E[M];if(f(I,T,M,S)===!0){const D=I.__offset,U=Array.isArray(I.value)?I.value:[I.value];let O=0;for(let V=0;V<U.length;V++){const F=U[V],$=m(F);typeof F=="number"||typeof F=="boolean"?(I.__data[0]=F,o.bufferSubData(o.UNIFORM_BUFFER,D+O,I.__data)):F.isMatrix3?(I.__data[0]=F.elements[0],I.__data[1]=F.elements[1],I.__data[2]=F.elements[2],I.__data[3]=0,I.__data[4]=F.elements[3],I.__data[5]=F.elements[4],I.__data[6]=F.elements[5],I.__data[7]=0,I.__data[8]=F.elements[6],I.__data[9]=F.elements[7],I.__data[10]=F.elements[8],I.__data[11]=0):(F.toArray(I.__data,O),O+=$.storage/Float32Array.BYTES_PER_ELEMENT)}o.bufferSubData(o.UNIFORM_BUFFER,D,I.__data)}}}o.bindBuffer(o.UNIFORM_BUFFER,null)}function f(y,v,x,S){const T=y.value,w=v+"_"+x;if(S[w]===void 0)return typeof T=="number"||typeof T=="boolean"?S[w]=T:S[w]=T.clone(),!0;{const E=S[w];if(typeof T=="number"||typeof T=="boolean"){if(E!==T)return S[w]=T,!0}else if(E.equals(T)===!1)return E.copy(T),!0}return!1}function p(y){const v=y.uniforms;let x=0;const S=16;for(let w=0,E=v.length;w<E;w++){const M=Array.isArray(v[w])?v[w]:[v[w]];for(let b=0,I=M.length;b<I;b++){const D=M[b],U=Array.isArray(D.value)?D.value:[D.value];for(let O=0,V=U.length;O<V;O++){const F=U[O],$=m(F),H=x%S,te=H%$.boundary,ne=H+te;x+=te,ne!==0&&S-ne<$.storage&&(x+=S-ne),D.__data=new Float32Array($.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=x,x+=$.storage}}}const T=x%S;return T>0&&(x+=S-T),y.__size=x,y.__cache={},this}function m(y){const v={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(v.boundary=4,v.storage=4):y.isVector2?(v.boundary=8,v.storage=8):y.isVector3||y.isColor?(v.boundary=16,v.storage=12):y.isVector4?(v.boundary=16,v.storage=16):y.isMatrix3?(v.boundary=48,v.storage=48):y.isMatrix4?(v.boundary=64,v.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),v}function g(y){const v=y.target;v.removeEventListener("dispose",g);const x=r.indexOf(v.__bindingPointIndex);r.splice(x,1),o.deleteBuffer(i[v.id]),delete i[v.id],delete s[v.id]}function _(){for(const y in i)o.deleteBuffer(i[y]);r=[],i={},s={}}return{bind:l,update:c,dispose:_}}class mm{constructor(e={}){const{canvas:t=dy(),context:n=null,depth:i=!0,stencil:s=!1,alpha:r=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=r;const p=new Uint32Array(4),m=new Int32Array(4);let g=null,_=null;const y=[],v=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=fs,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let S=!1;this._outputColorSpace=At;let T=0,w=0,E=null,M=-1,b=null;const I=new st,D=new st;let U=null;const O=new le(0);let V=0,F=t.width,$=t.height,H=1,te=null,ne=null;const se=new st(0,0,F,$),Me=new st(0,0,F,$);let Fe=!1;const q=new Qr;let Y=!1,fe=!1;const he=new de,we=new de,Ie=new A,Re=new st,ct={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Ke=!1;function Be(){return E===null?H:1}let L=n;function pe(R,B){return t.getContext(R,B)}try{const R={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Cl}`),t.addEventListener("webglcontextlost",Q,!1),t.addEventListener("webglcontextrestored",ve,!1),t.addEventListener("webglcontextcreationerror",ye,!1),L===null){const B="webgl2";if(L=pe(B,R),L===null)throw pe(B)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let ie,ce,J,Pe,re,P,C,z,K,ee,Z,Ce,ge,Le,Ne,oe,Se,Oe,He,Ee,nt,je,xt,N;function xe(){ie=new RA(L),ie.init(),je=new mv(L,ie),ce=new SA(L,ie,e,je),J=new cR(L,ie),ce.reverseDepthBuffer&&d&&J.buffers.depth.setReversed(!0),Pe=new LA(L),re=new jC,P=new hR(L,ie,J,re,ce,je,Pe),C=new TA(x),z=new CA(x),K=new Bw(L),xt=new vA(L,K),ee=new PA(L,K,Pe,xt),Z=new UA(L,ee,K,Pe),He=new DA(L,ce,P),oe=new bA(re),Ce=new ZC(x,C,z,ie,ce,xt,oe),ge=new gR(x,re),Le=new JC,Ne=new sR(ie),Oe=new yA(x,C,z,J,Z,f,l),Se=new aR(x,Z,ce),N=new _R(L,Pe,ce,J),Ee=new MA(L,ie,Pe),nt=new IA(L,ie,Pe),Pe.programs=Ce.programs,x.capabilities=ce,x.extensions=ie,x.properties=re,x.renderLists=Le,x.shadowMap=Se,x.state=J,x.info=Pe}xe();const j=new pR(x,L);this.xr=j,this.getContext=function(){return L},this.getContextAttributes=function(){return L.getContextAttributes()},this.forceContextLoss=function(){const R=ie.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=ie.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(R){R!==void 0&&(H=R,this.setSize(F,$,!1))},this.getSize=function(R){return R.set(F,$)},this.setSize=function(R,B,W=!0){if(j.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=R,$=B,t.width=Math.floor(R*H),t.height=Math.floor(B*H),W===!0&&(t.style.width=R+"px",t.style.height=B+"px"),this.setViewport(0,0,R,B)},this.getDrawingBufferSize=function(R){return R.set(F*H,$*H).floor()},this.setDrawingBufferSize=function(R,B,W){F=R,$=B,H=W,t.width=Math.floor(R*W),t.height=Math.floor(B*W),this.setViewport(0,0,R,B)},this.getCurrentViewport=function(R){return R.copy(I)},this.getViewport=function(R){return R.copy(se)},this.setViewport=function(R,B,W,X){R.isVector4?se.set(R.x,R.y,R.z,R.w):se.set(R,B,W,X),J.viewport(I.copy(se).multiplyScalar(H).round())},this.getScissor=function(R){return R.copy(Me)},this.setScissor=function(R,B,W,X){R.isVector4?Me.set(R.x,R.y,R.z,R.w):Me.set(R,B,W,X),J.scissor(D.copy(Me).multiplyScalar(H).round())},this.getScissorTest=function(){return Fe},this.setScissorTest=function(R){J.setScissorTest(Fe=R)},this.setOpaqueSort=function(R){te=R},this.setTransparentSort=function(R){ne=R},this.getClearColor=function(R){return R.copy(Oe.getClearColor())},this.setClearColor=function(){Oe.setClearColor(...arguments)},this.getClearAlpha=function(){return Oe.getClearAlpha()},this.setClearAlpha=function(){Oe.setClearAlpha(...arguments)},this.clear=function(R=!0,B=!0,W=!0){let X=0;if(R){let k=!1;if(E!==null){const ae=E.texture.format;k=ae===gu||ae===mu||ae===Pl}if(k){const ae=E.texture.type,_e=ae===Jn||ae===_s||ae===Xo||ae===qo||ae===du||ae===fu,Te=Oe.getClearColor(),Ae=Oe.getClearAlpha(),Ge=Te.r,Ve=Te.g,De=Te.b;_e?(p[0]=Ge,p[1]=Ve,p[2]=De,p[3]=Ae,L.clearBufferuiv(L.COLOR,0,p)):(m[0]=Ge,m[1]=Ve,m[2]=De,m[3]=Ae,L.clearBufferiv(L.COLOR,0,m))}else X|=L.COLOR_BUFFER_BIT}B&&(X|=L.DEPTH_BUFFER_BIT),W&&(X|=L.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),L.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Q,!1),t.removeEventListener("webglcontextrestored",ve,!1),t.removeEventListener("webglcontextcreationerror",ye,!1),Oe.dispose(),Le.dispose(),Ne.dispose(),re.dispose(),C.dispose(),z.dispose(),Z.dispose(),xt.dispose(),N.dispose(),Ce.dispose(),j.dispose(),j.removeEventListener("sessionstart",Fm),j.removeEventListener("sessionend",Bm),nr.stop()};function Q(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function ve(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const R=Pe.autoReset,B=Se.enabled,W=Se.autoUpdate,X=Se.needsUpdate,k=Se.type;xe(),Pe.autoReset=R,Se.enabled=B,Se.autoUpdate=W,Se.needsUpdate=X,Se.type=k}function ye(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function $e(R){const B=R.target;B.removeEventListener("dispose",$e),Pt(B)}function Pt(R){sn(R),re.remove(R)}function sn(R){const B=re.get(R).programs;B!==void 0&&(B.forEach(function(W){Ce.releaseProgram(W)}),R.isShaderMaterial&&Ce.releaseShaderCache(R))}this.renderBufferDirect=function(R,B,W,X,k,ae){B===null&&(B=ct);const _e=k.isMesh&&k.matrixWorld.determinant()<0,Te=FM(R,B,W,X,k);J.setMaterial(X,_e);let Ae=W.index,Ge=1;if(X.wireframe===!0){if(Ae=ee.getWireframeAttribute(W),Ae===void 0)return;Ge=2}const Ve=W.drawRange,De=W.attributes.position;let rt=Ve.start*Ge,ht=(Ve.start+Ve.count)*Ge;ae!==null&&(rt=Math.max(rt,ae.start*Ge),ht=Math.min(ht,(ae.start+ae.count)*Ge)),Ae!==null?(rt=Math.max(rt,0),ht=Math.min(ht,Ae.count)):De!=null&&(rt=Math.max(rt,0),ht=Math.min(ht,De.count));const kt=ht-rt;if(kt<0||kt===1/0)return;xt.setup(k,X,Te,W,Ae);let It,ot=Ee;if(Ae!==null&&(It=K.get(Ae),ot=nt,ot.setIndex(It)),k.isMesh)X.wireframe===!0?(J.setLineWidth(X.wireframeLinewidth*Be()),ot.setMode(L.LINES)):ot.setMode(L.TRIANGLES);else if(k.isLine){let Ue=X.linewidth;Ue===void 0&&(Ue=1),J.setLineWidth(Ue*Be()),k.isLineSegments?ot.setMode(L.LINES):k.isLineLoop?ot.setMode(L.LINE_LOOP):ot.setMode(L.LINE_STRIP)}else k.isPoints?ot.setMode(L.POINTS):k.isSprite&&ot.setMode(L.TRIANGLES);if(k.isBatchedMesh)if(k._multiDrawInstances!==null)ih("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),ot.renderMultiDrawInstances(k._multiDrawStarts,k._multiDrawCounts,k._multiDrawCount,k._multiDrawInstances);else if(ie.get("WEBGL_multi_draw"))ot.renderMultiDraw(k._multiDrawStarts,k._multiDrawCounts,k._multiDrawCount);else{const Ue=k._multiDrawStarts,Qt=k._multiDrawCounts,ut=k._multiDrawCount,Si=Ae?K.get(Ae).bytesPerElement:1,so=re.get(X).currentProgram.getUniforms();for(let Vn=0;Vn<ut;Vn++)so.setValue(L,"_gl_DrawID",Vn),ot.render(Ue[Vn]/Si,Qt[Vn])}else if(k.isInstancedMesh)ot.renderInstances(rt,kt,k.count);else if(W.isInstancedBufferGeometry){const Ue=W._maxInstanceCount!==void 0?W._maxInstanceCount:1/0,Qt=Math.min(W.instanceCount,Ue);ot.renderInstances(rt,kt,Qt)}else ot.render(rt,kt)};function dt(R,B,W){R.transparent===!0&&R.side===Pi&&R.forceSinglePass===!1?(R.side=En,R.needsUpdate=!0,Xl(R,B,W),R.side=Hi,R.needsUpdate=!0,Xl(R,B,W),R.side=Pi):Xl(R,B,W)}this.compile=function(R,B,W=null){W===null&&(W=R),_=Ne.get(W),_.init(B),v.push(_),W.traverseVisible(function(k){k.isLight&&k.layers.test(B.layers)&&(_.pushLight(k),k.castShadow&&_.pushShadow(k))}),R!==W&&R.traverseVisible(function(k){k.isLight&&k.layers.test(B.layers)&&(_.pushLight(k),k.castShadow&&_.pushShadow(k))}),_.setupLights();const X=new Set;return R.traverse(function(k){if(!(k.isMesh||k.isPoints||k.isLine||k.isSprite))return;const ae=k.material;if(ae)if(Array.isArray(ae))for(let _e=0;_e<ae.length;_e++){const Te=ae[_e];dt(Te,W,k),X.add(Te)}else dt(ae,W,k),X.add(ae)}),_=v.pop(),X},this.compileAsync=function(R,B,W=null){const X=this.compile(R,B,W);return new Promise(k=>{function ae(){if(X.forEach(function(_e){re.get(_e).currentProgram.isReady()&&X.delete(_e)}),X.size===0){k(R);return}setTimeout(ae,10)}ie.get("KHR_parallel_shader_compile")!==null?ae():setTimeout(ae,10)})};let Mi=null;function Xi(R){Mi&&Mi(R)}function Fm(){nr.stop()}function Bm(){nr.start()}const nr=new hv;nr.setAnimationLoop(Xi),typeof self<"u"&&nr.setContext(self),this.setAnimationLoop=function(R){Mi=R,j.setAnimationLoop(R),R===null?nr.stop():nr.start()},j.addEventListener("sessionstart",Fm),j.addEventListener("sessionend",Bm),this.render=function(R,B){if(B!==void 0&&B.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;if(R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),B.parent===null&&B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),j.enabled===!0&&j.isPresenting===!0&&(j.cameraAutoUpdate===!0&&j.updateCamera(B),B=j.getCamera()),R.isScene===!0&&R.onBeforeRender(x,R,B,E),_=Ne.get(R,v.length),_.init(B),v.push(_),we.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse),q.setFromProjectionMatrix(we),fe=this.localClippingEnabled,Y=oe.init(this.clippingPlanes,fe),g=Le.get(R,y.length),g.init(),y.push(g),j.enabled===!0&&j.isPresenting===!0){const ae=x.xr.getDepthSensingMesh();ae!==null&&td(ae,B,-1/0,x.sortObjects)}td(R,B,0,x.sortObjects),g.finish(),x.sortObjects===!0&&g.sort(te,ne),Ke=j.enabled===!1||j.isPresenting===!1||j.hasDepthSensing()===!1,Ke&&Oe.addToRenderList(g,R),this.info.render.frame++,Y===!0&&oe.beginShadows();const W=_.state.shadowsArray;Se.render(W,R,B),Y===!0&&oe.endShadows(),this.info.autoReset===!0&&this.info.reset();const X=g.opaque,k=g.transmissive;if(_.setupLights(),B.isArrayCamera){const ae=B.cameras;if(k.length>0)for(let _e=0,Te=ae.length;_e<Te;_e++){const Ae=ae[_e];zm(X,k,R,Ae)}Ke&&Oe.render(R);for(let _e=0,Te=ae.length;_e<Te;_e++){const Ae=ae[_e];km(g,R,Ae,Ae.viewport)}}else k.length>0&&zm(X,k,R,B),Ke&&Oe.render(R),km(g,R,B);E!==null&&w===0&&(P.updateMultisampleRenderTarget(E),P.updateRenderTargetMipmap(E)),R.isScene===!0&&R.onAfterRender(x,R,B),xt.resetDefaultState(),M=-1,b=null,v.pop(),v.length>0?(_=v[v.length-1],Y===!0&&oe.setGlobalState(x.clippingPlanes,_.state.camera)):_=null,y.pop(),y.length>0?g=y[y.length-1]:g=null};function td(R,B,W,X){if(R.visible===!1)return;if(R.layers.test(B.layers)){if(R.isGroup)W=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(B);else if(R.isLight)_.pushLight(R),R.castShadow&&_.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||q.intersectsSprite(R)){X&&Re.setFromMatrixPosition(R.matrixWorld).applyMatrix4(we);const _e=Z.update(R),Te=R.material;Te.visible&&g.push(R,_e,Te,W,Re.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||q.intersectsObject(R))){const _e=Z.update(R),Te=R.material;if(X&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),Re.copy(R.boundingSphere.center)):(_e.boundingSphere===null&&_e.computeBoundingSphere(),Re.copy(_e.boundingSphere.center)),Re.applyMatrix4(R.matrixWorld).applyMatrix4(we)),Array.isArray(Te)){const Ae=_e.groups;for(let Ge=0,Ve=Ae.length;Ge<Ve;Ge++){const De=Ae[Ge],rt=Te[De.materialIndex];rt&&rt.visible&&g.push(R,_e,rt,W,Re.z,De)}}else Te.visible&&g.push(R,_e,Te,W,Re.z,null)}}const ae=R.children;for(let _e=0,Te=ae.length;_e<Te;_e++)td(ae[_e],B,W,X)}function km(R,B,W,X){const k=R.opaque,ae=R.transmissive,_e=R.transparent;_.setupLightsView(W),Y===!0&&oe.setGlobalState(x.clippingPlanes,W),X&&J.viewport(I.copy(X)),k.length>0&&Wl(k,B,W),ae.length>0&&Wl(ae,B,W),_e.length>0&&Wl(_e,B,W),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1)}function zm(R,B,W,X){if((W.isScene===!0?W.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[X.id]===void 0&&(_.state.transmissionRenderTarget[X.id]=new xi(1,1,{generateMipmaps:!0,type:ie.has("EXT_color_buffer_half_float")||ie.has("EXT_color_buffer_float")?la:Jn,minFilter:fi,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Je.workingColorSpace}));const ae=_.state.transmissionRenderTarget[X.id],_e=X.viewport||I;ae.setSize(_e.z*x.transmissionResolutionScale,_e.w*x.transmissionResolutionScale);const Te=x.getRenderTarget();x.setRenderTarget(ae),x.getClearColor(O),V=x.getClearAlpha(),V<1&&x.setClearColor(16777215,.5),x.clear(),Ke&&Oe.render(W);const Ae=x.toneMapping;x.toneMapping=fs;const Ge=X.viewport;if(X.viewport!==void 0&&(X.viewport=void 0),_.setupLightsView(X),Y===!0&&oe.setGlobalState(x.clippingPlanes,X),Wl(R,W,X),P.updateMultisampleRenderTarget(ae),P.updateRenderTargetMipmap(ae),ie.has("WEBGL_multisampled_render_to_texture")===!1){let Ve=!1;for(let De=0,rt=B.length;De<rt;De++){const ht=B[De],kt=ht.object,It=ht.geometry,ot=ht.material,Ue=ht.group;if(ot.side===Pi&&kt.layers.test(X.layers)){const Qt=ot.side;ot.side=En,ot.needsUpdate=!0,Vm(kt,W,X,It,ot,Ue),ot.side=Qt,ot.needsUpdate=!0,Ve=!0}}Ve===!0&&(P.updateMultisampleRenderTarget(ae),P.updateRenderTargetMipmap(ae))}x.setRenderTarget(Te),x.setClearColor(O,V),Ge!==void 0&&(X.viewport=Ge),x.toneMapping=Ae}function Wl(R,B,W){const X=B.isScene===!0?B.overrideMaterial:null;for(let k=0,ae=R.length;k<ae;k++){const _e=R[k],Te=_e.object,Ae=_e.geometry,Ge=_e.group;let Ve=_e.material;Ve.allowOverride===!0&&X!==null&&(Ve=X),Te.layers.test(W.layers)&&Vm(Te,B,W,Ae,Ve,Ge)}}function Vm(R,B,W,X,k,ae){R.onBeforeRender(x,B,W,X,k,ae),R.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),k.onBeforeRender(x,B,W,X,R,ae),k.transparent===!0&&k.side===Pi&&k.forceSinglePass===!1?(k.side=En,k.needsUpdate=!0,x.renderBufferDirect(W,B,X,k,R,ae),k.side=Hi,k.needsUpdate=!0,x.renderBufferDirect(W,B,X,k,R,ae),k.side=Pi):x.renderBufferDirect(W,B,X,k,R,ae),R.onAfterRender(x,B,W,X,k,ae)}function Xl(R,B,W){B.isScene!==!0&&(B=ct);const X=re.get(R),k=_.state.lights,ae=_.state.shadowsArray,_e=k.state.version,Te=Ce.getParameters(R,k.state,ae,B,W),Ae=Ce.getProgramCacheKey(Te);let Ge=X.programs;X.environment=R.isMeshStandardMaterial?B.environment:null,X.fog=B.fog,X.envMap=(R.isMeshStandardMaterial?z:C).get(R.envMap||X.environment),X.envMapRotation=X.environment!==null&&R.envMap===null?B.environmentRotation:R.envMapRotation,Ge===void 0&&(R.addEventListener("dispose",$e),Ge=new Map,X.programs=Ge);let Ve=Ge.get(Ae);if(Ve!==void 0){if(X.currentProgram===Ve&&X.lightsStateVersion===_e)return Gm(R,Te),Ve}else Te.uniforms=Ce.getUniforms(R),R.onBeforeCompile(Te,x),Ve=Ce.acquireProgram(Te,Ae),Ge.set(Ae,Ve),X.uniforms=Te.uniforms;const De=X.uniforms;return(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(De.clippingPlanes=oe.uniform),Gm(R,Te),X.needsLights=kM(R),X.lightsStateVersion=_e,X.needsLights&&(De.ambientLightColor.value=k.state.ambient,De.lightProbe.value=k.state.probe,De.directionalLights.value=k.state.directional,De.directionalLightShadows.value=k.state.directionalShadow,De.spotLights.value=k.state.spot,De.spotLightShadows.value=k.state.spotShadow,De.rectAreaLights.value=k.state.rectArea,De.ltc_1.value=k.state.rectAreaLTC1,De.ltc_2.value=k.state.rectAreaLTC2,De.pointLights.value=k.state.point,De.pointLightShadows.value=k.state.pointShadow,De.hemisphereLights.value=k.state.hemi,De.directionalShadowMap.value=k.state.directionalShadowMap,De.directionalShadowMatrix.value=k.state.directionalShadowMatrix,De.spotShadowMap.value=k.state.spotShadowMap,De.spotLightMatrix.value=k.state.spotLightMatrix,De.spotLightMap.value=k.state.spotLightMap,De.pointShadowMap.value=k.state.pointShadowMap,De.pointShadowMatrix.value=k.state.pointShadowMatrix),X.currentProgram=Ve,X.uniformsList=null,Ve}function Hm(R){if(R.uniformsList===null){const B=R.currentProgram.getUniforms();R.uniformsList=rh.seqWithValue(B.seq,R.uniforms)}return R.uniformsList}function Gm(R,B){const W=re.get(R);W.outputColorSpace=B.outputColorSpace,W.batching=B.batching,W.batchingColor=B.batchingColor,W.instancing=B.instancing,W.instancingColor=B.instancingColor,W.instancingMorph=B.instancingMorph,W.skinning=B.skinning,W.morphTargets=B.morphTargets,W.morphNormals=B.morphNormals,W.morphColors=B.morphColors,W.morphTargetsCount=B.morphTargetsCount,W.numClippingPlanes=B.numClippingPlanes,W.numIntersection=B.numClipIntersection,W.vertexAlphas=B.vertexAlphas,W.vertexTangents=B.vertexTangents,W.toneMapping=B.toneMapping}function FM(R,B,W,X,k){B.isScene!==!0&&(B=ct),P.resetTextureUnits();const ae=B.fog,_e=X.isMeshStandardMaterial?B.environment:null,Te=E===null?x.outputColorSpace:E.isXRRenderTarget===!0?E.texture.colorSpace:nn,Ae=(X.isMeshStandardMaterial?z:C).get(X.envMap||_e),Ge=X.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,Ve=!!W.attributes.tangent&&(!!X.normalMap||X.anisotropy>0),De=!!W.morphAttributes.position,rt=!!W.morphAttributes.normal,ht=!!W.morphAttributes.color;let kt=fs;X.toneMapped&&(E===null||E.isXRRenderTarget===!0)&&(kt=x.toneMapping);const It=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,ot=It!==void 0?It.length:0,Ue=re.get(X),Qt=_.state.lights;if(Y===!0&&(fe===!0||R!==b)){const gn=R===b&&X.id===M;oe.setState(X,R,gn)}let ut=!1;X.version===Ue.__version?(Ue.needsLights&&Ue.lightsStateVersion!==Qt.state.version||Ue.outputColorSpace!==Te||k.isBatchedMesh&&Ue.batching===!1||!k.isBatchedMesh&&Ue.batching===!0||k.isBatchedMesh&&Ue.batchingColor===!0&&k.colorTexture===null||k.isBatchedMesh&&Ue.batchingColor===!1&&k.colorTexture!==null||k.isInstancedMesh&&Ue.instancing===!1||!k.isInstancedMesh&&Ue.instancing===!0||k.isSkinnedMesh&&Ue.skinning===!1||!k.isSkinnedMesh&&Ue.skinning===!0||k.isInstancedMesh&&Ue.instancingColor===!0&&k.instanceColor===null||k.isInstancedMesh&&Ue.instancingColor===!1&&k.instanceColor!==null||k.isInstancedMesh&&Ue.instancingMorph===!0&&k.morphTexture===null||k.isInstancedMesh&&Ue.instancingMorph===!1&&k.morphTexture!==null||Ue.envMap!==Ae||X.fog===!0&&Ue.fog!==ae||Ue.numClippingPlanes!==void 0&&(Ue.numClippingPlanes!==oe.numPlanes||Ue.numIntersection!==oe.numIntersection)||Ue.vertexAlphas!==Ge||Ue.vertexTangents!==Ve||Ue.morphTargets!==De||Ue.morphNormals!==rt||Ue.morphColors!==ht||Ue.toneMapping!==kt||Ue.morphTargetsCount!==ot)&&(ut=!0):(ut=!0,Ue.__version=X.version);let Si=Ue.currentProgram;ut===!0&&(Si=Xl(X,B,k));let so=!1,Vn=!1,da=!1;const St=Si.getUniforms(),ii=Ue.uniforms;if(J.useProgram(Si.program)&&(so=!0,Vn=!0,da=!0),X.id!==M&&(M=X.id,Vn=!0),so||b!==R){J.buffers.depth.getReversed()?(he.copy(R.projectionMatrix),lb(he),cb(he),St.setValue(L,"projectionMatrix",he)):St.setValue(L,"projectionMatrix",R.projectionMatrix),St.setValue(L,"viewMatrix",R.matrixWorldInverse);const Cn=St.map.cameraPosition;Cn!==void 0&&Cn.setValue(L,Ie.setFromMatrixPosition(R.matrixWorld)),ce.logarithmicDepthBuffer&&St.setValue(L,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&St.setValue(L,"isOrthographic",R.isOrthographicCamera===!0),b!==R&&(b=R,Vn=!0,da=!0)}if(k.isSkinnedMesh){St.setOptional(L,k,"bindMatrix"),St.setOptional(L,k,"bindMatrixInverse");const gn=k.skeleton;gn&&(gn.boneTexture===null&&gn.computeBoneTexture(),St.setValue(L,"boneTexture",gn.boneTexture,P))}k.isBatchedMesh&&(St.setOptional(L,k,"batchingTexture"),St.setValue(L,"batchingTexture",k._matricesTexture,P),St.setOptional(L,k,"batchingIdTexture"),St.setValue(L,"batchingIdTexture",k._indirectTexture,P),St.setOptional(L,k,"batchingColorTexture"),k._colorsTexture!==null&&St.setValue(L,"batchingColorTexture",k._colorsTexture,P));const si=W.morphAttributes;if((si.position!==void 0||si.normal!==void 0||si.color!==void 0)&&He.update(k,W,Si),(Vn||Ue.receiveShadow!==k.receiveShadow)&&(Ue.receiveShadow=k.receiveShadow,St.setValue(L,"receiveShadow",k.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(ii.envMap.value=Ae,ii.flipEnvMap.value=Ae.isCubeTexture&&Ae.isRenderTargetTexture===!1?-1:1),X.isMeshStandardMaterial&&X.envMap===null&&B.environment!==null&&(ii.envMapIntensity.value=B.environmentIntensity),Vn&&(St.setValue(L,"toneMappingExposure",x.toneMappingExposure),Ue.needsLights&&BM(ii,da),ae&&X.fog===!0&&ge.refreshFogUniforms(ii,ae),ge.refreshMaterialUniforms(ii,X,H,$,_.state.transmissionRenderTarget[R.id]),rh.upload(L,Hm(Ue),ii,P)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(rh.upload(L,Hm(Ue),ii,P),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&St.setValue(L,"center",k.center),St.setValue(L,"modelViewMatrix",k.modelViewMatrix),St.setValue(L,"normalMatrix",k.normalMatrix),St.setValue(L,"modelMatrix",k.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const gn=X.uniformsGroups;for(let Cn=0,nd=gn.length;Cn<nd;Cn++){const ir=gn[Cn];N.update(ir,Si),N.bind(ir,Si)}}return Si}function BM(R,B){R.ambientLightColor.needsUpdate=B,R.lightProbe.needsUpdate=B,R.directionalLights.needsUpdate=B,R.directionalLightShadows.needsUpdate=B,R.pointLights.needsUpdate=B,R.pointLightShadows.needsUpdate=B,R.spotLights.needsUpdate=B,R.spotLightShadows.needsUpdate=B,R.rectAreaLights.needsUpdate=B,R.hemisphereLights.needsUpdate=B}function kM(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return E},this.setRenderTargetTextures=function(R,B,W){const X=re.get(R);X.__autoAllocateDepthBuffer=R.resolveDepthBuffer===!1,X.__autoAllocateDepthBuffer===!1&&(X.__useRenderToTexture=!1),re.get(R.texture).__webglTexture=B,re.get(R.depthTexture).__webglTexture=X.__autoAllocateDepthBuffer?void 0:W,X.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(R,B){const W=re.get(R);W.__webglFramebuffer=B,W.__useDefaultFramebuffer=B===void 0};const zM=L.createFramebuffer();this.setRenderTarget=function(R,B=0,W=0){E=R,T=B,w=W;let X=!0,k=null,ae=!1,_e=!1;if(R){const Ae=re.get(R);if(Ae.__useDefaultFramebuffer!==void 0)J.bindFramebuffer(L.FRAMEBUFFER,null),X=!1;else if(Ae.__webglFramebuffer===void 0)P.setupRenderTarget(R);else if(Ae.__hasExternalTextures)P.rebindTextures(R,re.get(R.texture).__webglTexture,re.get(R.depthTexture).__webglTexture);else if(R.depthBuffer){const De=R.depthTexture;if(Ae.__boundDepthTexture!==De){if(De!==null&&re.has(De)&&(R.width!==De.image.width||R.height!==De.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(R)}}const Ge=R.texture;(Ge.isData3DTexture||Ge.isDataArrayTexture||Ge.isCompressedArrayTexture)&&(_e=!0);const Ve=re.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(Ve[B])?k=Ve[B][W]:k=Ve[B],ae=!0):R.samples>0&&P.useMultisampledRTT(R)===!1?k=re.get(R).__webglMultisampledFramebuffer:Array.isArray(Ve)?k=Ve[W]:k=Ve,I.copy(R.viewport),D.copy(R.scissor),U=R.scissorTest}else I.copy(se).multiplyScalar(H).floor(),D.copy(Me).multiplyScalar(H).floor(),U=Fe;if(W!==0&&(k=zM),J.bindFramebuffer(L.FRAMEBUFFER,k)&&X&&J.drawBuffers(R,k),J.viewport(I),J.scissor(D),J.setScissorTest(U),ae){const Ae=re.get(R.texture);L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ae.__webglTexture,W)}else if(_e){const Ae=re.get(R.texture),Ge=B;L.framebufferTextureLayer(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,Ae.__webglTexture,W,Ge)}else if(R!==null&&W!==0){const Ae=re.get(R.texture);L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,Ae.__webglTexture,W)}M=-1},this.readRenderTargetPixels=function(R,B,W,X,k,ae,_e){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Te=re.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&_e!==void 0&&(Te=Te[_e]),Te){J.bindFramebuffer(L.FRAMEBUFFER,Te);try{const Ae=R.texture,Ge=Ae.format,Ve=Ae.type;if(!ce.textureFormatReadable(Ge)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ce.textureTypeReadable(Ve)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}B>=0&&B<=R.width-X&&W>=0&&W<=R.height-k&&L.readPixels(B,W,X,k,je.convert(Ge),je.convert(Ve),ae)}finally{const Ae=E!==null?re.get(E).__webglFramebuffer:null;J.bindFramebuffer(L.FRAMEBUFFER,Ae)}}},this.readRenderTargetPixelsAsync=async function(R,B,W,X,k,ae,_e){if(!(R&&R.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Te=re.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&_e!==void 0&&(Te=Te[_e]),Te)if(B>=0&&B<=R.width-X&&W>=0&&W<=R.height-k){J.bindFramebuffer(L.FRAMEBUFFER,Te);const Ae=R.texture,Ge=Ae.format,Ve=Ae.type;if(!ce.textureFormatReadable(Ge))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ce.textureTypeReadable(Ve))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const De=L.createBuffer();L.bindBuffer(L.PIXEL_PACK_BUFFER,De),L.bufferData(L.PIXEL_PACK_BUFFER,ae.byteLength,L.STREAM_READ),L.readPixels(B,W,X,k,je.convert(Ge),je.convert(Ve),0);const rt=E!==null?re.get(E).__webglFramebuffer:null;J.bindFramebuffer(L.FRAMEBUFFER,rt);const ht=L.fenceSync(L.SYNC_GPU_COMMANDS_COMPLETE,0);return L.flush(),await ab(L,ht,4),L.bindBuffer(L.PIXEL_PACK_BUFFER,De),L.getBufferSubData(L.PIXEL_PACK_BUFFER,0,ae),L.deleteBuffer(De),L.deleteSync(ht),ae}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(R,B=null,W=0){const X=Math.pow(2,-W),k=Math.floor(R.image.width*X),ae=Math.floor(R.image.height*X),_e=B!==null?B.x:0,Te=B!==null?B.y:0;P.setTexture2D(R,0),L.copyTexSubImage2D(L.TEXTURE_2D,W,0,0,_e,Te,k,ae),J.unbindTexture()};const VM=L.createFramebuffer(),HM=L.createFramebuffer();this.copyTextureToTexture=function(R,B,W=null,X=null,k=0,ae=null){ae===null&&(k!==0?(ih("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ae=k,k=0):ae=0);let _e,Te,Ae,Ge,Ve,De,rt,ht,kt;const It=R.isCompressedTexture?R.mipmaps[ae]:R.image;if(W!==null)_e=W.max.x-W.min.x,Te=W.max.y-W.min.y,Ae=W.isBox3?W.max.z-W.min.z:1,Ge=W.min.x,Ve=W.min.y,De=W.isBox3?W.min.z:0;else{const si=Math.pow(2,-k);_e=Math.floor(It.width*si),Te=Math.floor(It.height*si),R.isDataArrayTexture?Ae=It.depth:R.isData3DTexture?Ae=Math.floor(It.depth*si):Ae=1,Ge=0,Ve=0,De=0}X!==null?(rt=X.x,ht=X.y,kt=X.z):(rt=0,ht=0,kt=0);const ot=je.convert(B.format),Ue=je.convert(B.type);let Qt;B.isData3DTexture?(P.setTexture3D(B,0),Qt=L.TEXTURE_3D):B.isDataArrayTexture||B.isCompressedArrayTexture?(P.setTexture2DArray(B,0),Qt=L.TEXTURE_2D_ARRAY):(P.setTexture2D(B,0),Qt=L.TEXTURE_2D),L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL,B.flipY),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,B.premultiplyAlpha),L.pixelStorei(L.UNPACK_ALIGNMENT,B.unpackAlignment);const ut=L.getParameter(L.UNPACK_ROW_LENGTH),Si=L.getParameter(L.UNPACK_IMAGE_HEIGHT),so=L.getParameter(L.UNPACK_SKIP_PIXELS),Vn=L.getParameter(L.UNPACK_SKIP_ROWS),da=L.getParameter(L.UNPACK_SKIP_IMAGES);L.pixelStorei(L.UNPACK_ROW_LENGTH,It.width),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,It.height),L.pixelStorei(L.UNPACK_SKIP_PIXELS,Ge),L.pixelStorei(L.UNPACK_SKIP_ROWS,Ve),L.pixelStorei(L.UNPACK_SKIP_IMAGES,De);const St=R.isDataArrayTexture||R.isData3DTexture,ii=B.isDataArrayTexture||B.isData3DTexture;if(R.isDepthTexture){const si=re.get(R),gn=re.get(B),Cn=re.get(si.__renderTarget),nd=re.get(gn.__renderTarget);J.bindFramebuffer(L.READ_FRAMEBUFFER,Cn.__webglFramebuffer),J.bindFramebuffer(L.DRAW_FRAMEBUFFER,nd.__webglFramebuffer);for(let ir=0;ir<Ae;ir++)St&&(L.framebufferTextureLayer(L.READ_FRAMEBUFFER,L.COLOR_ATTACHMENT0,re.get(R).__webglTexture,k,De+ir),L.framebufferTextureLayer(L.DRAW_FRAMEBUFFER,L.COLOR_ATTACHMENT0,re.get(B).__webglTexture,ae,kt+ir)),L.blitFramebuffer(Ge,Ve,_e,Te,rt,ht,_e,Te,L.DEPTH_BUFFER_BIT,L.NEAREST);J.bindFramebuffer(L.READ_FRAMEBUFFER,null),J.bindFramebuffer(L.DRAW_FRAMEBUFFER,null)}else if(k!==0||R.isRenderTargetTexture||re.has(R)){const si=re.get(R),gn=re.get(B);J.bindFramebuffer(L.READ_FRAMEBUFFER,VM),J.bindFramebuffer(L.DRAW_FRAMEBUFFER,HM);for(let Cn=0;Cn<Ae;Cn++)St?L.framebufferTextureLayer(L.READ_FRAMEBUFFER,L.COLOR_ATTACHMENT0,si.__webglTexture,k,De+Cn):L.framebufferTexture2D(L.READ_FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,si.__webglTexture,k),ii?L.framebufferTextureLayer(L.DRAW_FRAMEBUFFER,L.COLOR_ATTACHMENT0,gn.__webglTexture,ae,kt+Cn):L.framebufferTexture2D(L.DRAW_FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_2D,gn.__webglTexture,ae),k!==0?L.blitFramebuffer(Ge,Ve,_e,Te,rt,ht,_e,Te,L.COLOR_BUFFER_BIT,L.NEAREST):ii?L.copyTexSubImage3D(Qt,ae,rt,ht,kt+Cn,Ge,Ve,_e,Te):L.copyTexSubImage2D(Qt,ae,rt,ht,Ge,Ve,_e,Te);J.bindFramebuffer(L.READ_FRAMEBUFFER,null),J.bindFramebuffer(L.DRAW_FRAMEBUFFER,null)}else ii?R.isDataTexture||R.isData3DTexture?L.texSubImage3D(Qt,ae,rt,ht,kt,_e,Te,Ae,ot,Ue,It.data):B.isCompressedArrayTexture?L.compressedTexSubImage3D(Qt,ae,rt,ht,kt,_e,Te,Ae,ot,It.data):L.texSubImage3D(Qt,ae,rt,ht,kt,_e,Te,Ae,ot,Ue,It):R.isDataTexture?L.texSubImage2D(L.TEXTURE_2D,ae,rt,ht,_e,Te,ot,Ue,It.data):R.isCompressedTexture?L.compressedTexSubImage2D(L.TEXTURE_2D,ae,rt,ht,It.width,It.height,ot,It.data):L.texSubImage2D(L.TEXTURE_2D,ae,rt,ht,_e,Te,ot,Ue,It);L.pixelStorei(L.UNPACK_ROW_LENGTH,ut),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,Si),L.pixelStorei(L.UNPACK_SKIP_PIXELS,so),L.pixelStorei(L.UNPACK_SKIP_ROWS,Vn),L.pixelStorei(L.UNPACK_SKIP_IMAGES,da),ae===0&&B.generateMipmaps&&L.generateMipmap(Qt),J.unbindTexture()},this.copyTextureToTexture3D=function(R,B,W=null,X=null,k=0){return ih('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(R,B,W,X,k)},this.initRenderTarget=function(R){re.get(R).__webglFramebuffer===void 0&&P.setupRenderTarget(R)},this.initTexture=function(R){R.isCubeTexture?P.setTextureCube(R,0):R.isData3DTexture?P.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?P.setTexture2DArray(R,0):P.setTexture2D(R,0),J.unbindTexture()},this.resetState=function(){T=0,w=0,E=null,J.reset(),xt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return pi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Je._getDrawingBufferColorSpace(e),t.unpackColorSpace=Je._getUnpackColorSpace()}}const xR=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Xx,AddEquation:Fs,AddOperation:Vx,AdditiveAnimationBlendMode:Bp,AdditiveBlending:Vf,AgXToneMapping:Yx,AlphaFormat:Op,AlwaysCompare:hy,AlwaysDepth:dh,AlwaysStencilFunc:Xf,AmbientLight:Zy,AnimationAction:rv,AnimationClip:ea,AnimationLoader:OT,AnimationMixer:lw,AnimationObjectGroup:ow,AnimationUtils:IT,ArcCurve:Ty,ArrayCamera:nv,ArrowHelper:Rw,AttachedBindMode:Wf,Audio:iv,AudioAnalyser:jT,AudioContext:hm,AudioListener:YT,AudioLoader:WT,AxesHelper:Pw,BackSide:En,BasicDepthPacking:ty,BasicShadowMap:uS,BatchedMesh:Yp,Bone:Tu,BooleanKeyframeTrack:eo,Box2:lv,Box3:Wt,Box3Helper:Aw,BoxGeometry:Jr,BoxHelper:Ew,BufferAttribute:ke,BufferGeometry:ze,BufferGeometryLoader:ev,ByteType:Lp,Cache:us,Camera:Mu,CameraHelper:ww,CanvasTexture:Qb,CapsuleGeometry:Pu,CatmullRomCurve3:wy,CineonToneMapping:Wx,CircleGeometry:Iu,ClampToEdgeWrapping:Yn,Clock:Xu,Color:le,ColorKeyframeTrack:rm,ColorManagement:Je,CompressedArrayTexture:Kb,CompressedCubeTexture:Jb,CompressedTexture:Cu,CompressedTextureLoader:NT,ConeGeometry:Bl,ConstantAlphaFactor:Bx,ConstantColorFactor:Nx,Controls:Lw,CubeCamera:_y,CubeReflectionMapping:gs,CubeRefractionMapping:Ys,CubeTexture:Dl,CubeTextureLoader:FT,CubeUVReflectionMapping:aa,CubicBezierCurve:jp,CubicBezierCurve3:Ey,CubicInterpolant:Wy,CullFaceBack:zf,CullFaceFront:bx,CullFaceFrontBack:hS,CullFaceNone:Sx,Curve:Di,CurvePath:Cy,CustomBlending:Rp,CustomToneMapping:qx,CylinderGeometry:Fl,Cylindrical:mw,Data3DTexture:yu,DataArrayTexture:Ll,DataTexture:jn,DataTextureLoader:BT,DataUtils:bb,DecrementStencilOp:MS,DecrementWrapStencilOp:bS,DefaultLoadingManager:no,DepthArrayTexture:eT,DepthFormat:Yo,DepthStencilFormat:$o,DepthTexture:Ru,DetachedBindMode:Zx,DirectionalLight:cm,DirectionalLightHelper:Tw,DiscreteInterpolant:Xy,DodecahedronGeometry:Lu,DoubleSide:Pi,DstAlphaFactor:Ix,DstColorFactor:Dx,DynamicCopyUsage:BS,DynamicDrawUsage:LS,DynamicReadUsage:OS,EdgesGeometry:by,EllipseCurve:Du,EqualCompare:oy,EqualDepth:ph,EqualStencilFunc:AS,EquirectangularReflectionMapping:al,EquirectangularRefractionMapping:ll,Euler:An,EventDispatcher:en,ExtrudeGeometry:Uu,FileLoader:kn,Float16BufferAttribute:Pb,Float32BufferAttribute:be,FloatType:Dn,Fog:bu,FogExp2:Su,FramebufferTexture:jb,FrontSide:Hi,Frustum:Qr,FrustumArray:Eu,GLBufferAttribute:pw,GLSL1:zS,GLSL3:qf,GreaterCompare:ay,GreaterDepth:gh,GreaterEqualCompare:cy,GreaterEqualDepth:mh,GreaterEqualStencilFunc:IS,GreaterStencilFunc:RS,GridHelper:Sw,Group:mi,HalfFloatType:la,HemisphereLight:$y,HemisphereLightHelper:Mw,IcosahedronGeometry:Ou,ImageBitmapLoader:tv,ImageLoader:_l,ImageUtils:fy,IncrementStencilOp:vS,IncrementWrapStencilOp:SS,InstancedBufferAttribute:qr,InstancedBufferGeometry:Qy,InstancedInterleavedBuffer:fw,InstancedMesh:wu,Int16BufferAttribute:Cb,Int32BufferAttribute:Rb,Int8BufferAttribute:wb,IntType:uu,InterleavedBuffer:Ul,InterleavedBufferAttribute:Zs,Interpolant:ha,InterpolateDiscrete:Zo,InterpolateLinear:jo,InterpolateSmooth:nh,InterpolationSamplingMode:GS,InterpolationSamplingType:HS,InvertStencilOp:TS,KeepStencilOp:wr,KeyframeTrack:vi,LOD:My,LatheGeometry:Nu,Layers:vu,LessCompare:ry,LessDepth:fh,LessEqualCompare:zp,LessEqualDepth:Xr,LessEqualStencilFunc:CS,LessStencilFunc:ES,Light:er,LightProbe:Jy,Line:xs,Line3:gw,LineBasicMaterial:pn,LineCurve:Kp,LineCurve3:Ay,LineDashedMaterial:Vy,LineLoop:$p,LineSegments:Li,LinearFilter:Tt,LinearInterpolant:sm,LinearMipMapLinearFilter:jx,LinearMipMapNearestFilter:pS,LinearMipmapLinearFilter:fi,LinearMipmapNearestFilter:Fo,LinearSRGBColorSpace:nn,LinearToneMapping:Hx,LinearTransfer:hl,Loader:mn,LoaderUtils:Ws,LoadingManager:Gu,LoopOnce:Kx,LoopPingPong:Qx,LoopRepeat:Jx,MOUSE:lS,Material:Xt,MaterialLoader:Wu,MathUtils:ue,Matrix2:qu,Matrix3:We,Matrix4:de,MaxEquation:Cx,Mesh:_t,MeshBasicMaterial:un,MeshDepthMaterial:tm,MeshDistanceMaterial:nm,MeshLambertMaterial:ky,MeshMatcapMaterial:zy,MeshNormalMaterial:By,MeshPhongMaterial:Ny,MeshPhysicalMaterial:yi,MeshStandardMaterial:ca,MeshToonMaterial:Fy,MinEquation:Ax,MirroredRepeatWrapping:Wo,MixOperation:zx,MultiplyBlending:Gf,MultiplyOperation:Rl,NearestFilter:Gt,NearestMipMapLinearFilter:fS,NearestMipMapNearestFilter:dS,NearestMipmapLinearFilter:Pr,NearestMipmapNearestFilter:hu,NeutralToneMapping:$x,NeverCompare:sy,NeverDepth:uh,NeverStencilFunc:wS,NoBlending:ds,NoColorSpace:ls,NoToneMapping:fs,NormalAnimationBlendMode:_u,NormalBlending:Fr,NotEqualCompare:ly,NotEqualDepth:_h,NotEqualStencilFunc:PS,NumberKeyframeTrack:$r,Object3D:tt,ObjectLoader:HT,ObjectSpaceNormalMap:iy,OctahedronGeometry:kl,OneFactor:Ip,OneMinusConstantAlphaFactor:kx,OneMinusConstantColorFactor:Fx,OneMinusDstAlphaFactor:Lx,OneMinusDstColorFactor:Ux,OneMinusSrcAlphaFactor:hh,OneMinusSrcColorFactor:Px,OrthographicCamera:Ss,PCFShadowMap:Cp,PCFSoftShadowMap:Tx,PMREMGenerator:ep,Path:$h,PerspectiveCamera:Bt,Plane:Ci,PlaneGeometry:Ms,PlaneHelper:Cw,PointLight:lm,PointLightHelper:yw,Points:Au,PointsMaterial:Nl,PolarGridHelper:bw,PolyhedronGeometry:Qs,PositionalAudio:ZT,PropertyBinding:it,PropertyMixer:sv,QuadraticBezierCurve:Jp,QuadraticBezierCurve3:Qp,Quaternion:vt,QuaternionKeyframeTrack:Zr,QuaternionLinearInterpolant:qy,RED_GREEN_RGTC2_Format:Hh,RED_RGTC1_Format:Fp,REVISION:Cl,RGBADepthPacking:ny,RGBAFormat:wn,RGBAIntegerFormat:gu,RGBA_ASTC_10x10_Format:Nh,RGBA_ASTC_10x5_Format:Dh,RGBA_ASTC_10x6_Format:Uh,RGBA_ASTC_10x8_Format:Oh,RGBA_ASTC_12x10_Format:Fh,RGBA_ASTC_12x12_Format:Bh,RGBA_ASTC_4x4_Format:wh,RGBA_ASTC_5x4_Format:Eh,RGBA_ASTC_5x5_Format:Ah,RGBA_ASTC_6x5_Format:Ch,RGBA_ASTC_6x6_Format:Rh,RGBA_ASTC_8x5_Format:Ph,RGBA_ASTC_8x6_Format:Ih,RGBA_ASTC_8x8_Format:Lh,RGBA_BPTC_Format:Qa,RGBA_ETC2_EAC_Format:Th,RGBA_PVRTC_2BPPV1_Format:Mh,RGBA_PVRTC_4BPPV1_Format:vh,RGBA_S3TC_DXT1_Format:ja,RGBA_S3TC_DXT3_Format:Ka,RGBA_S3TC_DXT5_Format:Ja,RGBDepthPacking:gS,RGBFormat:Np,RGBIntegerFormat:mS,RGB_BPTC_SIGNED_Format:kh,RGB_BPTC_UNSIGNED_Format:zh,RGB_ETC1_Format:Sh,RGB_ETC2_Format:bh,RGB_PVRTC_2BPPV1_Format:yh,RGB_PVRTC_4BPPV1_Format:xh,RGB_S3TC_DXT1_Format:Za,RGDepthPacking:_S,RGFormat:Il,RGIntegerFormat:mu,RawShaderMaterial:Oy,Ray:ni,Raycaster:ov,RectAreaLight:jy,RedFormat:pu,RedIntegerFormat:Pl,ReinhardToneMapping:Gx,RenderTarget:xu,RenderTarget3D:cw,RenderTargetArray:hw,RepeatWrapping:$s,ReplaceStencilOp:yS,ReverseSubtractEquation:Ex,RingGeometry:Fu,SIGNED_RED_GREEN_RGTC2_Format:Gh,SIGNED_RED_RGTC1_Format:Vh,SRGBColorSpace:At,SRGBTransfer:ft,Scene:Wp,ShaderChunk:Ze,ShaderLib:Ri,ShaderMaterial:Qn,ShadowMaterial:Uy,Shape:kr,ShapeGeometry:Bu,ShapePath:Iw,ShapeUtils:Ii,ShortType:Dp,Skeleton:Ol,SkeletonHelper:xw,SkinnedMesh:qp,Source:hs,Sphere:Ot,SphereGeometry:zl,Spherical:av,SphericalHarmonics3:Ky,SplineCurve:em,SpotLight:am,SpotLightHelper:_w,Sprite:vy,SpriteMaterial:Xp,SrcAlphaFactor:ch,SrcAlphaSaturateFactor:Ox,SrcColorFactor:Rx,StaticCopyUsage:FS,StaticDrawUsage:ul,StaticReadUsage:US,StereoCamera:XT,StreamCopyUsage:kS,StreamDrawUsage:DS,StreamReadUsage:NS,StringKeyframeTrack:to,SubtractEquation:wx,SubtractiveBlending:Hf,TOUCH:cS,TangentSpaceNormalMap:Js,TetrahedronGeometry:ku,Texture:Mt,TextureLoader:Yy,TextureUtils:Fw,TimestampQuery:VS,TorusGeometry:zu,TorusKnotGeometry:Vu,Triangle:bn,TriangleFanDrawMode:Wh,TriangleStripDrawMode:kp,TrianglesDrawMode:ey,TubeGeometry:Hu,UVMapping:cu,Uint16BufferAttribute:Hp,Uint32BufferAttribute:Gp,Uint8BufferAttribute:Eb,Uint8ClampedBufferAttribute:Ab,Uniform:fm,UniformsGroup:dw,UniformsLib:me,UniformsUtils:gy,UnsignedByteType:Jn,UnsignedInt248Type:qo,UnsignedInt5999Type:Up,UnsignedIntType:_s,UnsignedShort4444Type:du,UnsignedShort5551Type:fu,UnsignedShortType:Xo,VSMShadowMap:Ni,Vector2:G,Vector3:A,Vector4:st,VectorKeyframeTrack:jr,VideoFrameTexture:Zb,VideoTexture:Sy,WebGL3DRenderTarget:fb,WebGLArrayRenderTarget:Yf,WebGLCoordinateSystem:pi,WebGLCubeRenderTarget:xy,WebGLRenderTarget:xi,WebGLRenderer:mm,WebGLUtils:mv,WebGPUCoordinateSystem:dl,WebXRController:sh,WireframeGeometry:Dy,WrapAroundEnding:cl,ZeroCurvatureEnding:Ir,ZeroFactor:Pp,ZeroSlopeEnding:Lr,ZeroStencilOp:xS,createCanvasElement:dy},Symbol.toStringTag,{value:"Module"}));function yR(o){let e=0;for(const n in o.attributes){const i=o.getAttribute(n);e+=i.count*i.itemSize*i.array.BYTES_PER_ELEMENT}const t=o.getIndex();return e+=t?t.count*t.itemSize*t.array.BYTES_PER_ELEMENT:0,e}function C_(o,e){if(e===ey)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),o;if(e===Wh||e===kp){let t=o.getIndex();if(t===null){const r=[],a=o.getAttribute("position");if(a!==void 0){for(let l=0;l<a.count;l++)r.push(l);o.setIndex(r),t=o.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),o}const n=t.count-2,i=[];if(e===Wh)for(let r=1;r<=n;r++)i.push(t.getX(0)),i.push(t.getX(r)),i.push(t.getX(r+1));else for(let r=0;r<n;r++)r%2===0?(i.push(t.getX(r)),i.push(t.getX(r+1)),i.push(t.getX(r+2))):(i.push(t.getX(r+2)),i.push(t.getX(r+1)),i.push(t.getX(r)));i.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=o.clone();return s.setIndex(i),s.clearGroups(),s}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),o}class $u extends mn{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new TR(t)}),this.register(function(t){return new wR(t)}),this.register(function(t){return new UR(t)}),this.register(function(t){return new OR(t)}),this.register(function(t){return new NR(t)}),this.register(function(t){return new AR(t)}),this.register(function(t){return new CR(t)}),this.register(function(t){return new RR(t)}),this.register(function(t){return new PR(t)}),this.register(function(t){return new bR(t)}),this.register(function(t){return new IR(t)}),this.register(function(t){return new ER(t)}),this.register(function(t){return new DR(t)}),this.register(function(t){return new LR(t)}),this.register(function(t){return new MR(t)}),this.register(function(t){return new FR(t)}),this.register(function(t){return new BR(t)})}load(e,t,n,i){const s=this;let r;if(this.resourcePath!=="")r=this.resourcePath;else if(this.path!==""){const c=Ws.extractUrlBase(e);r=Ws.resolveURL(c,this.path)}else r=Ws.extractUrlBase(e);this.manager.itemStart(e);const a=function(c){i?i(c):console.error(c),s.manager.itemError(e),s.manager.itemEnd(e)},l=new kn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{s.parse(c,r,function(h){t(h),s.manager.itemEnd(e)},a)}catch(h){a(h)}},n,a)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){let s;const r={},a={},l=new TextDecoder;if(typeof e=="string")s=JSON.parse(e);else if(e instanceof ArrayBuffer)if(l.decode(new Uint8Array(e,0,4))===gv){try{r[Qe.KHR_BINARY_GLTF]=new kR(e)}catch(u){i&&i(u);return}s=JSON.parse(r[Qe.KHR_BINARY_GLTF].content)}else s=JSON.parse(l.decode(e));else s=e;if(s.asset===void 0||s.asset.version[0]<2){i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const c=new JR(s,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});c.fileLoader.setRequestHeader(this.requestHeader);for(let h=0;h<this.pluginCallbacks.length;h++){const u=this.pluginCallbacks[h](c);u.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[u.name]=u,r[u.name]=!0}if(s.extensionsUsed)for(let h=0;h<s.extensionsUsed.length;++h){const u=s.extensionsUsed[h],d=s.extensionsRequired||[];switch(u){case Qe.KHR_MATERIALS_UNLIT:r[u]=new SR;break;case Qe.KHR_DRACO_MESH_COMPRESSION:r[u]=new zR(s,this.dracoLoader);break;case Qe.KHR_TEXTURE_TRANSFORM:r[u]=new VR;break;case Qe.KHR_MESH_QUANTIZATION:r[u]=new HR;break;default:d.indexOf(u)>=0&&a[u]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+u+'".')}}c.setExtensions(r),c.setPlugins(a),c.parse(n,i)}parseAsync(e,t){const n=this;return new Promise(function(i,s){n.parse(e,t,i,s)})}}function vR(){let o={};return{get:function(e){return o[e]},add:function(e,t){o[e]=t},remove:function(e){delete o[e]},removeAll:function(){o={}}}}const Qe={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class MR{constructor(e){this.parser=e,this.name=Qe.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,i=t.length;n<i;n++){const s=t[n];s.extensions&&s.extensions[this.name]&&s.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,s.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let i=t.cache.get(n);if(i)return i;const s=t.json,l=((s.extensions&&s.extensions[this.name]||{}).lights||[])[e];let c;const h=new le(16777215);l.color!==void 0&&h.setRGB(l.color[0],l.color[1],l.color[2],nn);const u=l.range!==void 0?l.range:0;switch(l.type){case"directional":c=new cm(h),c.target.position.set(0,0,-1),c.add(c.target);break;case"point":c=new lm(h),c.distance=u;break;case"spot":c=new am(h),c.distance=u,l.spot=l.spot||{},l.spot.innerConeAngle=l.spot.innerConeAngle!==void 0?l.spot.innerConeAngle:0,l.spot.outerConeAngle=l.spot.outerConeAngle!==void 0?l.spot.outerConeAngle:Math.PI/4,c.angle=l.spot.outerConeAngle,c.penumbra=1-l.spot.innerConeAngle/l.spot.outerConeAngle,c.target.position.set(0,0,-1),c.add(c.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+l.type)}return c.position.set(0,0,0),rs(c,l),l.intensity!==void 0&&(c.intensity=l.intensity),c.name=t.createUniqueName(l.name||"light_"+e),i=Promise.resolve(c),t.cache.add(n,i),i}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,s=n.json.nodes[e],a=(s.extensions&&s.extensions[this.name]||{}).light;return a===void 0?null:this._loadLight(a).then(function(l){return n._getNodeRef(t.cache,a,l)})}}class SR{constructor(){this.name=Qe.KHR_MATERIALS_UNLIT}getMaterialType(){return un}extendParams(e,t,n){const i=[];e.color=new le(1,1,1),e.opacity=1;const s=t.pbrMetallicRoughness;if(s){if(Array.isArray(s.baseColorFactor)){const r=s.baseColorFactor;e.color.setRGB(r[0],r[1],r[2],nn),e.opacity=r[3]}s.baseColorTexture!==void 0&&i.push(n.assignTexture(e,"map",s.baseColorTexture,At))}return Promise.all(i)}}class bR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=i.extensions[this.name].emissiveStrength;return s!==void 0&&(t.emissiveIntensity=s),Promise.resolve()}}class TR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];if(r.clearcoatFactor!==void 0&&(t.clearcoat=r.clearcoatFactor),r.clearcoatTexture!==void 0&&s.push(n.assignTexture(t,"clearcoatMap",r.clearcoatTexture)),r.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=r.clearcoatRoughnessFactor),r.clearcoatRoughnessTexture!==void 0&&s.push(n.assignTexture(t,"clearcoatRoughnessMap",r.clearcoatRoughnessTexture)),r.clearcoatNormalTexture!==void 0&&(s.push(n.assignTexture(t,"clearcoatNormalMap",r.clearcoatNormalTexture)),r.clearcoatNormalTexture.scale!==void 0)){const a=r.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new G(a,a)}return Promise.all(s)}}class wR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=i.extensions[this.name];return t.dispersion=s.dispersion!==void 0?s.dispersion:0,Promise.resolve()}}class ER{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return r.iridescenceFactor!==void 0&&(t.iridescence=r.iridescenceFactor),r.iridescenceTexture!==void 0&&s.push(n.assignTexture(t,"iridescenceMap",r.iridescenceTexture)),r.iridescenceIor!==void 0&&(t.iridescenceIOR=r.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),r.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=r.iridescenceThicknessMinimum),r.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=r.iridescenceThicknessMaximum),r.iridescenceThicknessTexture!==void 0&&s.push(n.assignTexture(t,"iridescenceThicknessMap",r.iridescenceThicknessTexture)),Promise.all(s)}}class AR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[];t.sheenColor=new le(0,0,0),t.sheenRoughness=0,t.sheen=1;const r=i.extensions[this.name];if(r.sheenColorFactor!==void 0){const a=r.sheenColorFactor;t.sheenColor.setRGB(a[0],a[1],a[2],nn)}return r.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=r.sheenRoughnessFactor),r.sheenColorTexture!==void 0&&s.push(n.assignTexture(t,"sheenColorMap",r.sheenColorTexture,At)),r.sheenRoughnessTexture!==void 0&&s.push(n.assignTexture(t,"sheenRoughnessMap",r.sheenRoughnessTexture)),Promise.all(s)}}class CR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return r.transmissionFactor!==void 0&&(t.transmission=r.transmissionFactor),r.transmissionTexture!==void 0&&s.push(n.assignTexture(t,"transmissionMap",r.transmissionTexture)),Promise.all(s)}}class RR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];t.thickness=r.thicknessFactor!==void 0?r.thicknessFactor:0,r.thicknessTexture!==void 0&&s.push(n.assignTexture(t,"thicknessMap",r.thicknessTexture)),t.attenuationDistance=r.attenuationDistance||1/0;const a=r.attenuationColor||[1,1,1];return t.attenuationColor=new le().setRGB(a[0],a[1],a[2],nn),Promise.all(s)}}class PR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=i.extensions[this.name];return t.ior=s.ior!==void 0?s.ior:1.5,Promise.resolve()}}class IR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];t.specularIntensity=r.specularFactor!==void 0?r.specularFactor:1,r.specularTexture!==void 0&&s.push(n.assignTexture(t,"specularIntensityMap",r.specularTexture));const a=r.specularColorFactor||[1,1,1];return t.specularColor=new le().setRGB(a[0],a[1],a[2],nn),r.specularColorTexture!==void 0&&s.push(n.assignTexture(t,"specularColorMap",r.specularColorTexture,At)),Promise.all(s)}}class LR{constructor(e){this.parser=e,this.name=Qe.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return t.bumpScale=r.bumpFactor!==void 0?r.bumpFactor:1,r.bumpTexture!==void 0&&s.push(n.assignTexture(t,"bumpMap",r.bumpTexture)),Promise.all(s)}}class DR{constructor(e){this.parser=e,this.name=Qe.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:yi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const s=[],r=i.extensions[this.name];return r.anisotropyStrength!==void 0&&(t.anisotropy=r.anisotropyStrength),r.anisotropyRotation!==void 0&&(t.anisotropyRotation=r.anisotropyRotation),r.anisotropyTexture!==void 0&&s.push(n.assignTexture(t,"anisotropyMap",r.anisotropyTexture)),Promise.all(s)}}class UR{constructor(e){this.parser=e,this.name=Qe.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,i=n.textures[e];if(!i.extensions||!i.extensions[this.name])return null;const s=i.extensions[this.name],r=t.options.ktx2Loader;if(!r){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,s.source,r)}}class OR{constructor(e){this.parser=e,this.name=Qe.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,i=n.json,s=i.textures[e];if(!s.extensions||!s.extensions[t])return null;const r=s.extensions[t],a=i.images[r.source];let l=n.textureLoader;if(a.uri){const c=n.options.manager.getHandler(a.uri);c!==null&&(l=c)}return n.loadTextureImage(e,r.source,l)}}class NR{constructor(e){this.parser=e,this.name=Qe.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,i=n.json,s=i.textures[e];if(!s.extensions||!s.extensions[t])return null;const r=s.extensions[t],a=i.images[r.source];let l=n.textureLoader;if(a.uri){const c=n.options.manager.getHandler(a.uri);c!==null&&(l=c)}return n.loadTextureImage(e,r.source,l)}}class FR{constructor(e){this.name=Qe.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const i=n.extensions[this.name],s=this.parser.getDependency("buffer",i.buffer),r=this.parser.options.meshoptDecoder;if(!r||!r.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return s.then(function(a){const l=i.byteOffset||0,c=i.byteLength||0,h=i.count,u=i.byteStride,d=new Uint8Array(a,l,c);return r.decodeGltfBufferAsync?r.decodeGltfBufferAsync(h,u,d,i.mode,i.filter).then(function(f){return f.buffer}):r.ready.then(function(){const f=new ArrayBuffer(h*u);return r.decodeGltfBuffer(new Uint8Array(f),h,u,d,i.mode,i.filter),f})})}else return null}}class BR{constructor(e){this.name=Qe.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const i=t.meshes[n.mesh];for(const c of i.primitives)if(c.mode!==hi.TRIANGLES&&c.mode!==hi.TRIANGLE_STRIP&&c.mode!==hi.TRIANGLE_FAN&&c.mode!==void 0)return null;const r=n.extensions[this.name].attributes,a=[],l={};for(const c in r)a.push(this.parser.getDependency("accessor",r[c]).then(h=>(l[c]=h,l[c])));return a.length<1?null:(a.push(this.parser.createNodeMesh(e)),Promise.all(a).then(c=>{const h=c.pop(),u=h.isGroup?h.children:[h],d=c[0].count,f=[];for(const p of u){const m=new de,g=new A,_=new vt,y=new A(1,1,1),v=new wu(p.geometry,p.material,d);for(let x=0;x<d;x++)l.TRANSLATION&&g.fromBufferAttribute(l.TRANSLATION,x),l.ROTATION&&_.fromBufferAttribute(l.ROTATION,x),l.SCALE&&y.fromBufferAttribute(l.SCALE,x),v.setMatrixAt(x,m.compose(g,_,y));for(const x in l)if(x==="_COLOR_0"){const S=l[x];v.instanceColor=new qr(S.array,S.itemSize,S.normalized)}else x!=="TRANSLATION"&&x!=="ROTATION"&&x!=="SCALE"&&p.geometry.setAttribute(x,l[x]);tt.prototype.copy.call(v,p),this.parser.assignFinalMaterial(v),f.push(v)}return h.isGroup?(h.clear(),h.add(...f),h):f[0]}))}}const gv="glTF",wa=12,R_={JSON:1313821514,BIN:5130562};class kR{constructor(e){this.name=Qe.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,wa),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==gv)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-wa,s=new DataView(e,wa);let r=0;for(;r<i;){const a=s.getUint32(r,!0);r+=4;const l=s.getUint32(r,!0);if(r+=4,l===R_.JSON){const c=new Uint8Array(e,wa+r,a);this.content=n.decode(c)}else if(l===R_.BIN){const c=wa+r;this.body=e.slice(c,c+a)}r+=a}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class zR{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=Qe.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,i=this.dracoLoader,s=e.extensions[this.name].bufferView,r=e.extensions[this.name].attributes,a={},l={},c={};for(const h in r){const u=np[h]||h.toLowerCase();a[u]=r[h]}for(const h in e.attributes){const u=np[h]||h.toLowerCase();if(r[h]!==void 0){const d=n.accessors[e.attributes[h]],f=ko[d.componentType];c[u]=f.name,l[u]=d.normalized===!0}}return t.getDependency("bufferView",s).then(function(h){return new Promise(function(u,d){i.decodeDracoFile(h,function(f){for(const p in f.attributes){const m=f.attributes[p],g=l[p];g!==void 0&&(m.normalized=g)}u(f)},a,c,nn,d)})})}}class VR{constructor(){this.name=Qe.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class HR{constructor(){this.name=Qe.KHR_MESH_QUANTIZATION}}class _v extends ha{constructor(e,t,n,i){super(e,t,n,i)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i*3+i;for(let r=0;r!==i;r++)t[r]=n[s+r];return t}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=a*2,c=a*3,h=i-t,u=(n-t)/h,d=u*u,f=d*u,p=e*c,m=p-c,g=-2*f+3*d,_=f-d,y=1-g,v=_-d+u;for(let x=0;x!==a;x++){const S=r[m+x+a],T=r[m+x+l]*h,w=r[p+x+a],E=r[p+x]*h;s[x]=y*S+v*T+g*w+_*E}return s}}const GR=new vt;class WR extends _v{interpolate_(e,t,n,i){const s=super.interpolate_(e,t,n,i);return GR.fromArray(s).normalize().toArray(s),s}}const hi={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},ko={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},P_={9728:Gt,9729:Tt,9984:hu,9985:Fo,9986:Pr,9987:fi},I_={33071:Yn,33648:Wo,10497:$s},qd={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},np={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},Ps={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},XR={CUBICSPLINE:void 0,LINEAR:jo,STEP:Zo},Yd={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function qR(o){return o.DefaultMaterial===void 0&&(o.DefaultMaterial=new ca({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:Hi})),o.DefaultMaterial}function _r(o,e,t){for(const n in t.extensions)o[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function rs(o,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(o.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function YR(o,e,t){let n=!1,i=!1,s=!1;for(let c=0,h=e.length;c<h;c++){const u=e[c];if(u.POSITION!==void 0&&(n=!0),u.NORMAL!==void 0&&(i=!0),u.COLOR_0!==void 0&&(s=!0),n&&i&&s)break}if(!n&&!i&&!s)return Promise.resolve(o);const r=[],a=[],l=[];for(let c=0,h=e.length;c<h;c++){const u=e[c];if(n){const d=u.POSITION!==void 0?t.getDependency("accessor",u.POSITION):o.attributes.position;r.push(d)}if(i){const d=u.NORMAL!==void 0?t.getDependency("accessor",u.NORMAL):o.attributes.normal;a.push(d)}if(s){const d=u.COLOR_0!==void 0?t.getDependency("accessor",u.COLOR_0):o.attributes.color;l.push(d)}}return Promise.all([Promise.all(r),Promise.all(a),Promise.all(l)]).then(function(c){const h=c[0],u=c[1],d=c[2];return n&&(o.morphAttributes.position=h),i&&(o.morphAttributes.normal=u),s&&(o.morphAttributes.color=d),o.morphTargetsRelative=!0,o})}function $R(o,e){if(o.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)o.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(o.morphTargetInfluences.length===t.length){o.morphTargetDictionary={};for(let n=0,i=t.length;n<i;n++)o.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function ZR(o){let e;const t=o.extensions&&o.extensions[Qe.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+$d(t.attributes):e=o.indices+":"+$d(o.attributes)+":"+o.mode,o.targets!==void 0)for(let n=0,i=o.targets.length;n<i;n++)e+=":"+$d(o.targets[n]);return e}function $d(o){let e="";const t=Object.keys(o).sort();for(let n=0,i=t.length;n<i;n++)e+=t[n]+":"+o[t[n]]+";";return e}function ip(o){switch(o){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function jR(o){return o.search(/\.jpe?g($|\?)/i)>0||o.search(/^data\:image\/jpeg/)===0?"image/jpeg":o.search(/\.webp($|\?)/i)>0||o.search(/^data\:image\/webp/)===0?"image/webp":o.search(/\.ktx2($|\?)/i)>0||o.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const KR=new de;class JR{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new vR,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,s=!1,r=-1;if(typeof navigator<"u"){const a=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(a)===!0;const l=a.match(/Version\/(\d+)/);i=n&&l?parseInt(l[1],10):-1,s=a.indexOf("Firefox")>-1,r=s?a.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&i<17||s&&r<98?this.textureLoader=new Yy(this.options.manager):this.textureLoader=new tv(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new kn(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,i=this.json,s=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(r){return r._markDefs&&r._markDefs()}),Promise.all(this._invokeAll(function(r){return r.beforeRoot&&r.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(r){const a={scene:r[0][i.scene||0],scenes:r[0],animations:r[1],cameras:r[2],asset:i.asset,parser:n,userData:{}};return _r(s,a,i),rs(a,i),Promise.all(n._invokeAll(function(l){return l.afterRoot&&l.afterRoot(a)})).then(function(){for(const l of a.scenes)l.updateMatrixWorld();e(a)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let i=0,s=t.length;i<s;i++){const r=t[i].joints;for(let a=0,l=r.length;a<l;a++)e[r[a]].isBone=!0}for(let i=0,s=e.length;i<s;i++){const r=e[i];r.mesh!==void 0&&(this._addNodeRef(this.meshCache,r.mesh),r.skin!==void 0&&(n[r.mesh].isSkinnedMesh=!0)),r.camera!==void 0&&this._addNodeRef(this.cameraCache,r.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const i=n.clone(),s=(r,a)=>{const l=this.associations.get(r);l!=null&&this.associations.set(a,l);for(const[c,h]of r.children.entries())s(h,a.children[c])};return s(n,i),i.name+="_instance_"+e.uses[t]++,i}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const i=e(t[n]);if(i)return i}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let i=0;i<t.length;i++){const s=e(t[i]);s&&n.push(s)}return n}getDependency(e,t){const n=e+":"+t;let i=this.cache.get(n);if(!i){switch(e){case"scene":i=this.loadScene(t);break;case"node":i=this._invokeOne(function(s){return s.loadNode&&s.loadNode(t)});break;case"mesh":i=this._invokeOne(function(s){return s.loadMesh&&s.loadMesh(t)});break;case"accessor":i=this.loadAccessor(t);break;case"bufferView":i=this._invokeOne(function(s){return s.loadBufferView&&s.loadBufferView(t)});break;case"buffer":i=this.loadBuffer(t);break;case"material":i=this._invokeOne(function(s){return s.loadMaterial&&s.loadMaterial(t)});break;case"texture":i=this._invokeOne(function(s){return s.loadTexture&&s.loadTexture(t)});break;case"skin":i=this.loadSkin(t);break;case"animation":i=this._invokeOne(function(s){return s.loadAnimation&&s.loadAnimation(t)});break;case"camera":i=this.loadCamera(t);break;default:if(i=this._invokeOne(function(s){return s!=this&&s.getDependency&&s.getDependency(e,t)}),!i)throw new Error("Unknown type: "+e);break}this.cache.add(n,i)}return i}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,i=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(i.map(function(s,r){return n.getDependency(e,r)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[Qe.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(s,r){n.load(Ws.resolveURL(t.uri,i.path),s,void 0,function(){r(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const i=t.byteLength||0,s=t.byteOffset||0;return n.slice(s,s+i)})}loadAccessor(e){const t=this,n=this.json,i=this.json.accessors[e];if(i.bufferView===void 0&&i.sparse===void 0){const r=qd[i.type],a=ko[i.componentType],l=i.normalized===!0,c=new a(i.count*r);return Promise.resolve(new ke(c,r,l))}const s=[];return i.bufferView!==void 0?s.push(this.getDependency("bufferView",i.bufferView)):s.push(null),i.sparse!==void 0&&(s.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),s.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(s).then(function(r){const a=r[0],l=qd[i.type],c=ko[i.componentType],h=c.BYTES_PER_ELEMENT,u=h*l,d=i.byteOffset||0,f=i.bufferView!==void 0?n.bufferViews[i.bufferView].byteStride:void 0,p=i.normalized===!0;let m,g;if(f&&f!==u){const _=Math.floor(d/f),y="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+_+":"+i.count;let v=t.cache.get(y);v||(m=new c(a,_*f,i.count*f/h),v=new Ul(m,f/h),t.cache.add(y,v)),g=new Zs(v,l,d%f/h,p)}else a===null?m=new c(i.count*l):m=new c(a,d,i.count*l),g=new ke(m,l,p);if(i.sparse!==void 0){const _=qd.SCALAR,y=ko[i.sparse.indices.componentType],v=i.sparse.indices.byteOffset||0,x=i.sparse.values.byteOffset||0,S=new y(r[1],v,i.sparse.count*_),T=new c(r[2],x,i.sparse.count*l);a!==null&&(g=new ke(g.array.slice(),g.itemSize,g.normalized)),g.normalized=!1;for(let w=0,E=S.length;w<E;w++){const M=S[w];if(g.setX(M,T[w*l]),l>=2&&g.setY(M,T[w*l+1]),l>=3&&g.setZ(M,T[w*l+2]),l>=4&&g.setW(M,T[w*l+3]),l>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}g.normalized=p}return g})}loadTexture(e){const t=this.json,n=this.options,s=t.textures[e].source,r=t.images[s];let a=this.textureLoader;if(r.uri){const l=n.manager.getHandler(r.uri);l!==null&&(a=l)}return this.loadTextureImage(e,s,a)}loadTextureImage(e,t,n){const i=this,s=this.json,r=s.textures[e],a=s.images[t],l=(a.uri||a.bufferView)+":"+r.sampler;if(this.textureCache[l])return this.textureCache[l];const c=this.loadImageSource(t,n).then(function(h){h.flipY=!1,h.name=r.name||a.name||"",h.name===""&&typeof a.uri=="string"&&a.uri.startsWith("data:image/")===!1&&(h.name=a.uri);const d=(s.samplers||{})[r.sampler]||{};return h.magFilter=P_[d.magFilter]||Tt,h.minFilter=P_[d.minFilter]||fi,h.wrapS=I_[d.wrapS]||$s,h.wrapT=I_[d.wrapT]||$s,h.generateMipmaps=!h.isCompressedTexture&&h.minFilter!==Gt&&h.minFilter!==Tt,i.associations.set(h,{textures:e}),h}).catch(function(){return null});return this.textureCache[l]=c,c}loadImageSource(e,t){const n=this,i=this.json,s=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(u=>u.clone());const r=i.images[e],a=self.URL||self.webkitURL;let l=r.uri||"",c=!1;if(r.bufferView!==void 0)l=n.getDependency("bufferView",r.bufferView).then(function(u){c=!0;const d=new Blob([u],{type:r.mimeType});return l=a.createObjectURL(d),l});else if(r.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const h=Promise.resolve(l).then(function(u){return new Promise(function(d,f){let p=d;t.isImageBitmapLoader===!0&&(p=function(m){const g=new Mt(m);g.needsUpdate=!0,d(g)}),t.load(Ws.resolveURL(u,s.path),p,void 0,f)})}).then(function(u){return c===!0&&a.revokeObjectURL(l),rs(u,r),u.userData.mimeType=r.mimeType||jR(r.uri),u}).catch(function(u){throw console.error("THREE.GLTFLoader: Couldn't load texture",l),u});return this.sourceCache[e]=h,h}assignTexture(e,t,n,i){const s=this;return this.getDependency("texture",n.index).then(function(r){if(!r)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(r=r.clone(),r.channel=n.texCoord),s.extensions[Qe.KHR_TEXTURE_TRANSFORM]){const a=n.extensions!==void 0?n.extensions[Qe.KHR_TEXTURE_TRANSFORM]:void 0;if(a){const l=s.associations.get(r);r=s.extensions[Qe.KHR_TEXTURE_TRANSFORM].extendTexture(r,a),s.associations.set(r,l)}}return i!==void 0&&(r.colorSpace=i),e[t]=r,r})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const i=t.attributes.tangent===void 0,s=t.attributes.color!==void 0,r=t.attributes.normal===void 0;if(e.isPoints){const a="PointsMaterial:"+n.uuid;let l=this.cache.get(a);l||(l=new Nl,Xt.prototype.copy.call(l,n),l.color.copy(n.color),l.map=n.map,l.sizeAttenuation=!1,this.cache.add(a,l)),n=l}else if(e.isLine){const a="LineBasicMaterial:"+n.uuid;let l=this.cache.get(a);l||(l=new pn,Xt.prototype.copy.call(l,n),l.color.copy(n.color),l.map=n.map,this.cache.add(a,l)),n=l}if(i||s||r){let a="ClonedMaterial:"+n.uuid+":";i&&(a+="derivative-tangents:"),s&&(a+="vertex-colors:"),r&&(a+="flat-shading:");let l=this.cache.get(a);l||(l=n.clone(),s&&(l.vertexColors=!0),r&&(l.flatShading=!0),i&&(l.normalScale&&(l.normalScale.y*=-1),l.clearcoatNormalScale&&(l.clearcoatNormalScale.y*=-1)),this.cache.add(a,l),this.associations.set(l,this.associations.get(n))),n=l}e.material=n}getMaterialType(){return ca}loadMaterial(e){const t=this,n=this.json,i=this.extensions,s=n.materials[e];let r;const a={},l=s.extensions||{},c=[];if(l[Qe.KHR_MATERIALS_UNLIT]){const u=i[Qe.KHR_MATERIALS_UNLIT];r=u.getMaterialType(),c.push(u.extendParams(a,s,t))}else{const u=s.pbrMetallicRoughness||{};if(a.color=new le(1,1,1),a.opacity=1,Array.isArray(u.baseColorFactor)){const d=u.baseColorFactor;a.color.setRGB(d[0],d[1],d[2],nn),a.opacity=d[3]}u.baseColorTexture!==void 0&&c.push(t.assignTexture(a,"map",u.baseColorTexture,At)),a.metalness=u.metallicFactor!==void 0?u.metallicFactor:1,a.roughness=u.roughnessFactor!==void 0?u.roughnessFactor:1,u.metallicRoughnessTexture!==void 0&&(c.push(t.assignTexture(a,"metalnessMap",u.metallicRoughnessTexture)),c.push(t.assignTexture(a,"roughnessMap",u.metallicRoughnessTexture))),r=this._invokeOne(function(d){return d.getMaterialType&&d.getMaterialType(e)}),c.push(Promise.all(this._invokeAll(function(d){return d.extendMaterialParams&&d.extendMaterialParams(e,a)})))}s.doubleSided===!0&&(a.side=Pi);const h=s.alphaMode||Yd.OPAQUE;if(h===Yd.BLEND?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,h===Yd.MASK&&(a.alphaTest=s.alphaCutoff!==void 0?s.alphaCutoff:.5)),s.normalTexture!==void 0&&r!==un&&(c.push(t.assignTexture(a,"normalMap",s.normalTexture)),a.normalScale=new G(1,1),s.normalTexture.scale!==void 0)){const u=s.normalTexture.scale;a.normalScale.set(u,u)}if(s.occlusionTexture!==void 0&&r!==un&&(c.push(t.assignTexture(a,"aoMap",s.occlusionTexture)),s.occlusionTexture.strength!==void 0&&(a.aoMapIntensity=s.occlusionTexture.strength)),s.emissiveFactor!==void 0&&r!==un){const u=s.emissiveFactor;a.emissive=new le().setRGB(u[0],u[1],u[2],nn)}return s.emissiveTexture!==void 0&&r!==un&&c.push(t.assignTexture(a,"emissiveMap",s.emissiveTexture,At)),Promise.all(c).then(function(){const u=new r(a);return s.name&&(u.name=s.name),rs(u,s),t.associations.set(u,{materials:e}),s.extensions&&_r(i,u,s),u})}createUniqueName(e){const t=it.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,i=this.primitiveCache;function s(a){return n[Qe.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(a,t).then(function(l){return L_(l,a,t)})}const r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a],h=ZR(c),u=i[h];if(u)r.push(u.promise);else{let d;c.extensions&&c.extensions[Qe.KHR_DRACO_MESH_COMPRESSION]?d=s(c):d=L_(new ze,c,t),i[h]={primitive:c,promise:d},r.push(d)}}return Promise.all(r)}loadMesh(e){const t=this,n=this.json,i=this.extensions,s=n.meshes[e],r=s.primitives,a=[];for(let l=0,c=r.length;l<c;l++){const h=r[l].material===void 0?qR(this.cache):this.getDependency("material",r[l].material);a.push(h)}return a.push(t.loadGeometries(r)),Promise.all(a).then(function(l){const c=l.slice(0,l.length-1),h=l[l.length-1],u=[];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=r[f];let _;const y=c[f];if(g.mode===hi.TRIANGLES||g.mode===hi.TRIANGLE_STRIP||g.mode===hi.TRIANGLE_FAN||g.mode===void 0)_=s.isSkinnedMesh===!0?new qp(m,y):new _t(m,y),_.isSkinnedMesh===!0&&_.normalizeSkinWeights(),g.mode===hi.TRIANGLE_STRIP?_.geometry=C_(_.geometry,kp):g.mode===hi.TRIANGLE_FAN&&(_.geometry=C_(_.geometry,Wh));else if(g.mode===hi.LINES)_=new Li(m,y);else if(g.mode===hi.LINE_STRIP)_=new xs(m,y);else if(g.mode===hi.LINE_LOOP)_=new $p(m,y);else if(g.mode===hi.POINTS)_=new Au(m,y);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+g.mode);Object.keys(_.geometry.morphAttributes).length>0&&$R(_,s),_.name=t.createUniqueName(s.name||"mesh_"+e),rs(_,s),g.extensions&&_r(i,_,g),t.assignFinalMaterial(_),u.push(_)}for(let f=0,p=u.length;f<p;f++)t.associations.set(u[f],{meshes:e,primitives:f});if(u.length===1)return s.extensions&&_r(i,u[0],s),u[0];const d=new mi;s.extensions&&_r(i,d,s),t.associations.set(d,{meshes:e});for(let f=0,p=u.length;f<p;f++)d.add(u[f]);return d})}loadCamera(e){let t;const n=this.json.cameras[e],i=n[n.type];if(!i){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new Bt(ue.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):n.type==="orthographic"&&(t=new Ss(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),rs(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let i=0,s=t.joints.length;i<s;i++)n.push(this._loadNodeShallow(t.joints[i]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(i){const s=i.pop(),r=i,a=[],l=[];for(let c=0,h=r.length;c<h;c++){const u=r[c];if(u){a.push(u);const d=new de;s!==null&&d.fromArray(s.array,c*16),l.push(d)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[c])}return new Ol(a,l)})}loadAnimation(e){const t=this.json,n=this,i=t.animations[e],s=i.name?i.name:"animation_"+e,r=[],a=[],l=[],c=[],h=[];for(let u=0,d=i.channels.length;u<d;u++){const f=i.channels[u],p=i.samplers[f.sampler],m=f.target,g=m.node,_=i.parameters!==void 0?i.parameters[p.input]:p.input,y=i.parameters!==void 0?i.parameters[p.output]:p.output;m.node!==void 0&&(r.push(this.getDependency("node",g)),a.push(this.getDependency("accessor",_)),l.push(this.getDependency("accessor",y)),c.push(p),h.push(m))}return Promise.all([Promise.all(r),Promise.all(a),Promise.all(l),Promise.all(c),Promise.all(h)]).then(function(u){const d=u[0],f=u[1],p=u[2],m=u[3],g=u[4],_=[];for(let y=0,v=d.length;y<v;y++){const x=d[y],S=f[y],T=p[y],w=m[y],E=g[y];if(x===void 0)continue;x.updateMatrix&&x.updateMatrix();const M=n._createAnimationTracks(x,S,T,w,E);if(M)for(let b=0;b<M.length;b++)_.push(M[b])}return new ea(s,void 0,_)})}createNodeMesh(e){const t=this.json,n=this,i=t.nodes[e];return i.mesh===void 0?null:n.getDependency("mesh",i.mesh).then(function(s){const r=n._getNodeRef(n.meshCache,i.mesh,s);return i.weights!==void 0&&r.traverse(function(a){if(a.isMesh)for(let l=0,c=i.weights.length;l<c;l++)a.morphTargetInfluences[l]=i.weights[l]}),r})}loadNode(e){const t=this.json,n=this,i=t.nodes[e],s=n._loadNodeShallow(e),r=[],a=i.children||[];for(let c=0,h=a.length;c<h;c++)r.push(n.getDependency("node",a[c]));const l=i.skin===void 0?Promise.resolve(null):n.getDependency("skin",i.skin);return Promise.all([s,Promise.all(r),l]).then(function(c){const h=c[0],u=c[1],d=c[2];d!==null&&h.traverse(function(f){f.isSkinnedMesh&&f.bind(d,KR)});for(let f=0,p=u.length;f<p;f++)h.add(u[f]);return h})}_loadNodeShallow(e){const t=this.json,n=this.extensions,i=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const s=t.nodes[e],r=s.name?i.createUniqueName(s.name):"",a=[],l=i._invokeOne(function(c){return c.createNodeMesh&&c.createNodeMesh(e)});return l&&a.push(l),s.camera!==void 0&&a.push(i.getDependency("camera",s.camera).then(function(c){return i._getNodeRef(i.cameraCache,s.camera,c)})),i._invokeAll(function(c){return c.createNodeAttachment&&c.createNodeAttachment(e)}).forEach(function(c){a.push(c)}),this.nodeCache[e]=Promise.all(a).then(function(c){let h;if(s.isBone===!0?h=new Tu:c.length>1?h=new mi:c.length===1?h=c[0]:h=new tt,h!==c[0])for(let u=0,d=c.length;u<d;u++)h.add(c[u]);if(s.name&&(h.userData.name=s.name,h.name=r),rs(h,s),s.extensions&&_r(n,h,s),s.matrix!==void 0){const u=new de;u.fromArray(s.matrix),h.applyMatrix4(u)}else s.translation!==void 0&&h.position.fromArray(s.translation),s.rotation!==void 0&&h.quaternion.fromArray(s.rotation),s.scale!==void 0&&h.scale.fromArray(s.scale);return i.associations.has(h)||i.associations.set(h,{}),i.associations.get(h).nodes=e,h}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],i=this,s=new mi;n.name&&(s.name=i.createUniqueName(n.name)),rs(s,n),n.extensions&&_r(t,s,n);const r=n.nodes||[],a=[];for(let l=0,c=r.length;l<c;l++)a.push(i.getDependency("node",r[l]));return Promise.all(a).then(function(l){for(let h=0,u=l.length;h<u;h++)s.add(l[h]);const c=h=>{const u=new Map;for(const[d,f]of i.associations)(d instanceof Xt||d instanceof Mt)&&u.set(d,f);return h.traverse(d=>{const f=i.associations.get(d);f!=null&&u.set(d,f)}),u};return i.associations=c(s),s})}_createAnimationTracks(e,t,n,i,s){const r=[],a=e.name?e.name:e.uuid,l=[];Ps[s.path]===Ps.weights?e.traverse(function(d){d.morphTargetInfluences&&l.push(d.name?d.name:d.uuid)}):l.push(a);let c;switch(Ps[s.path]){case Ps.weights:c=$r;break;case Ps.rotation:c=Zr;break;case Ps.translation:case Ps.scale:c=jr;break;default:switch(n.itemSize){case 1:c=$r;break;case 2:case 3:default:c=jr;break}break}const h=i.interpolation!==void 0?XR[i.interpolation]:jo,u=this._getArrayFromAccessor(n);for(let d=0,f=l.length;d<f;d++){const p=new c(l[d]+"."+Ps[s.path],t.array,u,h);i.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(p),r.push(p)}return r}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=ip(t.constructor),i=new Float32Array(t.length);for(let s=0,r=t.length;s<r;s++)i[s]=t[s]*n;t=i}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const i=this instanceof Zr?WR:_v;return new i(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function QR(o,e,t){const n=e.attributes,i=new Wt;if(n.POSITION!==void 0){const a=t.json.accessors[n.POSITION],l=a.min,c=a.max;if(l!==void 0&&c!==void 0){if(i.set(new A(l[0],l[1],l[2]),new A(c[0],c[1],c[2])),a.normalized){const h=ip(ko[a.componentType]);i.min.multiplyScalar(h),i.max.multiplyScalar(h)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const s=e.targets;if(s!==void 0){const a=new A,l=new A;for(let c=0,h=s.length;c<h;c++){const u=s[c];if(u.POSITION!==void 0){const d=t.json.accessors[u.POSITION],f=d.min,p=d.max;if(f!==void 0&&p!==void 0){if(l.setX(Math.max(Math.abs(f[0]),Math.abs(p[0]))),l.setY(Math.max(Math.abs(f[1]),Math.abs(p[1]))),l.setZ(Math.max(Math.abs(f[2]),Math.abs(p[2]))),d.normalized){const m=ip(ko[d.componentType]);l.multiplyScalar(m)}a.max(l)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}i.expandByVector(a)}o.boundingBox=i;const r=new Ot;i.getCenter(r.center),r.radius=i.min.distanceTo(i.max)/2,o.boundingSphere=r}function L_(o,e,t){const n=e.attributes,i=[];function s(r,a){return t.getDependency("accessor",r).then(function(l){o.setAttribute(a,l)})}for(const r in n){const a=np[r]||r.toLowerCase();a in o.attributes||i.push(s(n[r],a))}if(e.indices!==void 0&&!o.index){const r=t.getDependency("accessor",e.indices).then(function(a){o.setIndex(a)});i.push(r)}return Je.workingColorSpace!==nn&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${Je.workingColorSpace}" not supported.`),rs(o,e),QR(o,e,t),Promise.all(i).then(function(){return e.targets!==void 0?YR(o,e.targets,t):o})}class xv extends aS{constructor(e=no){super(),this.manager=e,this.adjustmentTransform=new de}parse(e){const t=super.parse(e),n=t.glbBytes.slice().buffer;return new Promise((i,s)=>{const r=this.manager,a=this.fetchOptions,l=r.getHandler("path.gltf")||new $u(r);a.credentials==="include"&&a.mode==="cors"&&l.setCrossOrigin("use-credentials"),"credentials"in a&&l.setWithCredentials(a.credentials==="include"),a.headers&&l.setRequestHeader(a.headers);let c=this.workingPath;!/[\\/]$/.test(c)&&c.length&&(c+="/");const h=this.adjustmentTransform;l.parse(n,c,u=>{const{batchTable:d,featureTable:f}=t,{scene:p}=u,m=f.getData("RTC_CENTER");m&&(p.position.x+=m[0],p.position.y+=m[1],p.position.z+=m[2]),u.scene.updateMatrix(),u.scene.matrix.multiply(h),u.scene.matrix.decompose(u.scene.position,u.scene.quaternion,u.scene.scale),u.batchTable=d,u.featureTable=f,p.batchTable=d,p.featureTable=f,i(u)},s)})}}class eP extends Al{parse(e){const t=new DataView(e),n=Go(t);console.assert(n==="pnts");const i=t.getUint32(4,!0);console.assert(i===1);const s=t.getUint32(8,!0);console.assert(s===e.byteLength);const r=t.getUint32(12,!0),a=t.getUint32(16,!0),l=t.getUint32(20,!0),c=t.getUint32(24,!0),h=28,u=e.slice(h,h+r+a),d=new lu(u,0,r,a),f=h+r+a,p=e.slice(f,f+l+c),m=new Ap(p,d.getData("BATCH_LENGTH")||d.getData("POINTS_LENGTH"),0,l,c);return Promise.resolve({version:i,featureTable:d,batchTable:m})}}function tP(o){const e=o>>11,t=o>>5&63,n=o&31,i=Math.round(e/31*255),s=Math.round(t/63*255),r=Math.round(n/31*255);return[i,s,r]}const Ea=new G;function nP(o,e,t=new A){Ea.set(o,e).divideScalar(256).multiplyScalar(2).subScalar(1),t.set(Ea.x,Ea.y,1-Math.abs(Ea.x)-Math.abs(Ea.y));const n=ue.clamp(-t.z,0,1);return t.x>=0?t.setX(t.x-n):t.setX(t.x+n),t.y>=0?t.setY(t.y-n):t.setY(t.y+n),t.normalize(),t}const D_={RGB:"color",POSITION:"position"};class yv extends eP{constructor(e=no){super(),this.manager=e}parse(e){return super.parse(e).then(async t=>{const{featureTable:n,batchTable:i}=t,s=new Nl,r=n.header.extensions,a=new A;let l;if(r&&r["3DTILES_draco_point_compression"]){const{byteOffset:u,byteLength:d,properties:f}=r["3DTILES_draco_point_compression"],p=this.manager.getHandler("draco.drc");if(p==null)throw new Error("PNTSLoader: dracoLoader not available.");const m={};for(const y in f)if(y in D_&&y in f){const v=D_[y];m[v]=f[y]}const g={attributeIDs:m,attributeTypes:{position:"Float32Array",color:"Uint8Array"},useUniqueIDs:!0},_=n.getBuffer(u,d);l=await p.decodeGeometry(_,g),l.attributes.color&&(s.vertexColors=!0)}else{const u=n.getData("POINTS_LENGTH"),d=n.getData("POSITION",u,"FLOAT","VEC3"),f=n.getData("NORMAL",u,"FLOAT","VEC3"),p=n.getData("NORMAL",u,"UNSIGNED_BYTE","VEC2"),m=n.getData("RGB",u,"UNSIGNED_BYTE","VEC3"),g=n.getData("RGBA",u,"UNSIGNED_BYTE","VEC4"),_=n.getData("RGB565",u,"UNSIGNED_SHORT","SCALAR"),y=n.getData("CONSTANT_RGBA",u,"UNSIGNED_BYTE","VEC4"),v=n.getData("POSITION_QUANTIZED",u,"UNSIGNED_SHORT","VEC3"),x=n.getData("QUANTIZED_VOLUME_SCALE",u,"FLOAT","VEC3"),S=n.getData("QUANTIZED_VOLUME_OFFSET",u,"FLOAT","VEC3");if(l=new ze,v){const T=new Float32Array(u*3);for(let w=0;w<u;w++)for(let E=0;E<3;E++){const M=3*w+E;T[M]=v[M]/65535*x[E]}a.x=S[0],a.y=S[1],a.z=S[2],l.setAttribute("position",new ke(T,3,!1))}else l.setAttribute("position",new ke(d,3,!1));if(f!==null)l.setAttribute("normal",new ke(f,3,!1));else if(p!==null){const T=new Float32Array(u*3),w=new A;for(let E=0;E<u;E++){const M=p[E*2],b=p[E*2+1],I=nP(M,b,w);T[E*3]=I.x,T[E*3+1]=I.y,T[E*3+2]=I.z}l.setAttribute("normal",new ke(T,3,!1))}if(g!==null)l.setAttribute("color",new ke(g,4,!0)),s.vertexColors=!0,s.transparent=!0,s.depthWrite=!1;else if(m!==null)l.setAttribute("color",new ke(m,3,!0)),s.vertexColors=!0;else if(_!==null){const T=new Uint8Array(u*3);for(let w=0;w<u;w++){const E=tP(_[w]);for(let M=0;M<3;M++){const b=3*w+M;T[b]=E[M]}}l.setAttribute("color",new ke(T,3,!0)),s.vertexColors=!0}else if(y!==null){const T=new le(y[0],y[1],y[2]);s.color=T;const w=y[3]/255;w<1&&(s.opacity=w,s.transparent=!0,s.depthWrite=!1)}}const c=new Au(l,s);c.position.copy(a),t.scene=c,t.scene.featureTable=n,t.scene.batchTable=i;const h=n.getData("RTC_CENTER");return h&&(t.scene.position.x+=h[0],t.scene.position.y+=h[1],t.scene.position.z+=h[2]),t})}}class iP extends Al{parse(e){const t=new DataView(e),n=Go(t);console.assert(n==="i3dm");const i=t.getUint32(4,!0);console.assert(i===1);const s=t.getUint32(8,!0);console.assert(s===e.byteLength);const r=t.getUint32(12,!0),a=t.getUint32(16,!0),l=t.getUint32(20,!0),c=t.getUint32(24,!0),h=t.getUint32(28,!0),u=32,d=e.slice(u,u+r+a),f=new lu(d,0,r,a),p=u+r+a,m=e.slice(p,p+l+c),g=new Ap(m,f.getData("INSTANCES_LENGTH"),0,l,c),_=p+l+c,y=new Uint8Array(e,_,s-_);let v=null,x=null,S=null;if(h)v=y,x=Promise.resolve();else{const T=this.resolveExternalURL(vx(y)),w=T.split(/[\\/]/g);w.pop(),S=w.join("/"),x=fetch(T,this.fetchOptions).then(E=>{if(!E.ok)throw new Error(`I3DMLoaderBase : Failed to load file "${T}" with status ${E.status} : ${E.statusText}`);return E.arrayBuffer()}).then(E=>{v=new Uint8Array(E)})}return x.then(()=>({version:i,featureTable:f,batchTable:g,glbBytes:v,gltfWorkingPath:S}))}}new A;function sP(o){const{x:e,y:t,z:n}=o;o.x=n,o.y=e,o.z=t}function rP(o){return-o+Math.PI/2}const U_=new av,Is=new A,oi=new A,Zd=new A,Ls=new de,Qi=new de,jd=new Ot,Pn=new An,O_=new A,N_=new A,F_=new A,Aa=new A,B_=new ni,oP=1e-12,aP=.1,Kd=0,k_=1,z_=2;class Zu{constructor(e=1,t=1,n=1){this.name="",this.radius=new A(e,t,n)}intersectRay(e,t){return Ls.makeScale(...this.radius).invert(),jd.center.set(0,0,0),jd.radius=1,B_.copy(e).applyMatrix4(Ls),B_.intersectSphere(jd,t)?(Ls.makeScale(...this.radius),t.applyMatrix4(Ls),t):null}getEastNorthUpFrame(e,t,n){return this.getEastNorthUpAxes(e,t,O_,N_,F_,Aa),n.makeBasis(O_,N_,F_).setPosition(Aa)}getEastNorthUpAxes(e,t,n,i,s,r=Aa){this.getCartographicToPosition(e,t,0,r),this.getCartographicToNormal(e,t,s),n.set(-r.y,r.x,0).normalize(),i.crossVectors(s,n).normalize()}getAzElRollFromRotationMatrix(e,t,n,i,s=Kd){return s===k_?(Pn.set(-Math.PI/2,0,0,"XYZ"),Qi.makeRotationFromEuler(Pn).premultiply(n)):s===z_?(Pn.set(-Math.PI/2,0,Math.PI,"XYZ"),Qi.makeRotationFromEuler(Pn).premultiply(n)):Qi.copy(n),this.getEastNorthUpFrame(e,t,Ls).invert(),Qi.premultiply(Ls),Pn.setFromRotationMatrix(Qi,"ZXY"),i.azimuth=-Pn.z,i.elevation=Pn.x,i.roll=Pn.y,i}getRotationMatrixFromAzElRoll(e,t,n,i,s,r,a=Kd){return this.getEastNorthUpFrame(e,t,Ls),Pn.set(i,s,-n,"ZXY"),r.makeRotationFromEuler(Pn).premultiply(Ls).setPosition(0,0,0),a===k_?(Pn.set(Math.PI/2,0,0,"XYZ"),Qi.makeRotationFromEuler(Pn),r.multiply(Qi)):a===z_&&(Pn.set(-Math.PI/2,0,Math.PI,"XYZ"),Qi.makeRotationFromEuler(Pn),r.multiply(Qi)),r}getFrame(e,t,n,i,s,r,a,l=Kd){return this.getRotationMatrixFromAzElRoll(e,t,n,i,s,a,l),this.getCartographicToPosition(e,t,r,Aa),a.setPosition(Aa),a}getCartographicToPosition(e,t,n,i){this.getCartographicToNormal(e,t,Is);const s=this.radius;oi.copy(Is),oi.x*=s.x**2,oi.y*=s.y**2,oi.z*=s.z**2;const r=Math.sqrt(Is.dot(oi));return oi.divideScalar(r),i.copy(oi).addScaledVector(Is,n)}getPositionToCartographic(e,t){this.getPositionToSurfacePoint(e,oi),this.getPositionToNormal(e,Is);const n=Zd.subVectors(e,oi);return t.lon=Math.atan2(Is.y,Is.x),t.lat=Math.asin(Is.z),t.height=Math.sign(n.dot(e))*n.length(),t}getCartographicToNormal(e,t,n){return U_.set(1,rP(e),t),n.setFromSpherical(U_).normalize(),sP(n),n}getPositionToNormal(e,t){const n=this.radius;return t.copy(e),t.x/=n.x**2,t.y/=n.y**2,t.z/=n.z**2,t.normalize(),t}getPositionToSurfacePoint(e,t){const n=this.radius,i=1/n.x**2,s=1/n.y**2,r=1/n.z**2,a=e.x*e.x*i,l=e.y*e.y*s,c=e.z*e.z*r,h=a+l+c,u=Math.sqrt(1/h),d=oi.copy(e).multiplyScalar(u);if(h<aP)return isFinite(u)?t.copy(d):null;const f=Zd.set(d.x*i*2,d.y*s*2,d.z*r*2);let p=(1-u)*e.length()/(.5*f.length()),m=0,g,_,y,v,x,S,T,w,E,M,b;do{p-=m,y=1/(1+p*i),v=1/(1+p*s),x=1/(1+p*r),S=y*y,T=v*v,w=x*x,E=S*y,M=T*v,b=w*x,g=a*S+l*T+c*w-1,_=a*E*i+l*M*s+c*b*r;const I=-2*_;m=g/I}while(Math.abs(g)>oP);return t.set(e.x*y,e.y*v,e.z*x)}calculateHorizonDistance(e,t){const n=this.calculateEffectiveRadius(e);return Math.sqrt(2*n*t+t**2)}calculateEffectiveRadius(e){const t=this.radius.x,i=1-this.radius.z**2/t**2,s=e*ue.DEG2RAD,r=Math.sin(s)**2;return t/Math.sqrt(1-i*r)}getPositionElevation(e){this.getPositionToSurfacePoint(e,oi);const t=Zd.subVectors(e,oi);return Math.sign(t.dot(e))*t.length()}copy(e){return this.radius.copy(e.radius),this}clone(){return new this.constructor().copy(this)}}const di=new Zu($m,$m,eS);di.name="WGS84 Earth";const V_=new A,Jd=new A,Qd=new A,ef=new A,tf=new vt,kc=new A,zc=new de,H_=new de,G_=new A,W_=new de,nf=new vt,sf={};class vv extends iP{constructor(e=no){super(),this.manager=e,this.adjustmentTransform=new de,this.ellipsoid=di.clone()}resolveExternalURL(e){return this.manager.resolveURL(super.resolveExternalURL(e))}parse(e){return super.parse(e).then(t=>{const{featureTable:n,batchTable:i}=t,s=t.glbBytes.slice().buffer;return new Promise((r,a)=>{const l=this.fetchOptions,c=this.manager,h=c.getHandler("path.gltf")||new $u(c);l.credentials==="include"&&l.mode==="cors"&&h.setCrossOrigin("use-credentials"),"credentials"in l&&h.setWithCredentials(l.credentials==="include"),l.headers&&h.setRequestHeader(l.headers);let u=t.gltfWorkingPath??this.workingPath;/[\\/]$/.test(u)||(u+="/");const d=this.adjustmentTransform;h.parse(s,u,f=>{const p=n.getData("INSTANCES_LENGTH"),m=n.getData("POSITION",p,"FLOAT","VEC3"),g=n.getData("NORMAL_UP",p,"FLOAT","VEC3"),_=n.getData("NORMAL_RIGHT",p,"FLOAT","VEC3"),y=n.getData("SCALE_NON_UNIFORM",p,"FLOAT","VEC3"),v=n.getData("SCALE",p,"FLOAT","SCALAR"),x=n.getData("RTC_CENTER"),S=n.getData("EAST_NORTH_UP");["QUANTIZED_VOLUME_OFFSET","QUANTIZED_VOLUME_SCALE","POSITION_QUANTIZED","NORMAL_UP_OCT32P","NORMAL_RIGHT_OCT32P"].forEach(M=>{M in n.header&&console.warn(`I3DMLoader: Unsupported FeatureTable feature "${M}" detected.`)});const T=new A;for(let M=0;M<p;M++)T.x+=m[M*3+0]/p,T.y+=m[M*3+1]/p,T.z+=m[M*3+2]/p;const w=[],E=[];f.scene.updateMatrixWorld(),f.scene.traverse(M=>{if(M.isMesh){E.push(M);const{geometry:b,material:I}=M,D=new wu(b,I,p);D.position.copy(T),x&&(D.position.x+=x[0],D.position.y+=x[1],D.position.z+=x[2]),w.push(D)}});for(let M=0;M<p;M++){ef.set(m[M*3+0]-T.x,m[M*3+1]-T.y,m[M*3+2]-T.z),tf.identity(),g&&(Jd.set(g[M*3+0],g[M*3+1],g[M*3+2]),Qd.set(_[M*3+0],_[M*3+1],_[M*3+2]),V_.crossVectors(Qd,Jd).normalize(),zc.makeBasis(Qd,Jd,V_),tf.setFromRotationMatrix(zc)),kc.set(1,1,1),y&&kc.set(y[M*3+0],y[M*3+1],y[M*3+2]),v&&kc.multiplyScalar(v[M]);for(let b=0,I=w.length;b<I;b++){const D=w[b];nf.copy(tf),S&&(D.updateMatrixWorld(),G_.copy(ef).applyMatrix4(D.matrixWorld),this.ellipsoid.getPositionToCartographic(G_,sf),this.ellipsoid.getEastNorthUpFrame(sf.lat,sf.lon,W_),nf.setFromRotationMatrix(W_)),zc.compose(ef,nf,kc).multiply(d);const U=E[b];H_.multiplyMatrices(zc,U.matrixWorld),D.setMatrixAt(M,H_)}}f.scene.clear(),f.scene.add(...w),f.batchTable=i,f.featureTable=n,f.scene.batchTable=i,f.scene.featureTable=n,r(f)},a)})})}}class lP extends Al{parse(e){const t=new DataView(e),n=Go(t);console.assert(n==="cmpt",'CMPTLoader: The magic bytes equal "cmpt".');const i=t.getUint32(4,!0);console.assert(i===1,'CMPTLoader: The version listed in the header is "1".');const s=t.getUint32(8,!0);console.assert(s===e.byteLength,"CMPTLoader: The contents buffer length listed in the header matches the file.");const r=t.getUint32(12,!0),a=[];let l=16;for(let c=0;c<r;c++){const h=new DataView(e,l,12),u=Go(h),d=h.getUint32(4,!0),f=h.getUint32(8,!0),p=new Uint8Array(e,l,f);a.push({type:u,buffer:p,version:d}),l+=f}return{version:i,tiles:a}}}class cP extends lP{constructor(e=no){super(),this.manager=e,this.adjustmentTransform=new de,this.ellipsoid=di.clone()}parse(e){const t=super.parse(e),{manager:n,ellipsoid:i,adjustmentTransform:s}=this,r=[];for(const a in t.tiles){const{type:l,buffer:c}=t.tiles[a];switch(l){case"b3dm":{const h=c.slice(),u=new xv(n);u.workingPath=this.workingPath,u.fetchOptions=this.fetchOptions,u.adjustmentTransform.copy(s);const d=u.parse(h.buffer);r.push(d);break}case"pnts":{const h=c.slice(),u=new yv(n);u.workingPath=this.workingPath,u.fetchOptions=this.fetchOptions;const d=u.parse(h.buffer);r.push(d);break}case"i3dm":{const h=c.slice(),u=new vv(n);u.workingPath=this.workingPath,u.fetchOptions=this.fetchOptions,u.ellipsoid.copy(i),u.adjustmentTransform.copy(s);const d=u.parse(h.buffer);r.push(d);break}}}return Promise.all(r).then(a=>{const l=new mi;return a.forEach(c=>{l.add(c.scene)}),{tiles:a,scene:l}})}}const Ca=new de;class hP extends mi{constructor(e){super(),this.isTilesGroup=!0,this.name="TilesRenderer.TilesGroup",this.tilesRenderer=e,this.matrixWorldInverse=new de}raycast(e,t){return this.tilesRenderer.optimizeRaycast?(this.tilesRenderer.raycast(e,t),!1):!0}updateMatrixWorld(e){if(this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldNeedsUpdate||e){this.parent===null?Ca.copy(this.matrix):Ca.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1;const t=Ca.elements,n=this.matrixWorld.elements;let i=!1;for(let s=0;s<16;s++){const r=t[s],a=n[s];if(Math.abs(r-a)>Number.EPSILON){i=!0;break}}if(i){this.matrixWorld.copy(Ca),this.matrixWorldInverse.copy(Ca).invert();const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].updateMatrixWorld()}}}}const Mv=new ni,rf=new A,Vc=[];function Sv(o,e){return o.distance-e.distance}function bv(o,e,t,n){const{scene:i}=o.cached;t.invokeOnePlugin(r=>r.raycastTile&&r.raycastTile(o,i,e,n))||e.intersectObject(i,!0,n)}function uP(o,e,t){bv(o,e,t,Vc),Vc.sort(Sv);const n=Vc[0]||null;return Vc.length=0,n}function Tv(o){return"__used"in o}function wv(o,e,t,n=null){const{group:i,activeTiles:s}=o;n===null&&(n=Mv,n.copy(t.ray).applyMatrix4(i.matrixWorldInverse));const r=[],a=e.children;for(let h=0,u=a.length;h<u;h++){const d=a[h];if(!Tv(d)||!d.__used)continue;d.cached.boundingVolume.intersectRay(n,rf)!==null&&(rf.applyMatrix4(i.matrixWorld),r.push({distance:rf.distanceToSquared(t.ray.origin),tile:d}))}r.sort(Sv);let l=null,c=1/0;if(s.has(e)){const h=uP(e,t,o);h&&(l=h,c=h.distance*h.distance)}for(let h=0,u=r.length;h<u;h++){const d=r[h],f=d.distance,p=d.tile;if(f>c)break;const m=wv(o,p,t,n);if(m){const g=m.distance*m.distance;g<c&&(l=m,c=g)}}return l}function Ev(o,e,t,n,i=null){if(!Tv(e))return;const{group:s,activeTiles:r}=o,{boundingVolume:a}=e.cached;if(i===null&&(i=Mv,i.copy(t.ray).applyMatrix4(s.matrixWorldInverse)),!e.__used||!a.intersectsRay(i))return;r.has(e)&&bv(e,t,o,n);const l=e.children;for(let c=0,h=l.length;c<h;c++)Ev(o,l[c],t,n,i)}const Hc=new A,Gc=new A,In=new A,Wc=new ni;class X_{constructor(e=new Wt,t=new de){this.box=e.clone(),this.transform=t.clone(),this.inverseTransform=new de,this.points=new Array(8).fill().map(()=>new A),this.planes=new Array(6).fill().map(()=>new Ci)}copy(e){return this.box.copy(e.box),this.transform.copy(e.transform),this.update(),this}clone(){return new this.constructor().copy(this)}clampPoint(e,t){return t.copy(e).applyMatrix4(this.inverseTransform).clamp(this.box.min,this.box.max).applyMatrix4(this.transform)}distanceToPoint(e){return this.clampPoint(e,In).distanceTo(e)}containsPoint(e){return In.copy(e).applyMatrix4(this.inverseTransform),this.box.containsPoint(In)}intersectsRay(e){return Wc.copy(e).applyMatrix4(this.inverseTransform),Wc.intersectsBox(this.box)}intersectRay(e,t){return Wc.copy(e).applyMatrix4(this.inverseTransform),Wc.intersectBox(this.box,t)?(t.applyMatrix4(this.transform),t):null}update(){const{points:e,inverseTransform:t,transform:n,box:i}=this;t.copy(n).invert();const{min:s,max:r}=i;let a=0;for(let l=-1;l<=1;l+=2)for(let c=-1;c<=1;c+=2)for(let h=-1;h<=1;h+=2)e[a].set(l<0?s.x:r.x,c<0?s.y:r.y,h<0?s.z:r.z).applyMatrix4(n),a++;this.updatePlanes()}updatePlanes(){Hc.copy(this.box.min).applyMatrix4(this.transform),Gc.copy(this.box.max).applyMatrix4(this.transform),In.set(0,0,1).transformDirection(this.transform),this.planes[0].setFromNormalAndCoplanarPoint(In,Hc),this.planes[1].setFromNormalAndCoplanarPoint(In,Gc).negate(),In.set(0,1,0).transformDirection(this.transform),this.planes[2].setFromNormalAndCoplanarPoint(In,Hc),this.planes[3].setFromNormalAndCoplanarPoint(In,Gc).negate(),In.set(1,0,0).transformDirection(this.transform),this.planes[4].setFromNormalAndCoplanarPoint(In,Hc),this.planes[5].setFromNormalAndCoplanarPoint(In,Gc).negate()}intersectsSphere(e){return this.clampPoint(e.center,In),In.distanceToSquared(e.center)<=e.radius*e.radius}intersectsFrustum(e){return this._intersectsPlaneShape(e.planes,e.points)}intersectsOBB(e){return this._intersectsPlaneShape(e.planes,e.points)}_intersectsPlaneShape(e,t){const n=this.points,i=this.planes;for(let s=0;s<6;s++){const r=e[s];let a=-1/0;for(let l=0;l<8;l++){const c=n[l],h=r.distanceToPoint(c);a=a<h?h:a}if(a<0)return!1}for(let s=0;s<6;s++){const r=i[s];let a=-1/0;for(let l=0;l<8;l++){const c=t[l],h=r.distanceToPoint(c);a=a<h?h:a}if(a<0)return!1}return!0}}const Ns=Math.PI,Xc=Ns/2,Ra=new A,To=new A,wo=new A,q_=new de;let Wa=0;const of=[];function dP(o=!1){return o?(of[Wa]||(of[Wa]=new A),Wa++,of[Wa-1]):new A}function Y_(){Wa=0}class fP extends Zu{constructor(e,t,n,i=-Xc,s=Xc,r=0,a=2*Ns,l=0,c=0){super(e,t,n),this.latStart=i,this.latEnd=s,this.lonStart=r,this.lonEnd=a,this.heightStart=l,this.heightEnd=c}_getPoints(e=!1){const{latStart:t,latEnd:n,lonStart:i,lonEnd:s,heightStart:r,heightEnd:a}=this,l=ue.mapLinear(.5,0,1,t,n),c=ue.mapLinear(.5,0,1,i,s),h=Math.floor(i/Xc)*Xc,u=[[-Ns/2,0],[Ns/2,0],[0,h],[0,h+Ns/2],[0,h+Ns],[0,h+3*Ns/2],[t,s],[n,s],[t,i],[n,i],[0,i],[0,s],[l,c],[t,c],[n,c],[l,i],[l,s]],d=[],f=u.length;for(let p=0;p<=1;p++){const m=ue.mapLinear(p,0,1,r,a);for(let g=0,_=f;g<_;g++){const[y,v]=u[g];if(y>=t&&y<=n&&v>=i&&v<=s){const x=dP(e);d.push(x),this.getCartographicToPosition(y,v,m,x)}}}return d}getBoundingBox(e,t){Y_();const{latStart:n,latEnd:i,lonStart:s,lonEnd:r}=this;if(i-n<Ns/2){const c=ue.mapLinear(.5,0,1,n,i),h=ue.mapLinear(.5,0,1,s,r);this.getCartographicToNormal(c,h,wo),To.set(0,0,1),Ra.crossVectors(To,wo),To.crossVectors(Ra,wo),t.makeBasis(Ra,To,wo)}else Ra.set(1,0,0),To.set(0,1,0),wo.set(0,0,1),t.makeBasis(Ra,To,wo);q_.copy(t).invert();const l=this._getPoints(!0);for(let c=0,h=l.length;c<h;c++)l[c].applyMatrix4(q_);e.makeEmpty(),e.setFromPoints(l)}getBoundingSphere(e,t){Y_();const n=this._getPoints(!0);e.makeEmpty(),e.setFromPoints(n,t)}}const es=new A,ts=new A,ns=new A,$_=new A,Z_=new A;class pP{constructor(){this.sphere=null,this.obb=null,this.region=null,this.regionObb=null}intersectsRay(e){const t=this.sphere,n=this.obb||this.regionObb;return!(t&&!e.intersectsSphere(t)||n&&!n.intersectsRay(e))}intersectRay(e,t=null){const n=this.sphere,i=this.obb||this.regionObb;let s=-1/0,r=-1/0;n&&e.intersectSphere(n,$_)&&(s=n.containsPoint(e.origin)?0:e.origin.distanceToSquared($_)),i&&i.intersectRay(e,Z_)&&(r=i.containsPoint(e.origin)?0:e.origin.distanceToSquared(Z_));const a=Math.max(s,r);return a===-1/0?null:(e.at(Math.sqrt(a),t),t)}distanceToPoint(e){const t=this.sphere,n=this.obb||this.regionObb;let i=-1/0,s=-1/0;return t&&(i=Math.max(t.distanceToPoint(e),0)),n&&(s=n.distanceToPoint(e)),i>s?i:s}intersectsFrustum(e){const t=this.obb||this.regionObb,n=this.sphere;return n&&!e.intersectsSphere(n)||t&&!t.intersectsFrustum(e)?!1:!!(n||t)}intersectsSphere(e){const t=this.obb||this.regionObb,n=this.sphere;return n&&!n.intersectsSphere(e)||t&&!t.intersectsSphere(e)?!1:!!(n||t)}intersectsOBB(e){const t=this.obb||this.regionObb,n=this.sphere;return n&&!e.intersectsSphere(n)||t&&!t.intersectsOBB(e)?!1:!!(n||t)}getOBB(e,t){const n=this.obb||this.regionObb;n?(e.copy(n.box),t.copy(n.transform)):(this.getAABB(e),t.identity())}getAABB(e){if(this.sphere)this.sphere.getBoundingBox(e);else{const t=this.obb||this.regionObb;e.copy(t.box).applyMatrix4(t.transform)}}getSphere(e){if(this.sphere)e.copy(this.sphere);else if(this.region)this.region.getBoundingSphere(e);else{const t=this.obb||this.regionObb;t.box.getBoundingSphere(e),e.applyMatrix4(t.transform)}}setObbData(e,t){const n=new X_;es.set(e[3],e[4],e[5]),ts.set(e[6],e[7],e[8]),ns.set(e[9],e[10],e[11]);const i=es.length(),s=ts.length(),r=ns.length();es.normalize(),ts.normalize(),ns.normalize(),i===0&&es.crossVectors(ts,ns),s===0&&ts.crossVectors(es,ns),r===0&&ns.crossVectors(es,ts),n.transform.set(es.x,ts.x,ns.x,e[0],es.y,ts.y,ns.y,e[1],es.z,ts.z,ns.z,e[2],0,0,0,1).premultiply(t),n.box.min.set(-i,-s,-r),n.box.max.set(i,s,r),n.update(),this.obb=n}setSphereData(e,t,n,i,s){const r=new Ot;r.center.set(e,t,n),r.radius=i,r.applyMatrix4(s),this.sphere=r}setRegionData(e,t,n,i,s,r,a){const l=new fP(...e.radius,n,s,t,i,r,a),c=new X_;l.getBoundingBox(c.box,c.transform),c.update(),this.region=l,this.regionObb=c}}const mP=new We;function gP(o,e,t,n){const i=mP.set(o.normal.x,o.normal.y,o.normal.z,e.normal.x,e.normal.y,e.normal.z,t.normal.x,t.normal.y,t.normal.z);return n.set(-o.constant,-e.constant,-t.constant),n.applyMatrix3(i.invert()),n}class _P extends Qr{constructor(){super(),this.points=Array(8).fill().map(()=>new A)}setFromProjectionMatrix(e,t){return super.setFromProjectionMatrix(e,t),this.calculateFrustumPoints(),this}calculateFrustumPoints(){const{planes:e,points:t}=this;[[e[0],e[3],e[4]],[e[1],e[3],e[4]],[e[0],e[2],e[4]],[e[1],e[2],e[4]],[e[0],e[3],e[5]],[e[1],e[3],e[5]],[e[0],e[2],e[5]],[e[1],e[2],e[5]]].forEach((i,s)=>{gP(i[0],i[1],i[2],t[s])})}}function xP(o){const{TextureUtils:e}=xR;if(!e)return 0;const t=new Set;let n=0;return o.traverse(i=>{if(i.geometry&&!t.has(i.geometry)&&(n+=yR(i.geometry),t.add(i.geometry)),i.material){const s=i.material;for(const r in s){const a=s[r];if(a&&a.isTexture&&!t.has(a)){const{format:l,type:c,image:h}=a,{width:u,height:d}=h,f=e.getByteLength(u,d,l,c);n+=a.generateMipmaps?f*4/3:f,t.add(a)}}}}),n}const j_=new de,K_=new An,Av=Symbol("INITIAL_FRUSTUM_CULLED"),qc=new de,Pa=new A,af=new G,Yc={inView:!1,error:1/0},yP=new A(1,0,0),vP=new A(0,1,0);function J_(o,e){o.traverse(t=>{t.frustumCulled=t[Av]&&e})}class MP extends sS{get autoDisableRendererCulling(){return this._autoDisableRendererCulling}set autoDisableRendererCulling(e){this._autoDisableRendererCulling!==e&&(super._autoDisableRendererCulling=e,this.forEachLoadedModel(t=>{J_(t,!e)}))}get optimizeRaycast(){return this._optimizeRaycast}set optimizeRaycast(e){console.warn('TilesRenderer: The "optimizeRaycast" option has been deprecated.'),this._optimizeRaycast=e}constructor(...e){super(...e),this.group=new hP(this),this.ellipsoid=di.clone(),this.cameras=[],this.cameraMap=new Map,this.cameraInfo=[],this._optimizeRaycast=!0,this._upRotationMatrix=new de,this.lruCache.computeMemoryUsageCallback=n=>n.cached.bytesUsed??null,this._autoDisableRendererCulling=!0;const t=new Gu;t.setURLModifier(n=>this.preprocessURL?this.preprocessURL(n):n),this.manager=t,this._listeners={}}addEventListener(...e){en.prototype.addEventListener.call(this,...e)}hasEventListener(...e){en.prototype.hasEventListener.call(this,...e)}removeEventListener(...e){en.prototype.removeEventListener.call(this,...e)}dispatchEvent(...e){en.prototype.dispatchEvent.call(this,...e)}getBoundingBox(e){if(!this.root)return!1;const t=this.root.cached.boundingVolume;return t?(t.getAABB(e),!0):!1}getOrientedBoundingBox(e,t){if(!this.root)return!1;const n=this.root.cached.boundingVolume;return n?(n.getOBB(e,t),!0):!1}getBoundingSphere(e){if(!this.root)return!1;const t=this.root.cached.boundingVolume;return t?(t.getSphere(e),!0):!1}forEachLoadedModel(e){this.traverse(t=>{const n=t.cached&&t.cached.scene;n&&e(n,t)},null,!1)}raycast(e,t){if(this.root)if(e.firstHitOnly){const n=wv(this,this.root,e);n&&t.push(n)}else Ev(this,this.root,e,t)}hasCamera(e){return this.cameraMap.has(e)}setCamera(e){const t=this.cameras,n=this.cameraMap;return n.has(e)?!1:(n.set(e,new G),t.push(e),this.dispatchEvent({type:"add-camera",camera:e}),!0)}setResolution(e,t,n){const i=this.cameraMap;if(!i.has(e))return!1;const s=t.isVector2?t.x:t,r=t.isVector2?t.y:n,a=i.get(e);return(a.width!==s||a.height!==r)&&(a.set(s,r),this.dispatchEvent({type:"camera-resolution-change"})),!0}setResolutionFromRenderer(e,t){return t.getSize(af),this.setResolution(e,af.x,af.y)}deleteCamera(e){const t=this.cameras,n=this.cameraMap;if(n.has(e)){const i=t.indexOf(e);return t.splice(i,1),n.delete(e),this.dispatchEvent({type:"delete-camera",camera:e}),!0}return!1}loadRootTileSet(...e){return super.loadRootTileSet(...e).then(t=>{const{asset:n,extensions:i={}}=t;switch((n&&n.gltfUpAxis||"y").toLowerCase()){case"x":this._upRotationMatrix.makeRotationAxis(vP,-Math.PI/2);break;case"y":this._upRotationMatrix.makeRotationAxis(yP,Math.PI/2);break}if("3DTILES_ellipsoid"in i){const r=i["3DTILES_ellipsoid"],{ellipsoid:a}=this;a.name=r.body,r.radii?a.radius.set(...r.radii):a.radius.set(1,1,1)}return t})}update(){let e=null;if(this.invokeAllPlugins(r=>{if(r.doTilesNeedUpdate){const a=r.doTilesNeedUpdate();e===null?e=a:e=!!(e||a)}}),e===!1){this.dispatchEvent({type:"update-before"}),this.dispatchEvent({type:"update-after"});return}this.dispatchEvent({type:"update-before"});const t=this.group,n=this.cameras,i=this.cameraMap,s=this.cameraInfo;for(;s.length>n.length;)s.pop();for(;s.length<n.length;)s.push({frustum:new _P,isOrthographic:!1,sseDenominator:-1,position:new A,invScale:-1,pixelSize:0});Pa.setFromMatrixScale(t.matrixWorldInverse),Math.abs(Math.max(Pa.x-Pa.y,Pa.x-Pa.z))>1e-6&&console.warn("ThreeTilesRenderer : Non uniform scale used for tile which may cause issues when calculating screen space error.");for(let r=0,a=s.length;r<a;r++){const l=n[r],c=s[r],h=c.frustum,u=c.position,d=i.get(l);(d.width===0||d.height===0)&&console.warn("TilesRenderer: resolution for camera error calculation is not set.");const f=l.projectionMatrix.elements;if(c.isOrthographic=f[15]===1,c.isOrthographic){const p=2/f[0],m=2/f[5];c.pixelSize=Math.max(m/d.height,p/d.width)}else c.sseDenominator=2/f[5]/d.height;qc.copy(t.matrixWorld),qc.premultiply(l.matrixWorldInverse),qc.premultiply(l.projectionMatrix),h.setFromProjectionMatrix(qc),u.set(0,0,0),u.applyMatrix4(l.matrixWorld),u.applyMatrix4(t.matrixWorldInverse)}if(super.update(),this.dispatchEvent({type:"update-after"}),n.length===0&&this.root){let r=!1;this.invokeAllPlugins(a=>r=r||!!(a!==this&&a.calculateTileViewError)),r===!1&&console.warn("TilesRenderer: no cameras defined. Cannot update 3d tiles.")}}preprocessNode(e,t,n=null){super.preprocessNode(e,t,n);const i=new de;if(e.transform){const a=e.transform;for(let l=0;l<16;l++)i.elements[l]=a[l]}n&&i.premultiply(n.cached.transform);const s=new de().copy(i).invert(),r=new pP;"sphere"in e.boundingVolume&&r.setSphereData(...e.boundingVolume.sphere,i),"box"in e.boundingVolume&&r.setObbData(e.boundingVolume.box,i),"region"in e.boundingVolume&&r.setRegionData(this.ellipsoid,...e.boundingVolume.region),e.cached={transform:i,transformInverse:s,active:!1,boundingVolume:r,metadata:null,scene:null,geometry:null,materials:null,textures:null}}async parseTile(e,t,n,i,s){const r=t.cached,a=i.split(/[\\/]/g);a.pop();const l=a.join("/"),c=this.fetchOptions,h=this.manager;let u=null;const d=r.transform,f=this._upRotationMatrix,p=(Go(e)||n).toLowerCase();switch(p){case"b3dm":{const S=new xv(h);S.workingPath=l,S.fetchOptions=c,S.adjustmentTransform.copy(f),u=S.parse(e);break}case"pnts":{const S=new yv(h);S.workingPath=l,S.fetchOptions=c,u=S.parse(e);break}case"i3dm":{const S=new vv(h);S.workingPath=l,S.fetchOptions=c,S.adjustmentTransform.copy(f),S.ellipsoid.copy(this.ellipsoid),u=S.parse(e);break}case"cmpt":{const S=new cP(h);S.workingPath=l,S.fetchOptions=c,S.adjustmentTransform.copy(f),S.ellipsoid.copy(this.ellipsoid),u=S.parse(e).then(T=>T.scene);break}case"gltf":case"glb":{const S=h.getHandler("path.gltf")||h.getHandler("path.glb")||new $u(h);S.setWithCredentials(c.credentials==="include"),S.setRequestHeader(c.headers||{}),c.credentials==="include"&&c.mode==="cors"&&S.setCrossOrigin("use-credentials");let T=S.resourcePath||S.path||l;!/[\\/]$/.test(T)&&T.length&&(T+="/"),u=S.parseAsync(e,T).then(w=>{w.scene=w.scene||new mi;const{scene:E}=w;return E.updateMatrix(),E.matrix.multiply(f).decompose(E.position,E.quaternion,E.scale),w});break}default:{u=this.invokeOnePlugin(S=>S.parseToMesh&&S.parseToMesh(e,t,n,i,s));break}}const m=await u;if(m===null)throw new Error(`TilesRenderer: Content type "${p}" not supported.`);let g,_;m.isObject3D?(g=m,_=null):(g=m.scene,_=m),await this.invokeAllPlugins(S=>S.processTileModel&&S.processTileModel(g,t)),g.updateMatrix(),g.matrix.premultiply(d),g.matrix.decompose(g.position,g.quaternion,g.scale),g.traverse(S=>{S[Av]=S.frustumCulled}),J_(g,!this.autoDisableRendererCulling);const y=[],v=[],x=[];if(g.traverse(S=>{if(S.geometry&&v.push(S.geometry),S.material){const T=S.material;y.push(S.material);for(const w in T){const E=T[w];E&&E.isTexture&&x.push(E)}}}),s.aborted){for(let S=0,T=x.length;S<T;S++){const w=x[S];w.image instanceof ImageBitmap&&w.image.close(),w.dispose()}return}r.materials=y,r.geometry=v,r.textures=x,r.scene=g,r.metadata=_,r.bytesUsed=xP(g)}disposeTile(e){super.disposeTile(e);const t=e.cached;if(t.scene){const n=t.materials,i=t.geometry,s=t.textures,r=t.scene.parent;t.scene.traverse(a=>{a.userData.meshFeatures&&a.userData.meshFeatures.dispose(),a.userData.structuralMetadata&&a.userData.structuralMetadata.dispose()});for(let a=0,l=i.length;a<l;a++)i[a].dispose();for(let a=0,l=n.length;a<l;a++)n[a].dispose();for(let a=0,l=s.length;a<l;a++){const c=s[a];c.image instanceof ImageBitmap&&c.image.close(),c.dispose()}r&&r.remove(t.scene),this.dispatchEvent({type:"dispose-model",scene:t.scene,tile:e}),t.scene=null,t.materials=null,t.textures=null,t.geometry=null,t.metadata=null}}setTileVisible(e,t){const n=e.cached.scene,i=this.group;t?n&&(i.add(n),n.updateMatrixWorld(!0)):n&&i.remove(n),super.setTileVisible(e,t),this.dispatchEvent({type:"tile-visibility-change",scene:n,tile:e,visible:t})}calculateTileViewError(e,t){const n=e.cached,i=this.cameras,s=this.cameraInfo,r=n.boundingVolume;let a=!1,l=-1/0,c=1/0,h=-1/0,u=1/0;for(let d=0,f=i.length;d<f;d++){const p=s[d];let m,g;if(p.isOrthographic){const y=p.pixelSize;m=e.geometricError/y,g=1/0}else{const y=p.sseDenominator;g=r.distanceToPoint(p.position),m=e.geometricError/(g*y)}const _=s[d].frustum;r.intersectsFrustum(_)&&(a=!0,l=Math.max(l,m),c=Math.min(c,g)),h=Math.max(h,m),u=Math.min(u,g)}this.invokeAllPlugins(d=>{d!==this&&d.calculateTileViewError&&(d.calculateTileViewError(e,Yc),Yc.inView&&(a=!0,l=Math.max(l,Yc.error)),h=Math.max(h,Yc.error))}),a?(t.inView=!0,t.error=l,t.distanceToCamera=c):(t.inView=!1,t.error=h,t.distanceToCamera=u)}setLatLonToYUp(e,t){console.warn("TilesRenderer: setLatLonToYUp is deprecated. Use the ReorientationPlugin, instead.");const{ellipsoid:n,group:i}=this;K_.set(Math.PI/2,Math.PI/2,0),j_.makeRotationFromEuler(K_),n.getEastNorthUpFrame(e,t,i.matrix).multiply(j_).invert().decompose(i.position,i.quaternion,i.scale),i.updateMatrixWorld(!0)}dispose(){super.dispose(),this.group.removeFromParent()}}class SP extends _t{constructor(){super(new Ms(0,0),new bP),this.renderOrder=1/0}onBeforeRender(e){const t=this.material.uniforms;e.getSize(t.resolution.value)}updateMatrixWorld(){this.matrixWorld.makeTranslation(this.position)}dispose(){this.geometry.dispose(),this.material.dispose()}}class bP extends Qn{constructor(){super({depthWrite:!1,depthTest:!1,transparent:!0,uniforms:{resolution:{value:new G},size:{value:15},thickness:{value:2},opacity:{value:1}},vertexShader:`

				uniform float pixelRatio;
				uniform float size;
				uniform float thickness;
				uniform vec2 resolution;
				varying vec2 vUv;

				void main() {

					vUv = uv;

					float aspect = resolution.x / resolution.y;
					vec2 offset = uv * 2.0 - vec2( 1.0 );
					offset.y *= aspect;

					vec4 screenPoint = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
					screenPoint.xy += offset * ( size + thickness ) * screenPoint.w / resolution.x;

					gl_Position = screenPoint;

				}
			`,fragmentShader:`

				uniform float size;
				uniform float thickness;
				uniform float opacity;

				varying vec2 vUv;
				void main() {

					float ht = 0.5 * thickness;
					float planeDim = size + thickness;
					float offset = ( planeDim - ht - 2.0 ) / planeDim;
					float texelThickness = ht / planeDim;

					vec2 vec = vUv * 2.0 - vec2( 1.0 );
					float dist = abs( length( vec ) - offset );
					float fw = fwidth( dist ) * 0.5;
					float a = smoothstep( texelThickness - fw, texelThickness + fw, dist );

					gl_FragColor = vec4( 1, 1, 1, opacity * ( 1.0 - a ) );

				}
			`})}}const Q_=new G,e0=new G;class TP{constructor(){this.domElement=null,this.buttons=0,this.pointerType=null,this.pointerOrder=[],this.previousPositions={},this.pointerPositions={},this.startPositions={},this.pointerSetThisFrame={},this.hoverPosition=new G,this.hoverSet=!1}reset(){this.buttons=0,this.pointerType=null,this.pointerOrder=[],this.previousPositions={},this.pointerPositions={},this.startPositions={},this.pointerSetThisFrame={},this.hoverPosition=new G,this.hoverSet=!1}updateFrame(){const{previousPositions:e,pointerPositions:t}=this;for(const n in t)e[n].copy(t[n])}setHoverEvent(e){(e.pointerType==="mouse"||e.type==="wheel")&&(this.getAdjustedPointer(e,this.hoverPosition),this.hoverSet=!0)}getLatestPoint(e){return this.pointerType!==null?(this.getCenterPoint(e),e):this.hoverSet?(e.copy(this.hoverPosition),e):null}getAdjustedPointer(e,t){const i=(this.domElement?this.domElement:e.target).getBoundingClientRect(),s=e.clientX-i.left,r=e.clientY-i.top;t.set(s,r)}addPointer(e){const t=e.pointerId,n=new G;this.getAdjustedPointer(e,n),this.pointerOrder.push(t),this.pointerPositions[t]=n,this.previousPositions[t]=n.clone(),this.startPositions[t]=n.clone(),this.getPointerCount()===1&&(this.pointerType=e.pointerType,this.buttons=e.buttons)}updatePointer(e){const t=e.pointerId;return t in this.pointerPositions?(this.getAdjustedPointer(e,this.pointerPositions[t]),!0):!1}deletePointer(e){const t=e.pointerId,n=this.pointerOrder;n.splice(n.indexOf(t),1),delete this.pointerPositions[t],delete this.previousPositions[t],delete this.startPositions[t],this.getPointerCount.length===0&&(this.buttons=0,this.pointerType=null)}getPointerCount(){return this.pointerOrder.length}getCenterPoint(e,t=this.pointerPositions){const n=this.pointerOrder;if(this.getPointerCount()===1||this.getPointerType()==="mouse"){const i=n[0];return e.copy(t[i]),e}else if(this.getPointerCount()===2){const i=this.pointerOrder[0],s=this.pointerOrder[1],r=t[i],a=t[s];return e.addVectors(r,a).multiplyScalar(.5),e}return null}getPreviousCenterPoint(e){return this.getCenterPoint(e,this.previousPositions)}getStartCenterPoint(e){return this.getCenterPoint(e,this.startPositions)}getMoveDistance(){return this.getCenterPoint(Q_),this.getPreviousCenterPoint(e0),Q_.sub(e0).length()}getTouchPointerDistance(e=this.pointerPositions){if(this.getPointerCount()<=1||this.getPointerType()==="mouse")return 0;const{pointerOrder:t}=this,n=t[0],i=t[1],s=e[n],r=e[i];return s.distanceTo(r)}getPreviousTouchPointerDistance(){return this.getTouchPointerDistance(this.previousPositions)}getStartTouchPointerDistance(){return this.getTouchPointerDistance(this.startPositions)}getPointerType(){return this.pointerType}isPointerTouch(){return this.getPointerType()==="touch"}getPointerButtons(){return this.buttons}isLeftClicked(){return!!(this.buttons&1)}isRightClicked(){return!!(this.buttons&2)}}const Bs=new de,t0=new ni,sp=new A;function Ur(o,e,t){return t.makeTranslation(-o.x,-o.y,-o.z),Bs.makeRotationFromQuaternion(e),t.premultiply(Bs),Bs.makeTranslation(o.x,o.y,o.z),t.premultiply(Bs),t}function Ro(o,e,t,n){n.x=(o-t.offsetLeft)/t.clientWidth*2-1,n.y=-((e-t.offsetTop)/t.clientHeight)*2+1,n.isVector3&&(n.z=0)}function lf(o,e,t){return e.intersectRay(o,t)?t:(Bs.makeScale(...e.radius).invert(),t0.copy(o).applyMatrix4(Bs),sp.set(0,0,0),t0.closestPointToPoint(sp,t).normalize(),Bs.makeScale(...e.radius),t.applyMatrix4(Bs))}function wP(o,e,t){const n=o.origin.length(),i=Math.acos(e/n);t.copy(o.origin).multiplyScalar(-1).normalize();const s=sp.crossVectors(t,o.direction).normalize();t.multiplyScalar(-1).applyAxisAngle(s,-i).normalize().multiplyScalar(e)}function ui(o,e,t){const n=o instanceof ni?o:o.ray,{origin:i,direction:s}=n;i.set(e.x,e.y,-1).unproject(t),s.set(e.x,e.y,1).unproject(t).sub(i),o.isRay||(o.near=0,o.far=s.length(),o.camera=t),s.normalize()}const Ai=0,Ar=1,xr=2,Po=3,cf=4,hf=.05,uf=.025,Ds=new de,Wn=new A,pt=new A,Ia=new A,n0=new A,Eo=new A,Us=new vt,i0=new Ci,yn=new A,$c=new A,df=new A,EP=new vt,mt=new ni,La=new G,Zt=new G,s0=new G,Da=new G,ff=new G,r0=new G,o0={type:"change"},a0={type:"start"},l0={type:"end"};class AP extends en{get enabled(){return this._enabled}set enabled(e){e!==this.enabled&&(this._enabled=e,this.resetState(),this.pointerTracker.reset(),this.enabled||(this.dragInertia.set(0,0,0),this.rotationInertia.set(0,0)))}constructor(e=null,t=null,n=null,i=null){super(),this.isEnvironmentControls=!0,this.domElement=null,this.camera=null,this.scene=null,this.tilesRenderer=null,this._enabled=!0,this.cameraRadius=5,this.rotationSpeed=1,this.minAltitude=0,this.maxAltitude=.45*Math.PI,this.minDistance=10,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.zoomSpeed=1,this.adjustHeight=!0,this.enableDamping=!1,this.dampingFactor=.15,this.fallbackPlane=new Ci(new A(0,1,0),0),this.useFallbackPlane=!0,this.reorientOnDrag=!0,this.scaleZoomOrientationAtEdges=!1,this.state=Ai,this.pointerTracker=new TP,this.needsUpdate=!1,this.actionHeightOffset=0,this.pivotPoint=new A,this.zoomDirectionSet=!1,this.zoomPointSet=!1,this.zoomDirection=new A,this.zoomPoint=new A,this.zoomDelta=0,this.rotationInertiaPivot=new A,this.rotationInertia=new G,this.dragInertia=new A,this.inertiaTargetDistance=1/0,this.inertiaStableFrames=0,this.pivotMesh=new SP,this.pivotMesh.raycast=()=>{},this.pivotMesh.scale.setScalar(.25),this.raycaster=new ov,this.raycaster.firstHitOnly=!0,this.up=new A(0,1,0),this.clock=new Xu,this._detachCallback=null,this._upInitialized=!1,this._lastUsedState=Ai,this._zoomPointWasSet=!1,this._tilesOnChangeCallback=()=>this.zoomPointSet=!1,n&&this.attach(n),t&&this.setCamera(t),e&&this.setScene(e),i&&this.setTilesRenderer(i)}setScene(e){this.scene=e}setCamera(e){this.camera=e,this._upInitialized=!1,this.zoomDirectionSet=!1,this.zoomPointSet=!1,this.needsUpdate=!0,this.raycaster.camera=e,this.resetState()}setTilesRenderer(e){this.tilesRenderer&&this.tilesRenderer.removeEventListener("tile-visibility-change",this._tilesOnChangeCallback),this.tilesRenderer=e,this.tilesRenderer!==null&&(this.tilesRenderer.addEventListener("tile-visibility-change",this._tilesOnChangeCallback),this.scene===null&&this.setScene(this.tilesRenderer.group))}attach(e){if(this.domElement)throw new Error("EnvironmentControls: Controls already attached to element");this.domElement=e,this.pointerTracker.domElement=e,e.style.touchAction="none";const t=c=>{this.enabled&&c.preventDefault()},n=c=>{if(!this.enabled)return;c.preventDefault();const{camera:h,raycaster:u,domElement:d,up:f,pivotMesh:p,pointerTracker:m,scene:g,pivotPoint:_,enabled:y}=this;if(m.addPointer(c),this.needsUpdate=!0,m.isPointerTouch()){if(p.visible=!1,m.getPointerCount()===0)d.setPointerCapture(c.pointerId);else if(m.getPointerCount()>2){this.resetState();return}}m.getCenterPoint(Zt),Ro(Zt.x,Zt.y,d,Zt),ui(u,Zt,h);const v=Math.abs(u.ray.direction.dot(f));if(v<hf||v<uf)return;const x=this._raycast(u);x&&(m.getPointerCount()===2||m.isRightClicked()||m.isLeftClicked()&&c.shiftKey?(this.setState(m.isPointerTouch()?cf:xr),_.copy(x.point),p.position.copy(x.point),p.visible=m.isPointerTouch()?!1:y,p.updateMatrixWorld(),g.add(p)):m.isLeftClicked()&&(this.setState(Ar),_.copy(x.point),p.position.copy(x.point),p.updateMatrixWorld(),g.add(p)))};let i=!1;const s=c=>{if(!this.enabled)return;c.preventDefault();const{pivotMesh:h,enabled:u}=this;this.zoomDirectionSet=!1,this.zoomPointSet=!1,this.state!==Ai&&(this.needsUpdate=!0);const{pointerTracker:d}=this;d.setHoverEvent(c),d.updatePointer(c)&&(d.isPointerTouch()&&d.getPointerCount()===2&&(i||(i=!0,queueMicrotask(()=>{i=!1,d.getCenterPoint(ff);const f=d.getStartTouchPointerDistance(),p=d.getTouchPointerDistance(),m=p-f;if(this.state===Ai||this.state===cf){d.getCenterPoint(ff),d.getStartCenterPoint(r0);const g=2*window.devicePixelRatio,_=ff.distanceTo(r0);(Math.abs(m)>g||_>g)&&(Math.abs(m)>_?(this.setState(Po),this.zoomDirectionSet=!1):this.setState(xr))}if(this.state===Po){const g=d.getPreviousTouchPointerDistance();this.zoomDelta+=p-g,h.visible=!1}else this.state===xr&&(h.visible=u)}))),this.dispatchEvent(o0))},r=c=>{if(!this.enabled)return;const{pointerTracker:h}=this;h.deletePointer(c),h.getPointerType()==="touch"&&h.getPointerCount()===0&&e.releasePointerCapture(c.pointerId),this.resetState(),this.needsUpdate=!0},a=c=>{if(!this.enabled)return;c.preventDefault();const{pointerTracker:h}=this;h.setHoverEvent(c),h.updatePointer(c),this.dispatchEvent(a0);let u;switch(c.deltaMode){case 2:u=c.deltaY*800;break;case 1:u=c.deltaY*40;break;case 0:u=c.deltaY;break}const d=Math.sign(u),f=Math.abs(u);this.zoomDelta-=.25*d*f,this.needsUpdate=!0,this._lastUsedState=Po,this.dispatchEvent(l0)},l=c=>{if(!this.enabled)return;const{pointerTracker:h}=this;c.buttons!==h.getPointerButtons()&&(h.deletePointer(c),this.resetState())};e.addEventListener("contextmenu",t),e.addEventListener("pointerdown",n),e.addEventListener("pointermove",s),e.addEventListener("pointerup",r),e.addEventListener("wheel",a,{passive:!1}),e.addEventListener("pointerenter",l),this._detachCallback=()=>{e.removeEventListener("contextmenu",t),e.removeEventListener("pointerdown",n),e.removeEventListener("pointermove",s),e.removeEventListener("pointerup",r),e.removeEventListener("wheel",a),e.removeEventListener("pointerenter",l)}}getUpDirection(e,t){t.copy(this.up)}getCameraUpDirection(e){this.getUpDirection(this.camera.position,e)}getPivotPoint(e){let t=null;this._lastUsedState===Po?this._zoomPointWasSet&&(t=e.copy(this.zoomPoint)):(this._lastUsedState===xr||this._lastUsedState===Ar)&&(t=e.copy(this.pivotPoint));const{camera:n,raycaster:i}=this;t!==null&&(pt.copy(t).project(n),(pt.x<-1||pt.x>1||pt.y<-1||pt.y>1)&&(t=null)),ui(i,{x:0,y:0},n);const s=this._raycast(i);return s&&(t===null||s.distance<t.distanceTo(i.ray.origin))&&(t=e.copy(s.point)),t}detach(){this.domElement=null,this._detachCallback&&(this._detachCallback(),this._detachCallback=null,this.pointerTracker.reset())}resetState(){this.state!==Ai&&this.dispatchEvent(l0),this.state=Ai,this.pivotMesh.removeFromParent(),this.pivotMesh.visible=this.enabled,this.actionHeightOffset=0}setState(e=this.state,t=!0){this.state!==e&&(this.state===Ai&&t&&this.dispatchEvent(a0),this.pivotMesh.visible=this.enabled,this.dragInertia.set(0,0,0),this.rotationInertia.set(0,0),this.inertiaStableFrames=0,this.state=e,e!==Ai&&e!==cf&&(this._lastUsedState=e))}update(e=Math.min(this.clock.getDelta(),64/1e3)){if(!this.enabled||!this.camera||e===0)return;const{camera:t,cameraRadius:n,pivotPoint:i,up:s,state:r,adjustHeight:a}=this;t.updateMatrixWorld(),this.getCameraUpDirection(yn),this._upInitialized||(this._upInitialized=!0,this.up.copy(yn));const l=this._inertiaNeedsUpdate();if(this.needsUpdate||l){const u=this.zoomDelta;this._updateZoom(),this._updatePosition(e),this._updateRotation(e),r===Ar||r===xr?(Ia.set(0,0,-1).transformDirection(t.matrixWorld),this.inertiaTargetDistance=pt.copy(this.pivotPoint).sub(t.position).dot(Ia)):r===Ai&&this._updateInertia(e),(r!==Ai||u!==0||l)&&this.dispatchEvent(o0),this.needsUpdate=!1}const c=t.isOrthographicCamera?null:a&&this._getPointBelowCamera()||null,h=t.isOrthographicCamera?i:c&&c.point||null;if(this.getCameraUpDirection(yn),this._setFrame(yn,h),(this.state===Ar||this.state===xr)&&this.actionHeightOffset!==0){const{actionHeightOffset:u}=this;t.position.addScaledVector(s,-u),i.addScaledVector(s,-u),c&&(c.distance-=u)}if(this.actionHeightOffset=0,c){const u=c.distance;if(u<n){const d=n-u;t.position.addScaledVector(s,d),i.addScaledVector(s,d),this.actionHeightOffset=d}}this.pointerTracker.updateFrame()}adjustCamera(e){const{adjustHeight:t,cameraRadius:n}=this;if(e.isPerspectiveCamera){this.getUpDirection(e.position,yn);const i=t&&this._getPointBelowCamera(e.position,yn)||null;if(i){const s=i.distance;s<n&&e.position.addScaledVector(yn,n-s)}}}dispose(){this.detach()}_updateInertia(e){const{rotationInertia:t,pivotPoint:n,dragInertia:i,enableDamping:s,dampingFactor:r,camera:a,cameraRadius:l,minDistance:c,inertiaTargetDistance:h}=this;if(!this.enableDamping||this.inertiaStableFrames>1){i.set(0,0,0),t.set(0,0,0);return}const u=Math.pow(2,-e/r),d=Math.max(a.near,l,c,h),m=.25*(2/(2*1e3));if(t.lengthSq()>0){ui(mt,pt.set(0,0,-1),a),mt.applyMatrix4(a.matrixWorldInverse),mt.direction.normalize(),mt.recast(-mt.direction.dot(mt.origin)).at(d/mt.direction.z,pt),pt.applyMatrix4(a.matrixWorld),ui(mt,Wn.set(m,m,-1),a),mt.applyMatrix4(a.matrixWorldInverse),mt.direction.normalize(),mt.recast(-mt.direction.dot(mt.origin)).at(d/mt.direction.z,Wn),Wn.applyMatrix4(a.matrixWorld),pt.sub(n).normalize(),Wn.sub(n).normalize();const g=pt.angleTo(Wn)/e;t.multiplyScalar(u),(t.lengthSq()<g**2||!s)&&t.set(0,0)}if(i.lengthSq()>0){ui(mt,pt.set(0,0,-1),a),mt.applyMatrix4(a.matrixWorldInverse),mt.direction.normalize(),mt.recast(-mt.direction.dot(mt.origin)).at(d/mt.direction.z,pt),pt.applyMatrix4(a.matrixWorld),ui(mt,Wn.set(m,m,-1),a),mt.applyMatrix4(a.matrixWorldInverse),mt.direction.normalize(),mt.recast(-mt.direction.dot(mt.origin)).at(d/mt.direction.z,Wn),Wn.applyMatrix4(a.matrixWorld);const g=pt.distanceTo(Wn)/e;i.multiplyScalar(u),(i.lengthSq()<g**2||!s)&&i.set(0,0,0)}t.lengthSq()>0&&this._applyRotation(t.x*e,t.y*e,n),i.lengthSq()>0&&(a.position.addScaledVector(i,e),a.updateMatrixWorld())}_inertiaNeedsUpdate(){const{rotationInertia:e,dragInertia:t}=this;return e.lengthSq()!==0||t.lengthSq()!==0}_updateZoom(){const{zoomPoint:e,zoomDirection:t,camera:n,minDistance:i,maxDistance:s,pointerTracker:r,domElement:a,minZoom:l,maxZoom:c,zoomSpeed:h,state:u}=this;let d=this.zoomDelta;if(this.zoomDelta=0,!(!r.getLatestPoint(Zt)||d===0&&u!==Po))if(this.rotationInertia.set(0,0),this.dragInertia.set(0,0,0),n.isOrthographicCamera){this._updateZoomDirection();const f=this.zoomPointSet||this._updateZoomPoint();$c.unproject(n);const p=Math.pow(.95,Math.abs(d*.05));let m=d>0?1/Math.abs(p):p;m*=h,m>1?c<n.zoom*m&&(m=1):l>n.zoom*m&&(m=1),n.zoom*=m,n.updateProjectionMatrix(),f&&(Ro(Zt.x,Zt.y,a,df),df.unproject(n),n.position.sub(df).add($c),n.updateMatrixWorld())}else{this._updateZoomDirection();const f=pt.copy(t);if(this.zoomPointSet||this._updateZoomPoint()){const p=e.distanceTo(n.position);if(d<0){const m=Math.min(0,p-s);d=d*p*h*.0025,d=Math.max(d,m)}else{const m=Math.max(0,p-i);d=d*Math.max(p-i,0)*h*.0025,d=Math.min(d,m)}n.position.addScaledVector(t,d),n.updateMatrixWorld()}else{const p=this._getPointBelowCamera();if(p){const m=p.distance;f.set(0,0,-1).transformDirection(n.matrixWorld),n.position.addScaledVector(f,d*m*.01),n.updateMatrixWorld()}}}}_updateZoomDirection(){if(this.zoomDirectionSet)return;const{domElement:e,raycaster:t,camera:n,zoomDirection:i,pointerTracker:s}=this;s.getLatestPoint(Zt),Ro(Zt.x,Zt.y,e,$c),ui(t,$c,n),i.copy(t.ray.direction).normalize(),this.zoomDirectionSet=!0}_updateZoomPoint(){const{camera:e,zoomDirectionSet:t,zoomDirection:n,raycaster:i,zoomPoint:s,pointerTracker:r,domElement:a}=this;if(this._zoomPointWasSet=!1,!t)return!1;e.isOrthographicCamera&&r.getLatestPoint(La)?(Ro(La.x,La.y,a,La),ui(i,La,e)):(i.ray.origin.copy(e.position),i.ray.direction.copy(n),i.near=0,i.far=1/0);const l=this._raycast(i);return l?(s.copy(l.point),this.zoomPointSet=!0,this._zoomPointWasSet=!0,!0):!1}_getPointBelowCamera(e=this.camera.position,t=this.up){const{raycaster:n}=this;n.ray.direction.copy(t).multiplyScalar(-1),n.ray.origin.copy(e).addScaledVector(t,1e5),n.near=0,n.far=1/0;const i=this._raycast(n);return i&&(i.distance-=1e5),i}_updatePosition(e){const{raycaster:t,camera:n,pivotPoint:i,up:s,pointerTracker:r,domElement:a,state:l,dragInertia:c}=this;if(l===Ar){if(r.getCenterPoint(Zt),Ro(Zt.x,Zt.y,a,Zt),i0.setFromNormalAndCoplanarPoint(s,i),ui(t,Zt,n),Math.abs(t.ray.direction.dot(s))<hf){const h=Math.acos(hf);Eo.crossVectors(t.ray.direction,s).normalize(),t.ray.direction.copy(s).applyAxisAngle(Eo,h).multiplyScalar(-1)}if(this.getUpDirection(i,yn),Math.abs(t.ray.direction.dot(yn))<uf){const h=Math.acos(uf);Eo.crossVectors(t.ray.direction,yn).normalize(),t.ray.direction.copy(yn).applyAxisAngle(Eo,h).multiplyScalar(-1)}t.ray.intersectPlane(i0,pt)&&(Wn.subVectors(i,pt),n.position.add(Wn),n.updateMatrixWorld(),Wn.multiplyScalar(1/e),r.getMoveDistance()/e<2*window.devicePixelRatio?this.inertiaStableFrames++:(c.copy(Wn),this.inertiaStableFrames=0))}}_updateRotation(e){const{pivotPoint:t,pointerTracker:n,domElement:i,state:s,rotationInertia:r}=this;s===xr&&(n.getCenterPoint(Zt),n.getPreviousCenterPoint(s0),Da.subVectors(Zt,s0).multiplyScalar(2*Math.PI/i.clientHeight),this._applyRotation(Da.x,Da.y,t),Da.multiplyScalar(1/e),n.getMoveDistance()/e<2*window.devicePixelRatio?this.inertiaStableFrames++:(r.copy(Da),this.inertiaStableFrames=0))}_applyRotation(e,t,n){if(e===0&&t===0)return;const{camera:i,minAltitude:s,maxAltitude:r,rotationSpeed:a}=this,l=-e*a;let c=t*a;Ia.set(0,0,1).transformDirection(i.matrixWorld),this.getUpDirection(n,yn),pt.crossVectors(yn,Ia).normalize(),n0.set(1,0,0).transformDirection(i.matrixWorld).normalize();const u=Math.sign(pt.dot(n0))*yn.angleTo(Ia);c>0?(c=Math.min(u-s-.01,c),c=Math.max(0,c)):(c=Math.max(u-r,c),c=Math.min(0,c)),Us.setFromAxisAngle(yn,l),Ur(n,Us,Ds),i.matrixWorld.premultiply(Ds),Eo.set(-1,0,0).transformDirection(i.matrixWorld),Us.setFromAxisAngle(Eo,c),Ur(n,Us,Ds),i.matrixWorld.premultiply(Ds),i.matrixWorld.decompose(i.position,i.quaternion,pt)}_setFrame(e,t){const{up:n,camera:i,state:s,zoomPoint:r,zoomDirectionSet:a,zoomPointSet:l,reorientOnDrag:c,scaleZoomOrientationAtEdges:h}=this;i.updateMatrixWorld(),Us.setFromUnitVectors(n,e);const u=s;if(a&&(l||this._updateZoomPoint())){if(this.getUpDirection(r,pt),h){let d=Math.max(pt.dot(n)-.6,0)/.4;d=ue.mapLinear(d,0,.5,0,1),d=Math.min(d,1),i.isOrthographicCamera&&(d*=.1),Us.slerp(EP,1-d)}Ur(r,Us,Ds),i.matrixWorld.premultiply(Ds),i.matrixWorld.decompose(i.position,i.quaternion,pt),this.zoomDirectionSet=!1,this._updateZoomDirection()}else u===Ar&&c&&t&&(Ur(t,Us,Ds),i.matrixWorld.premultiply(Ds),i.matrixWorld.decompose(i.position,i.quaternion,pt));n.copy(e),i.updateMatrixWorld()}_raycast(e){const{scene:t,useFallbackPlane:n,fallbackPlane:i}=this,s=e.intersectObject(t)[0]||null;if(s)return s;if(n){const r=i;if(e.ray.intersectPlane(r,pt))return{point:pt.clone(),distance:e.ray.origin.distanceTo(pt)}}return null}}const c0=new de,Ao=new de,ai=new A,at=new A,is=new A,ln=new A,pf=new A,Zc=new A,h0=new A,Ei=new vt,u0=new A,yr=new A,yt=new ni,mf=new Zu,d0={},Ua=new G,CP=400;class RP extends AP{get ellipsoid(){return this.tilesRenderer?this.tilesRenderer.ellipsoid:null}get tilesGroup(){return this.tilesRenderer?this.tilesRenderer.group:null}constructor(e=null,t=null,n=null,i=null){super(e,t,n),this.isGlobeControls=!0,this._dragMode=0,this._rotationMode=0,this.maxZoom=.01,this.nearMargin=.25,this.farMargin=0,this.useFallbackPlane=!1,this.reorientOnDrag=!1,this.globeInertia=new vt,this.globeInertiaFactor=0,this.setTilesRenderer(i)}setScene(e){e===null&&this.tilesRenderer!==null?super.setScene(this.tilesRenderer.group):super.setScene(e)}getPivotPoint(e){const{camera:t,tilesGroup:n,ellipsoid:i}=this;return ln.set(0,0,-1).transformDirection(t.matrixWorld),yt.origin.copy(t.position),yt.direction.copy(ln),yt.applyMatrix4(n.matrixWorldInverse),lf(yt,i,at),at.applyMatrix4(n.matrixWorld),(super.getPivotPoint(e)===null||e.distanceTo(yt.origin)>at.distanceTo(yt.origin))&&e.copy(at),e}getVectorToCenter(e){const{tilesGroup:t,camera:n}=this;return e.setFromMatrixPosition(t.matrixWorld).sub(n.position)}getDistanceToCenter(){return this.getVectorToCenter(at).length()}getUpDirection(e,t){const{tilesGroup:n,ellipsoid:i}=this;at.copy(e).applyMatrix4(n.matrixWorldInverse),i.getPositionToNormal(at,t),t.transformDirection(n.matrixWorld)}getCameraUpDirection(e){const{tilesGroup:t,ellipsoid:n,camera:i}=this;i.isOrthographicCamera?(this._getVirtualOrthoCameraPosition(at),at.applyMatrix4(t.matrixWorldInverse),n.getPositionToNormal(at,e),e.transformDirection(t.matrixWorld)):this.getUpDirection(i.position,e)}update(e=Math.min(this.clock.getDelta(),64/1e3)){if(!this.enabled||!this.tilesGroup||!this.camera||e===0)return;const{camera:t,pivotMesh:n}=this;this._isNearControls()?this.scaleZoomOrientationAtEdges=this.zoomDelta<0:(this.state!==Ai&&this._dragMode!==1&&this._rotationMode!==1&&(n.visible=!1),this.scaleZoomOrientationAtEdges=!1),super.update(e),this.adjustCamera(t)}adjustCamera(e){super.adjustCamera(e);const{tilesGroup:t,ellipsoid:n,nearMargin:i,farMargin:s}=this,r=Math.max(...n.radius);if(e.isPerspectiveCamera){const a=at.setFromMatrixPosition(t.matrixWorld).sub(e.position).length(),l=i*r,c=ue.clamp((a-r)/l,0,1),h=ue.lerp(1,1e3,c);e.near=Math.max(h,a-r-l),ai.copy(e.position).applyMatrix4(t.matrixWorldInverse),n.getPositionToCartographic(ai,d0);const u=Math.max(n.getPositionElevation(ai),CP),d=n.calculateHorizonDistance(d0.lat,u);e.far=d*2.5+.1+r*s,e.updateProjectionMatrix()}else{this._getVirtualOrthoCameraPosition(e.position,e),e.updateMatrixWorld(),c0.copy(e.matrixWorld).invert(),at.setFromMatrixPosition(t.matrixWorld).applyMatrix4(c0);const a=-at.z;e.near=a-r*(1+i),e.far=a+.1+r*s,e.position.addScaledVector(ln,e.near),e.far-=e.near,e.near=0,e.updateProjectionMatrix(),e.updateMatrixWorld()}}resetState(){super.resetState(),this._dragMode=0,this._rotationMode=0}_updateInertia(e){super._updateInertia(e);const{globeInertia:t,enableDamping:n,dampingFactor:i,camera:s,cameraRadius:r,minDistance:a,inertiaTargetDistance:l,tilesGroup:c}=this;if(!this.enableDamping||this.inertiaStableFrames>1){this.globeInertiaFactor=0,this.globeInertia.identity();return}const h=Math.pow(2,-e/i),u=Math.max(s.near,r,a,l),p=.25*(2/(2*1e3));if(is.setFromMatrixPosition(c.matrixWorld),this.globeInertiaFactor!==0){ui(yt,at.set(0,0,-1),s),yt.applyMatrix4(s.matrixWorldInverse),yt.direction.normalize(),yt.recast(-yt.direction.dot(yt.origin)).at(u/yt.direction.z,at),at.applyMatrix4(s.matrixWorld),ui(yt,ai.set(p,p,-1),s),yt.applyMatrix4(s.matrixWorldInverse),yt.direction.normalize(),yt.recast(-yt.direction.dot(yt.origin)).at(u/yt.direction.z,ai),ai.applyMatrix4(s.matrixWorld),at.sub(is).normalize(),ai.sub(is).normalize(),this.globeInertiaFactor*=h;const m=at.angleTo(ai)/e;(2*Math.acos(t.w)*this.globeInertiaFactor<m||!n)&&(this.globeInertiaFactor=0,t.identity())}this.globeInertiaFactor!==0&&(t.w===1&&(t.x!==0||t.y!==0||t.z!==0)&&(t.w=Math.min(t.w,1-1e-9)),is.setFromMatrixPosition(c.matrixWorld),Ei.identity().slerp(t,this.globeInertiaFactor*e),Ur(is,Ei,Ao),s.matrixWorld.premultiply(Ao),s.matrixWorld.decompose(s.position,s.quaternion,at))}_inertiaNeedsUpdate(){return super._inertiaNeedsUpdate()||this.globeInertiaFactor!==0}_updatePosition(e){if(this.state===Ar){this._dragMode===0&&(this._dragMode=this._isNearControls()?1:-1);const{raycaster:t,camera:n,pivotPoint:i,pointerTracker:s,domElement:r,tilesGroup:a}=this,l=ai,c=Zc;s.getCenterPoint(Ua),Ro(Ua.x,Ua.y,r,Ua),ui(t,Ua,n),t.ray.applyMatrix4(a.matrixWorldInverse);const h=at.copy(i).applyMatrix4(a.matrixWorldInverse).length();mf.radius.setScalar(h),n.isPerspectiveCamera?mf.intersectRay(t.ray,at)||wP(t.ray,h,at):lf(t.ray,mf,at),at.applyMatrix4(a.matrixWorld),is.setFromMatrixPosition(a.matrixWorld),l.subVectors(i,is).normalize(),c.subVectors(at,is).normalize(),Ei.setFromUnitVectors(c,l),Ur(is,Ei,Ao),n.matrixWorld.premultiply(Ao),n.matrixWorld.decompose(n.position,n.quaternion,at),s.getMoveDistance()/e<2*window.devicePixelRatio?this.inertiaStableFrames++:(this.globeInertia.copy(Ei),this.globeInertiaFactor=1/e,this.inertiaStableFrames=0)}this._alignCameraUp(this.up)}_updateRotation(...e){this._rotationMode===1||this._isNearControls()?(this._rotationMode=1,super._updateRotation(...e)):(this.pivotMesh.visible=!1,this._rotationMode=-1),this._alignCameraUp(this.up)}_updateZoom(){const{zoomDelta:e,ellipsoid:t,zoomSpeed:n,zoomPoint:i,camera:s,maxZoom:r,state:a}=this;if(a!==Po&&e===0)return;this.rotationInertia.set(0,0),this.dragInertia.set(0,0,0),this.globeInertia.identity(),this.globeInertiaFactor=0;const l=ue.clamp(ue.mapLinear(Math.abs(e),0,20,0,1),0,1);if(this._isNearControls()||e>0){if(this._updateZoomDirection(),e<0&&(this.zoomPointSet||this._updateZoomPoint())){ln.set(0,0,-1).transformDirection(s.matrixWorld).normalize(),yr.copy(this.up).multiplyScalar(-1),this.getUpDirection(i,u0);const c=ue.clamp(ue.mapLinear(-u0.dot(yr),1,.95,0,1),0,1),h=1-ln.dot(yr),u=s.isOrthographicCamera?.05:1,d=ue.clamp(l*3,0,1),f=Math.min(c*h*u*d,.1);yr.lerpVectors(ln,yr,f).normalize(),Ei.setFromUnitVectors(ln,yr),Ur(i,Ei,Ao),s.matrixWorld.premultiply(Ao),s.matrixWorld.decompose(s.position,s.quaternion,yr),this.zoomDirection.subVectors(i,s.position).normalize()}super._updateZoom()}else if(s.isPerspectiveCamera){const c=this._getPerspectiveTransitionDistance(),h=this._getMaxPerspectiveDistance(),u=ue.mapLinear(this.getDistanceToCenter(),c,h,0,1);this._tiltTowardsCenter(ue.lerp(0,.4,u*l)),this._alignCameraUpToNorth(ue.lerp(0,.2,u*l));const d=this.getDistanceToCenter()-t.radius.x,f=e*d*n*.0025,p=Math.max(f,Math.min(this.getDistanceToCenter()-h,0));this.getVectorToCenter(at).normalize(),this.camera.position.addScaledVector(at,p),this.camera.updateMatrixWorld(),this.zoomDelta=0}else{const c=this._getOrthographicTransitionZoom(),h=this._getMinOrthographicZoom(),u=ue.mapLinear(s.zoom,c,h,0,1);this._tiltTowardsCenter(ue.lerp(0,.4,u*l)),this._alignCameraUpToNorth(ue.lerp(0,.2,u*l));const d=this.zoomDelta,f=Math.pow(.95,Math.abs(d*.05)),p=d>0?1/Math.abs(f):f,m=h/s.zoom,g=Math.max(p*n,Math.min(m,1));s.zoom=Math.min(r,s.zoom*g),s.updateProjectionMatrix(),this.zoomDelta=0,this.zoomDirectionSet=!1}}_alignCameraUpToNorth(e){const{tilesGroup:t}=this;h0.set(0,0,1).transformDirection(t.matrixWorld),this._alignCameraUp(h0,e)}_alignCameraUp(e,t=null){const{camera:n}=this;ln.set(0,0,-1).transformDirection(n.matrixWorld),pf.set(-1,0,0).transformDirection(n.matrixWorld),Zc.crossVectors(e,ln),t===null&&(t=1-Math.abs(ln.dot(e)),t=ue.mapLinear(t,0,1,-.01,1),t=ue.clamp(t,0,1)**2),Zc.lerp(pf,1-t).normalize(),Ei.setFromUnitVectors(pf,Zc),n.quaternion.premultiply(Ei),n.updateMatrixWorld()}_tiltTowardsCenter(e){const{camera:t,tilesGroup:n}=this;ln.set(0,0,-1).transformDirection(t.matrixWorld).normalize(),at.setFromMatrixPosition(n.matrixWorld).sub(t.position).normalize(),at.lerp(ln,1-e).normalize(),Ei.setFromUnitVectors(ln,at),t.quaternion.premultiply(Ei),t.updateMatrixWorld()}_getPerspectiveTransitionDistance(){const{camera:e,ellipsoid:t}=this;if(!e.isPerspectiveCamera)throw new Error;const n=Math.max(...t.radius),i=2*Math.atan(Math.tan(ue.DEG2RAD*e.fov*.5)*e.aspect),s=n/Math.tan(ue.DEG2RAD*e.fov*.5),r=n/Math.tan(i*.5);return Math.max(s,r)}_getMaxPerspectiveDistance(){const{camera:e,ellipsoid:t}=this;if(!e.isPerspectiveCamera)throw new Error;const n=Math.max(...t.radius),i=2*Math.atan(Math.tan(ue.DEG2RAD*e.fov*.5)*e.aspect),s=n/Math.tan(ue.DEG2RAD*e.fov*.5),r=n/Math.tan(i*.5);return 2*Math.max(s,r)}_getOrthographicTransitionZoom(){const{camera:e,ellipsoid:t}=this;if(!e.isOrthographicCamera)throw new Error;const n=e.top-e.bottom,i=e.right-e.left,s=Math.max(n,i),a=2*Math.max(...t.radius);return 2*s/a}_getMinOrthographicZoom(){const{camera:e,ellipsoid:t}=this;if(!e.isOrthographicCamera)throw new Error;const n=e.top-e.bottom,i=e.right-e.left,s=Math.min(n,i),a=2*Math.max(...t.radius);return .7*s/a}_getVirtualOrthoCameraPosition(e,t=this.camera){const{tilesGroup:n,ellipsoid:i}=this;if(!t.isOrthographicCamera)throw new Error;yt.origin.copy(t.position),yt.direction.set(0,0,-1).transformDirection(t.matrixWorld),yt.applyMatrix4(n.matrixWorldInverse),lf(yt,i,ai),ai.applyMatrix4(n.matrixWorld);const s=t.top-t.bottom,r=t.right-t.left,a=Math.max(s,r)/t.zoom;ln.set(0,0,-1).transformDirection(t.matrixWorld);const l=ai.sub(t.position).dot(ln);e.copy(t.position).addScaledVector(ln,l-a*4)}_isNearControls(){const{camera:e}=this;return e.isPerspectiveCamera?this.getDistanceToCenter()<this._getPerspectiveTransitionDistance():e.zoom>this._getOrthographicTransitionZoom()}_raycast(e){const t=super._raycast(e);if(t===null){const{ellipsoid:n,tilesGroup:i}=this;yt.copy(e.ray).applyMatrix4(i.matrixWorldInverse);const s=n.intersectRay(yt,at);return s!==null?{point:s.clone().applyMatrix4(i.matrixWorld)}:null}else return t}}const vn=new A,vr=new A,Mr=new Ss,PP=new A,IP=new A,LP=new A,f0=new vt,DP=new vt;class UP extends en{get animating(){return this._alpha!==0&&this._alpha!==1}get alpha(){return this._target===0?1-this._alpha:this._alpha}get camera(){return this._alpha===0?this.perspectiveCamera:this._alpha===1?this.orthographicCamera:this.transitionCamera}get mode(){return this._target===0?"perspective":"orthographic"}set mode(e){if(e===this.mode)return;const t=this.camera;e==="perspective"?(this._target=0,this._alpha=0):(this._target=1,this._alpha=1),this.dispatchEvent({type:"camera-change",camera:this.camera,prevCamera:t})}constructor(e=new Bt,t=new Ss){super(),this.perspectiveCamera=e,this.orthographicCamera=t,this.transitionCamera=new Bt,this.orthographicPositionalZoom=!0,this.orthographicOffset=50,this.fixedPoint=new A,this.duration=200,this.autoSync=!0,this.easeFunction=n=>n,this._target=0,this._alpha=0,this._clock=new Xu}toggle(){this._target=this._target===1?0:1,this._clock.getDelta(),this.dispatchEvent({type:"toggle"})}update(e=Math.min(this._clock.getDelta(),64/1e3)){this.autoSync&&this.syncCameras();const{perspectiveCamera:t,orthographicCamera:n,transitionCamera:i,camera:s}=this,r=e*1e3;if(this._alpha!==this._target){const h=Math.sign(this._target-this._alpha)*r/this.duration;this._alpha=ue.clamp(this._alpha+h,0,1),this.dispatchEvent({type:"change",alpha:this.alpha})}const a=s;let l=null;this._alpha===0?l=t:this._alpha===1?l=n:(l=i,this._updateTransitionCamera()),a!==l&&(l===i&&this.dispatchEvent({type:"transition-start"}),this.dispatchEvent({type:"camera-change",camera:l,prevCamera:a}),a===i&&this.dispatchEvent({type:"transition-end"}))}syncCameras(){const e=this._getFromCamera(),{perspectiveCamera:t,orthographicCamera:n,transitionCamera:i,fixedPoint:s}=this;if(vn.set(0,0,-1).transformDirection(e.matrixWorld).normalize(),e.isPerspectiveCamera){if(this.orthographicPositionalZoom)n.position.copy(t.position).addScaledVector(vn,-this.orthographicOffset),n.rotation.copy(t.rotation),n.updateMatrixWorld();else{const c=vr.subVectors(s,n.position).dot(vn),h=vr.subVectors(s,t.position).dot(vn);vr.copy(t.position).addScaledVector(vn,h),n.rotation.copy(t.rotation),n.position.copy(vr).addScaledVector(vn,-c),n.updateMatrixWorld()}const r=Math.abs(vr.subVectors(t.position,s).dot(vn)),a=2*Math.tan(ue.DEG2RAD*t.fov*.5)*r,l=n.top-n.bottom;n.zoom=l/a,n.updateProjectionMatrix()}else{const r=Math.abs(vr.subVectors(n.position,s).dot(vn)),l=(n.top-n.bottom)/n.zoom*.5/Math.tan(ue.DEG2RAD*t.fov*.5);t.rotation.copy(n.rotation),t.position.copy(n.position).addScaledVector(vn,r).addScaledVector(vn,-l),t.updateMatrixWorld(),this.orthographicPositionalZoom&&(n.position.copy(t.position).addScaledVector(vn,-this.orthographicOffset),n.updateMatrixWorld())}i.position.copy(t.position),i.rotation.copy(t.rotation)}_getTransitionDirection(){return Math.sign(this._target-this._alpha)}_getToCamera(){const e=this._getTransitionDirection();return e===0?this._target===0?this.perspectiveCamera:this.orthographicCamera:e>0?this.orthographicCamera:this.perspectiveCamera}_getFromCamera(){const e=this._getTransitionDirection();return e===0?this._target===0?this.perspectiveCamera:this.orthographicCamera:e>0?this.perspectiveCamera:this.orthographicCamera}_updateTransitionCamera(){const{perspectiveCamera:e,orthographicCamera:t,transitionCamera:n,fixedPoint:i}=this,s=this.easeFunction(this._alpha);vn.set(0,0,-1).transformDirection(t.matrixWorld).normalize(),Mr.copy(t),Mr.position.addScaledVector(vn,t.near),t.far-=t.near,t.near=0,vn.set(0,0,-1).transformDirection(e.matrixWorld).normalize();const r=Math.abs(vr.subVectors(e.position,i).dot(vn)),a=2*Math.tan(ue.DEG2RAD*e.fov*.5)*r,l=DP.slerpQuaternions(e.quaternion,Mr.quaternion,s),c=ue.lerp(e.fov,1,s),h=a*.5/Math.tan(ue.DEG2RAD*c*.5),u=LP.copy(Mr.position).sub(i).applyQuaternion(f0.copy(Mr.quaternion).invert()),d=IP.copy(e.position).sub(i).applyQuaternion(f0.copy(e.quaternion).invert()),f=PP.lerpVectors(d,u,s);f.z-=Math.abs(f.z)-h;const p=-(d.z-f.z),m=-(u.z-f.z),g=ue.lerp(p+e.near,m+Mr.near,s),_=ue.lerp(p+e.far,m+Mr.far,s),y=Math.max(_,0)-Math.max(g,0);n.aspect=e.aspect,n.fov=c,n.near=Math.max(g,y*1e-5),n.far=_,n.position.copy(f).applyQuaternion(l).add(i),n.quaternion.copy(l),n.updateProjectionMatrix(),n.updateMatrixWorld()}}class OP{constructor(){this.creditsCount={}}_adjustAttributions(e,t){const n=this.creditsCount,i=e.split(/;/g);for(let s=0,r=i.length;s<r;s++){const a=i[s];a in n||(n[a]=0),n[a]+=t?1:-1,n[a]<=0&&delete n[a]}}addAttributions(e){this._adjustAttributions(e,!0)}removeAttributions(e){this._adjustAttributions(e,!1)}toString(){return Object.entries(this.creditsCount).sort((t,n)=>{const i=t[1];return n[1]-i}).map(t=>t[0]).join("; ")}}function p0(o){let e=null;return mx(o,t=>{if(t.content&&t.content.uri){const[,n]=t.content.uri.split("?");return e=new URLSearchParams(n).get("session"),!0}return!1}),e}class NP{constructor({apiToken:e,autoRefreshToken:t=!1,logoUrl:n=null,useRecommendedSettings:i=!0}){this.name="GOOGLE_CLOUD_AUTH_PLUGIN",this.priority=-1/0,this.apiToken=e,this.autoRefreshToken=t,this.useRecommendedSettings=i,this.logoUrl=n,this.sessionToken=null,this.tiles=null,this._onLoadCallback=null,this._visibilityChangeCallback=null,this._tokenRefreshPromise=null,this._attributionsManager=new OP,this._logoAttribution={value:"",type:"image",collapsible:!1},this._attribution={value:"",type:"string",collapsible:!0}}init(e){e!=null&&(e.resetFailedTiles(),e.rootURL==null&&(e.rootURL="https://tile.googleapis.com/v1/3dtiles/root.json"),this.useRecommendedSettings&&(e.parseQueue.maxJobs=10,e.downloadQueue.maxJobs=30,e.errorTarget=20),this.tiles=e,this._onLoadCallback=({tileSet:t})=>{this.sessionToken=p0(t.root),e.removeEventListener("load-tile-set",this._onLoadCallback)},this._visibilityChangeCallback=({tile:t,visible:n})=>{const i=t.cached.metadata.asset.copyright||"";n?this._attributionsManager.addAttributions(i):this._attributionsManager.removeAttributions(i)},e.addEventListener("load-tile-set",this._onLoadCallback),e.addEventListener("tile-visibility-change",this._visibilityChangeCallback))}getAttributions(e){this.tiles.visibleTiles.size>0&&(this.logoUrl&&(this._logoAttribution.value=this.logoUrl,e.push(this._logoAttribution)),this._attribution.value=this._attributionsManager.toString(),e.push(this._attribution))}preprocessURL(e){return e=new URL(e),/^http/.test(e.protocol)&&(e.searchParams.append("key",this.apiToken),this.sessionToken!==null&&e.searchParams.append("session",this.sessionToken)),e.toString()}dispose(){const{tiles:e}=this;e.removeEventListener("load-tile-set",this._onLoadCallback),e.removeEventListener("tile-visibility-change",this._visibilityChangeCallback)}async fetchData(e,t){this._tokenRefreshPromise!==null&&(await this._tokenRefreshPromise,e=this.preprocessURL(e));const n=await fetch(e,t);return n.status>=400&&n.status<=499&&this.autoRefreshToken?(await this._refreshToken(t),fetch(this.preprocessURL(e),t)):n}_refreshToken(e){if(this._tokenRefreshPromise===null){const t=new URL(this.tiles.rootURL);t.searchParams.append("key",this.apiToken),this._tokenRefreshPromise=fetch(t,e).then(n=>n.json()).then(n=>{this.sessionToken=p0(n.root),this._tokenRefreshPromise=null}),this._tokenRefreshPromise.catch(n=>{this.tiles.dispatchEvent({type:"load-error",tile:null,error:n,rootURL:t})})}return this._tokenRefreshPromise}}const m0=Symbol("TILE_X"),g0=Symbol("TILE_Y"),gf=Symbol("TILE_LEVEL"),Zh=Symbol("UV_BOUNDS");class FP{get maxLevel(){return this.levels-1}constructor(e={}){const{pixelSize:t=.01,center:n=!1,useRecommendedSettings:i=!0}=e;this.priority=-10,this.tiles=null,this.processQueue=null,this.processCallback=null,this.tileWidth=null,this.tileHeight=null,this.width=null,this.height=null,this.levels=null,this.overlap=0,this.pixelSize=t,this.center=n,this.useRecommendedSettings=i,this.flipY=!1,this.needsUpdate=!0}init(e){const t=new $a;t.priorityCallback=e.downloadQueue.priorityCallback,t.maxJobs=20,this.useRecommendedSettings&&(e.errorTarget=1),this.processCallback=n=>{const i=n[gf],s=n[m0],r=n[g0];for(let a=0;a<2;a++)for(let l=0;l<2;l++){const c=this.expand(i+1,2*s+a,2*r+l);c&&n.children.push(c)}return this.needsUpdate=!0,Promise.resolve()},this.processQueue=t,this.tiles=e}async parseToMesh(e,t,n,i,s){const r=new Blob([e]),a=await createImageBitmap(r,{premultiplyAlpha:"none",colorSpaceConversion:"none",imageOrientation:"flipY"}),l=new Mt(a);l.generateMipmaps=!1,l.colorSpace=At,l.needsUpdate=!0;let c=1,h=1,u=0,d=0,f=0;const p=t.boundingVolume.box;p&&([u,d,f]=p,c=p[3],h=p[7]);const m=new _t(new Ms(2*c,2*h),new un({map:l}));return m.position.set(u,d,f),m}preprocessNode(e,t,n){const{maxLevel:i}=this;e[gf]<i&&(this.processQueue.add(e,this.processCallback),this.needsUpdate=!0)}getTileset(e){const t={asset:{version:"1.1"},geometricError:1e5,root:{refine:"REPLACE",geometricError:1e5,boundingVolume:{},children:[]}},{maxLevel:n,width:i,height:s,tileWidth:r,tileHeight:a,center:l,pixelSize:c}=this,h=2**-n,u=Math.ceil(h*i/r),d=Math.ceil(h*s/a);for(let m=0;m<u;m++)for(let g=0;g<d;g++)t.root.children.push(this.expand(0,m,g));const f=l?-i/2:0,p=l?-s/2:0;return t.root.boundingVolume.box=[c*(f+i/2),c*(p+s/2),0,c*i/2,0,0,0,c*s/2,0,0,0,0],t.root[Zh]=[0,0,1,1],this.tiles.preprocessTileSet(t,e),t}getUrl(e,t,n){}expand(e,t,n){const{maxLevel:i,width:s,height:r,overlap:a,pixelSize:l,center:c,tileWidth:h,tileHeight:u,flipY:d}=this,f=c?l*-s/2:0,p=c?l*-r/2:0,m=2**-(i-e),g=Math.ceil(s*m),_=Math.ceil(r*m);let y=h*t-a,v=u*n-a,x=h+a*2,S=u+a*2;if(y<0&&(x+=y,y=0),v<0&&(S+=v,v=0),y+x>g&&(x-=y+x-g),v+S>_&&(S-=v+S-_),S<=0||x<=0)return null;const T=y+x/2;let w=v+S/2;d&&(w=_-w);const E=s/g,M=r/_,b=E*l*T,I=M*l*w,D=E*l*x/2,U=M*l*S/2;return{refine:"REPLACE",geometricError:l*(Math.max(s/g,r/_)-1),boundingVolume:{box:[b+f,I+p,0,D,0,0,0,U,0,0,0,0]},content:{uri:this.getUrl(e,t,n)},children:[],[m0]:t,[g0]:n,[gf]:e,[Zh]:[ue.mapLinear(b-D,0,l*s,0,1),ue.mapLinear(I-U,0,l*r,0,1),ue.mapLinear(b+D,0,l*s,0,1),ue.mapLinear(I+U,0,l*r,0,1)]}}doTilesNeedUpdate(){return this.needsUpdate?(this.needsUpdate=!1,!0):null}}const _f=new A,xf=new A,Sr=new G,yf=new Ot,vf=new A,jc=new A;class BP extends FP{constructor(e={}){const{shape:t="planar",endCaps:n=!0,...i}=e;super(i),this.shape=t,this.projection="geodetic",this.endCaps=n,this.minLat=-Math.PI/2,this.maxLat=Math.PI/2,this.minLon=-Math.PI,this.maxLon=Math.PI}async parseToMesh(e,t,...n){const{shape:i,projection:s,tiles:r}=this,a=await super.parseToMesh(e,t,...n);if(i==="ellipsoid"){const l=r.ellipsoid,[c,h,u,d]=t[Zh],[f,p,m,g]=t.boundingVolume.region,_=30,y=15,v=Math.ceil((g-p)*ue.RAD2DEG*.25),x=Math.ceil((m-f)*ue.RAD2DEG*.25),S=Math.max(y,v),T=Math.max(_,x),w=new Ms(1,1,T,S),{position:E,normal:M,uv:b}=w.attributes,I=E.count;t.cached.boundingVolume.getSphere(yf);for(let D=0;D<I;D++){_f.fromBufferAttribute(E,D),xf.fromBufferAttribute(M,D),Sr.fromBufferAttribute(b,D);const U=ue.mapLinear(Sr.x,0,1,f,m);let O=ue.mapLinear(Sr.y,0,1,p,g);if(s==="mercator"&&Sr.y!==0&&Sr.y!==1){const V=this.mercatorToLatitude(1),F=1/S,$=ue.mapLinear(Sr.y-F,0,1,p,g),H=ue.mapLinear(Sr.y+F,0,1,p,g);O>V&&$<V&&(O=V),O<-V&&H>-V&&(O=-V)}if(l.getCartographicToPosition(O,U,0,_f).sub(yf.center),l.getCartographicToNormal(O,U,xf),E.setXYZ(D,..._f),M.setXYZ(D,...xf),s==="mercator"){const V=ue.mapLinear(this.longitudeToMercator(U),c,u,0,1),F=ue.mapLinear(this.latitudeToMercator(O),h,d,0,1);b.setXY(D,V,F)}}a.geometry=w,a.position.copy(yf.center)}return a}preprocessNode(e,...t){super.preprocessNode(e,t);const{shape:n,projection:i,tileWidth:s,tileHeight:r,width:a,height:l,endCaps:c}=this;if(n==="ellipsoid"){const[h,u,d,f]=e[Zh],p=(d-h)/s,m=(f-u)/r,g=1/a,_=1/l;let y,v,x,S;if(i==="mercator")y=this.mercatorToLatitude(u),v=this.mercatorToLatitude(f),x=this.mercatorToLongitude(h),S=this.mercatorToLongitude(d),c&&(f===1&&(v=Math.PI/2),u===0&&(y=-Math.PI/2));else{const{minLat:U,maxLat:O,minLon:V,maxLon:F}=this;y=ue.lerp(U,O,u),v=ue.lerp(U,O,f),x=ue.lerp(V,F,h),S=ue.lerp(V,F,d)}e.boundingVolume.region=[x,y,S,v,-1,1];const T=y>0!=v>0?0:Math.min(Math.abs(y),Math.abs(v));let w,E;if(i==="mercator"){const U=this.latitudeToMercator(T);[w,E]=this.getMercatorToCartographicDerivative(h,U)}else w=Math.PI,E=2*Math.PI;const[M,b]=this.getCartographicToMeterDerivative(T,S),I=Math.max(p*E*M,m*w*b),D=Math.max(g*E*M,_*w*b);e.geometricError=I-D,delete e.boundingVolume.box,e.parent===null&&(e.geometricError=1e50)}return e}latitudeToMercator(e){const t=Math.log(Math.tan(Math.PI/4+e/2));return 1/2+1*t/(2*Math.PI)}longitudeToMercator(e){return(e+Math.PI)/(2*Math.PI)}mercatorToLatitude(e){const t=ue.mapLinear(e,0,1,-1,1);return 2*Math.atan(Math.exp(t*Math.PI))-Math.PI/2}mercatorToLongitude(e){const{minLon:t,maxLon:n}=this;return ue.mapLinear(e,0,1,t,n)}getMercatorToCartographicDerivative(e,t){let i=e-1e-5,s=t-1e-5;return i<0&&(i=e+1e-5),s<0&&(s=t+1e-5),[Math.abs(this.mercatorToLatitude(t)-this.mercatorToLatitude(s))/1e-5,Math.abs(this.mercatorToLongitude(e)-this.mercatorToLongitude(i))/1e-5]}getCartographicToMeterDerivative(e,t){const{tiles:n}=this,{ellipsoid:i}=n,s=1e-5,r=t+s;let a=e+s;Math.abs(a)>Math.PI/2&&(a=a-s),i.getCartographicToPosition(e,t,0,vf),i.getCartographicToPosition(a,t,0,jc);const l=vf.distanceTo(jc)/s;return i.getCartographicToPosition(e,r,0,jc),[vf.distanceTo(jc)/s,l]}}class kP extends BP{constructor(...e){super(...e),this.name="TMS_TILES_PLUGIN",this.flipY=!1,this.url=null,this.extension=null}loadRootTileSet(){const e=new URL("tilemapresource.xml",this.tiles.rootURL).toString();return this.tiles.invokeOnePlugin(t=>t.fetchData&&t.fetchData(e,this.tiles.fetchOptions)).then(t=>t.text()).then(t=>{const n=new DOMParser().parseFromString(t,"text/xml"),i=n.querySelector("TileFormat"),s=n.querySelector("TileSets"),r=[...s.querySelectorAll("TileSet")].map(g=>({href:parseInt(g.getAttribute("href")),unitsPerPixel:parseFloat(g.getAttribute("units-per-pixel")),order:parseInt(g.getAttribute("order"))})).sort((g,_)=>g.order-_.order),a=parseInt(i.getAttribute("width")),l=parseInt(i.getAttribute("height")),c=i.getAttribute("extension"),h=s.getAttribute("profile"),u=n.querySelector("SRS").textContent;switch(u){case"EPSG:3857":case"EPSG:4326":break;default:throw new Error(`TMSTilesPlugin: ${u} SRS not supported.`)}let d=1,f=1;switch(h){case"geodetic":case"global-geodetic":d=2,f=1,this.projection="geodetic";break;case"mercator":case"global-mercator":this.projection="mercator";break;case"local":case"none":default:throw new Error(`TMSTilesPlugin: Profile ${h} not supported.`)}const p=r.length,m=p-1;return this.extension=c,this.width=d*a*2**m,this.height=f*l*2**m,this.tileWidth=a,this.tileHeight=l,this.levels=p,this.url=this.tiles.rootURL,this.tileSets=r,this.getTileset(e)})}getUrl(e,t,n){const{url:i,extension:s,tileSets:r}=this;return new URL(`${parseInt(r[e].href)}/${t}/${n}.${s}`,i).toString()}}function Mf(o){return o>>1^-(o&1)}class zP extends Al{constructor(...e){super(...e),this.fetchOptions.header={Accept:"application/vnd.quantized-mesh,application/octet-stream;q=0.9"}}loadAsync(...e){const{fetchOptions:t}=this;return t.header=t.header||{},t.header.Accept="application/vnd.quantized-mesh,application/octet-stream;q=0.9",t.header.Accept+=";extensions=octvertexnormals-watermask-metadata",super.loadAsync(...e)}parse(e){let t=0;const n=new DataView(e),i=()=>{const Y=n.getFloat64(t,!0);return t+=8,Y},s=()=>{const Y=n.getFloat32(t,!0);return t+=4,Y},r=()=>{const Y=n.getUint32(t,!0);return t+=4,Y},a=()=>{const Y=n.getUint8(t);return t+=1,Y},l=(Y,fe)=>{const he=new fe(e,t,Y);return t+=Y*fe.BYTES_PER_ELEMENT,he},c={center:[i(),i(),i()],minHeight:s(),maxHeight:s(),sphereCenter:[i(),i(),i()],sphereRadius:i(),horizonOcclusionPoint:[i(),i(),i()]},h=r(),u=l(h,Uint16Array),d=l(h,Uint16Array),f=l(h,Uint16Array),p=new Float32Array(h),m=new Float32Array(h),g=new Float32Array(h);let _=0,y=0,v=0;const x=32767;for(let Y=0;Y<h;++Y)_+=Mf(u[Y]),y+=Mf(d[Y]),v+=Mf(f[Y]),p[Y]=_/x,m[Y]=y/x,g[Y]=v/x;const S=h>65536,T=S?Uint32Array:Uint16Array;S?t=Math.ceil(t/4)*4:t=Math.ceil(t/2)*2;const w=r(),E=l(w*3,T);let M=0;for(var b=0;b<E.length;++b){const Y=E[b];E[b]=M-Y,Y===0&&++M}const I=(Y,fe)=>m[fe]-m[Y],D=(Y,fe)=>-I(Y,fe),U=(Y,fe)=>p[Y]-p[fe],O=(Y,fe)=>-U(Y,fe),V=r(),F=l(V,T);F.sort(I);const $=r(),H=l($,T);H.sort(U);const te=r(),ne=l(te,T);ne.sort(D);const se=r(),Me=l(se,T);Me.sort(O);const Fe={westIndices:F,southIndices:H,eastIndices:ne,northIndices:Me},q={};for(;t<n.byteLength;){const Y=a(),fe=r();if(Y===1){const he=l(h*2,Uint8Array),we=new Float32Array(h*3);for(let Ie=0;Ie<h;Ie++){let Re=he[2*Ie+0]/255*2-1,ct=he[2*Ie+1]/255*2-1;const Ke=1-(Math.abs(Re)+Math.abs(ct));if(Ke<0){const L=Re;Re=(1-Math.abs(ct))*_0(L),ct=(1-Math.abs(L))*_0(ct)}const Be=Math.sqrt(Re*Re+ct*ct+Ke*Ke);we[3*Ie+0]=Re/Be,we[3*Ie+1]=ct/Be,we[3*Ie+2]=Ke/Be}q.octvertexnormals={extensionId:Y,normals:we}}else if(Y===2){const he=fe===1?1:256,we=l(he*he,Uint8Array);q.watermask={extensionId:Y,mask:we,size:he}}else if(Y===4){const he=r(),we=l(he,Uint8Array),Ie=new TextDecoder().decode(we);q.metadata={extensionId:Y,json:JSON.parse(Ie)}}}return{header:c,indices:E,vertexData:{u:p,v:m,height:g},edgeIndices:Fe,extensions:q}}}function _0(o){return o<0?-1:1}const x0=new A,Kc=new bn,wt=new A,Os=new A;class VP extends zP{constructor(e=no){super(),this.manager=e,this.ellipsoid=new Zu,this.skirtLength=1e3,this.smoothSkirtNormals=!0,this.solid=!1,this.minLat=-Math.PI/2,this.maxLat=Math.PI/2,this.minLon=-Math.PI,this.maxLon=Math.PI}parse(e){const{ellipsoid:t,solid:n,skirtLength:i,smoothSkirtNormals:s,minLat:r,maxLat:a,minLon:l,maxLon:c}=this,{header:h,indices:u,vertexData:d,edgeIndices:f,extensions:p}=super.parse(e),m=new ze,g=new ca,_=new _t(m,g);_.position.set(...h.center);const y="octvertexnormals"in p,v=d.u.length,x=[],S=[],T=[],w=[];for(let D=0;D<v;D++)M(D,wt),b(wt.x,wt.y,wt.z,Os),S.push(wt.x,wt.y),x.push(...Os);for(let D=0,U=u.length;D<U;D++)T.push(u[D]);if(y){const D=p.octvertexnormals.normals;for(let U=0,O=D.length;U<O;U++)w.push(D[U])}if(n){const D=x.length/3;for(let U=0;U<v;U++)M(U,wt),b(wt.x,wt.y,wt.z,Os,-i),S.push(wt.x,wt.y),x.push(...Os);for(let U=u.length-1;U>=0;U--)T.push(u[U]+D);if(y){const U=p.octvertexnormals.normals;for(let O=0,V=U.length;O<V;O++)w.push(-U[O])}}if(i>0){const{westIndices:D,eastIndices:U,southIndices:O,northIndices:V}=f;let F;const $=I(D);F=x.length/3,S.push(...$.uv),x.push(...$.positions);for(let se=0,Me=$.indices.length;se<Me;se++)T.push($.indices[se]+F);const H=I(U);F=x.length/3,S.push(...H.uv),x.push(...H.positions);for(let se=0,Me=H.indices.length;se<Me;se++)T.push(H.indices[se]+F);const te=I(O);F=x.length/3,S.push(...te.uv),x.push(...te.positions);for(let se=0,Me=te.indices.length;se<Me;se++)T.push(te.indices[se]+F);const ne=I(V);F=x.length/3,S.push(...ne.uv),x.push(...ne.positions);for(let se=0,Me=ne.indices.length;se<Me;se++)T.push(ne.indices[se]+F);y&&(w.push(...$.normals),w.push(...H.normals),w.push(...te.normals),w.push(...ne.normals))}for(let D=0,U=x.length;D<U;D+=3)x[D+0]-=h.center[0],x[D+1]-=h.center[1],x[D+2]-=h.center[2];const E=x.length/3>65535?new Uint32Array(T):new Uint16Array(T);if(m.setIndex(new ke(E,1,!1)),m.setAttribute("position",new ke(new Float32Array(x),3,!1)),m.setAttribute("uv",new ke(new Float32Array(S),2,!1)),y&&m.setAttribute("normal",new ke(new Float32Array(w),3,!1)),"watermask"in p){const{mask:D,size:U}=p.watermask,O=new Uint8Array(2*U*U);for(let F=0,$=D.length;F<$;F++){const H=D[F]===255?0:255;O[2*F+0]=H,O[2*F+1]=H}const V=new jn(O,U,U,Il,Jn);V.flipY=!0,V.minFilter=jx,V.magFilter=Tt,V.needsUpdate=!0,g.roughnessMap=V}return _.userData.minHeight=h.minHeight,_.userData.maxHeight=h.maxHeight,"metadata"in p&&(_.userData.metadata=p.metadata.json),_;function M(D,U){return U.x=d.u[D],U.y=d.v[D],U.z=d.height[D],U}function b(D,U,O,V,F=0){const $=ue.lerp(h.minHeight,h.maxHeight,O),H=ue.lerp(l,c,D),te=ue.lerp(r,a,U);return t.getCartographicToPosition(te,H,$+F,V),V}function I(D){const U=[],O=[],V=[],F=[],$=[];for(let ne=0,se=D.length;ne<se;ne++)M(D[ne],wt),U.push(wt.x,wt.y),V.push(wt.x,wt.y),b(wt.x,wt.y,wt.z,Os),O.push(...Os),b(wt.x,wt.y,wt.z,Os,-i),F.push(...Os);const H=D.length-1;for(let ne=0;ne<H;ne++){const se=ne,Me=ne+1,Fe=ne+D.length,q=ne+D.length+1;$.push(se,Fe,Me),$.push(Me,Fe,q)}let te=null;if(y){const ne=(O.length+F.length)/3;if(s){te=new Array(ne*3);const se=p.octvertexnormals.normals,Me=te.length/2;for(let Fe=0,q=ne/2;Fe<q;Fe++){const Y=D[Fe],fe=3*Fe,he=se[3*Y+0],we=se[3*Y+1],Ie=se[3*Y+2];te[fe+0]=he,te[fe+1]=we,te[fe+2]=Ie,te[Me+fe+0]=he,te[Me+fe+1]=we,te[Me+fe+2]=Ie}}else{te=[],Kc.a.fromArray(O,0),Kc.b.fromArray(F,0),Kc.c.fromArray(O,3),Kc.getNormal(x0);for(let se=0;se<ne;se++)te.push(...x0)}}return{uv:[...U,...V],positions:[...O,...F],indices:$,normals:te}}}}const y0=Symbol("TILE_X"),v0=Symbol("TILE_Y"),Sf=Symbol("TILE_LEVEL"),M0=1e5,S0=new A;function HP(o,e,t,n){const{minzoom:i,maxzoom:s,available:r}=o;if(e>=i&&e<=s&&e<r.length){const a=r[e];for(let l=0,c=a.length;l<c;l++){const{startX:h,startY:u,endX:d,endY:f}=a[l];if(t>=h&&t<=d&&n>=u&&n<=f)return!0}}return!1}class GP{get maxLevel(){return this.layer.available.length}constructor({useRecommendedSettings:e=!0,skirtLength:t=1e3,smoothSkirtNormals:n=!0,solid:i=!1}){this.name="QUANTIZED_MESH_PLUGIN",this.tiles=null,this.layer=null,this.processQueue=null,this.useRecommendedSettings=e,this.skirtLength=t,this.smoothSkirtNormals=n,this.solid=i,this.needsUpdate=!0}init(e){const t=new $a;t.priorityCallback=e.downloadQueue.priorityCallback,t.maxJobs=20,e.fetchOptions.header=e.fetchOptions.header||{},e.fetchOptions.header.Accept="application/vnd.quantized-mesh,application/octet-stream;q=0.9",this.useRecommendedSettings&&(e.errorTarget=2),this.tiles=e,this.processQueue=t,this.processCallback=n=>{const i=n[Sf],s=n[y0],r=n[v0],[a,l,c,h,u,d]=n.boundingVolume.region,f=(c-a)/2,p=(h-l)/2;for(let m=0;m<2;m++)for(let g=0;g<2;g++){const _=[a+f*m,l+p*g,a+f*m+f,l+p*g+p,u,d],y=this.expand(i+1,2*s+m,2*r+g,_);y&&n.children.push(y)}}}preprocessNode(e,t,n){const{maxLevel:i}=this;e[Sf]<i&&(this.processQueue.add(e,this.processCallback),this.needsUpdate=!0)}loadRootTileSet(){const{tiles:e}=this;let t=new URL("layer.json",e.rootURL);return e.invokeAllPlugins(n=>t=n.preprocessURL?n.preprocessURL(t,null):t),e.invokeOnePlugin(n=>n.fetchData&&n.fetchData(t,this.tiles.fetchOptions)).then(n=>n.json()).then(n=>{this.layer=n,n.extensions.length>0&&(e.fetchOptions.header.Accept+=`;extensions=${n.extensions.join("-")}`);const{bounds:i}=n,s=ue.DEG2RAD*i[0],r=ue.DEG2RAD*i[1],a=ue.DEG2RAD*i[2],l=ue.DEG2RAD*i[3],c={asset:{version:"1.1"},geometricError:1/0,root:{refine:"REPLACE",geometricError:1/0,boundingVolume:{region:[s,r,a,l,-1e5,M0]},children:[]}},h=n.projection==="EPSG:4326"?2:1;for(let d=0;d<h;d++){const f=(a-s)/h,p=[s+f*d,r,s+f*d+f,l,-1e5,M0],m=this.expand(0,d,0,p);m&&c.root.children.push(m)}let u=e.rootURL;return e.invokeAllPlugins(d=>u=d.preprocessURL?d.preprocessURL(u,null):u),this.tiles.preprocessTileSet(c,u),c})}expand(e,t,n,i){if(!HP(this.layer,e,t,n))return null;const s=this.layer.tiles[0].replace(/{\s*z\s*}/g,e).replace(/{\s*x\s*}/g,t).replace(/{\s*y\s*}/g,n).replace(/{\s*version\s*}/g,1),{tiles:r}=this,a=r.ellipsoid,[,l,,c,,h]=i,u=l>0!=c>0?0:Math.min(Math.abs(l),Math.abs(c));a.getCartographicToPosition(u,0,h,S0),S0.z=0;const d=this.layer.projection==="EPSG:4326"?2:1,m=Math.max(...a.radius)*2*Math.PI*.25/(65*d)/2**e;return{[Sf]:e,[y0]:t,[v0]:n,refine:"REPLACE",geometricError:m,boundingVolume:{region:i},content:{uri:s},children:[]}}doTilesNeedUpdate(){return this.needsUpdate?(this.needsUpdate=!1,!0):null}parseToMesh(e,t){const n=this.tiles.ellipsoid,[i,s,r,a]=t.boundingVolume.region,l=new VP(this.tiles.manager);l.minLat=s,l.maxLat=a,l.minLon=i,l.maxLon=r,l.ellipsoid.copy(n),l.solid=this.solid,l.smoothSkirtNormals=this.smoothSkirtNormals,l.skirtLength=this.skirtLength;const c=l.parse(e),{minHeight:h,maxHeight:u,metadata:d}=c.userData;return t.boundingVolume.region[4]=h,t.boundingVolume.region[5]=u,t.cached.boundingVolume.setRegionData(n,...t.boundingVolume.region),d&&"geometricerror"in d&&(t.geometricError=d.geometricerror),c}}class WP{constructor({apiToken:e,assetId:t=null,autoRefreshToken:n=!1,useRecommendedSettings:i=!0}){this.name="CESIUM_ION_AUTH_PLUGIN",this.priority=-1/0,this.apiToken=e,this.assetId=t,this.autoRefreshToken=n,this.useRecommendedSettings=i,this.tiles=null,this.endpointURL=null,this._bearerToken=null,this._tileSetVersion=-1,this._tokenRefreshPromise=null,this._attributions=[],this._disposed=!1}init(e){this.assetId!==null&&(e.rootURL=`https://api.cesium.com/v1/assets/${this.assetId}/endpoint`),this.tiles=e,this.endpointURL=e.rootURL,e.resetFailedTiles()}loadRootTileSet(){return this._refreshToken().then(()=>this.tiles.invokeOnePlugin(e=>e!==this&&e.loadRootTileSet&&e.loadRootTileSet()))}preprocessURL(e){return e=new URL(e),/^http/.test(e.protocol)&&this._tileSetVersion!=-1&&e.searchParams.append("v",this._tileSetVersion),e.toString()}fetchData(e,t){return this.tiles.getPluginByName("GOOGLE_CLOUD_AUTH_PLUGIN")!==null?null:Promise.resolve().then(async()=>{this._tokenRefreshPromise!==null&&(await this._tokenRefreshPromise,e=this.preprocessURL(e));const i=await fetch(e,t);return i.status>=400&&i.status<=499&&this.autoRefreshToken?(await this._refreshToken(t),fetch(this.preprocessURL(e),t)):i})}getAttributions(e){this.tiles.visibleTiles.size>0&&e.push(...this._attributions)}_refreshToken(e){if(this._tokenRefreshPromise===null){const t=new URL(this.endpointURL);t.searchParams.append("access_token",this.apiToken),this._tokenRefreshPromise=fetch(t,e).then(n=>{if(this._disposed)return null;if(!n.ok)throw new Error(`CesiumIonAuthPlugin: Failed to load data with error code ${n.status}`);return n.json()}).then(n=>{if(this._disposed)return null;const i=this.tiles;if("externalType"in n){const s=new URL(n.options.url);i.rootURL=n.options.url,i.registerPlugin(new NP({apiToken:s.searchParams.get("key"),autoRefreshToken:this.autoRefreshToken,useRecommendedSettings:this.useRecommendedSettings}))}else{if(n.type==="TERRAIN"&&i.getPluginByName("QUANTIZED_MESH_PLUGIN")===null?i.registerPlugin(new GP({useRecommendedSettings:this.useRecommendedSettings})):n.type==="IMAGERY"&&i.getPluginByName("TMS_TILES_PLUGIN")===null&&i.registerPlugin(new kP({useRecommendedSettings:this.useRecommendedSettings,shape:"ellipsoid"})),i.rootURL=n.url,i.fetchOptions.headers=i.fetchOptions.headers||{},i.fetchOptions.headers.Authorization=`Bearer ${n.accessToken}`,t.searchParams.has("v")&&this._tileSetVersion===-1){const s=new URL(n.url);this._tileSetVersion=s.searchParams.get("v")}this._bearerToken=n.accessToken,n.attributions&&(this._attributions=n.attributions.map(s=>({value:s.html,type:"html",collapsible:s.collapsible})))}return this._tokenRefreshPromise=null,n}),this._tokenRefreshPromise.catch(n=>{this.tiles.dispatchEvent({type:"load-error",tile:null,error:n,url:t})})}return this._tokenRefreshPromise}dispose(){this._disposed=!0}}const bf=new de;class XP{constructor(){this.name="UPDATE_ON_CHANGE_PLUGIN",this.tiles=null,this.needsUpdate=!1,this.cameraMatrices=new Map}init(e){this.tiles=e,this._needsUpdateCallback=()=>{this.needsUpdate=!0},this._onCameraAdd=({camera:t})=>{this.needsUpdate=!0,this.cameraMatrices.set(t,new de)},this._onCameraDelete=({camera:t})=>{this.needsUpdate=!0,this.cameraMatrices.delete(t)},e.addEventListener("needs-update",this._needsUpdateCallback),e.addEventListener("add-camera",this._onCameraAdd),e.addEventListener("delete-camera",this._onCameraDelete),e.addEventListener("camera-resolution-change",this._needsUpdateCallback),e.cameras.forEach(t=>{this._onCameraAdd({camera:t})})}doTilesNeedUpdate(){const e=this.tiles;let t=!1;this.cameraMatrices.forEach((i,s)=>{bf.copy(e.group.matrixWorld).premultiply(s.matrixWorldInverse).premultiply(s.projectionMatrixInverse),t=t||!bf.equals(i),i.copy(bf)});const n=this.needsUpdate;return this.needsUpdate=!1,n||t}preprocessNode(){this.needsUpdate=!0}dispose(){const e=this.tiles;e.removeEventListener("camera-resolution-change",this._needsUpdateCallback),e.removeEventListener("load-content",this._needsUpdateCallback),e.removeEventListener("camera-add",this._onCameraAdd),e.removeEventListener("camera-delete",this._onCameraDelete)}}const b0=new A;function Oa(o,e){if(o.isInterleavedBufferAttribute||o.array instanceof e)return o;const n=e===Int8Array||e===Int16Array||e===Int32Array?-1:0,i=new e(o.count*o.itemSize),s=new ke(i,o.itemSize,!0),r=o.itemSize,a=o.count;for(let l=0;l<a;l++)for(let c=0;c<r;c++){const h=ue.clamp(o.getComponent(l,c),n,1);s.setComponent(l,c,h)}return s}function qP(o,e=Int16Array){const t=o.geometry,n=t.attributes,i=n.position;if(i.isInterleavedBufferAttribute||i.array instanceof e)return i;const s=new e(i.count*i.itemSize),r=new ke(s,i.itemSize,!1),a=i.itemSize,l=i.count;t.computeBoundingBox();const c=t.boundingBox,{min:h,max:u}=c,d=2**(8*e.BYTES_PER_ELEMENT-1)-1,f=-d;for(let p=0;p<l;p++)for(let m=0;m<a;m++){const g=m===0?"x":m===1?"y":"z",_=h[g],y=u[g],v=ue.mapLinear(i.getComponent(p,m),_,y,f,d);r.setComponent(p,m,v)}c.getCenter(b0),o.position.add(b0),o.scale.x*=.5*(u.x-h.x)/d,o.scale.y*=.5*(u.y-h.y)/d,o.scale.z*=.5*(u.z-h.z)/d,n.position=r,o.geometry.boundingBox=null,o.geometry.boundingSphere=null,o.updateMatrixWorld()}class YP{constructor(e){this._options={generateNormals:!1,disableMipmaps:!0,compressIndex:!0,compressNormals:!1,compressUvs:!1,compressPosition:!1,uvType:Int8Array,normalType:Int8Array,positionType:Int16Array,...e},this.name="TILES_COMPRESSION_PLUGIN",this.priority=-100}processTileModel(e,t){const{generateNormals:n,disableMipmaps:i,compressIndex:s,compressUvs:r,compressNormals:a,compressPosition:l,uvType:c,normalType:h,positionType:u}=this._options;e.traverse(d=>{if(d.material&&i){const f=d.material;for(const p in f){const m=f[p];m&&m.isTexture&&m.generateMipmaps&&(m.generateMipmaps=!1,m.minFilter=Tt)}}if(d.geometry){const f=d.geometry,p=f.attributes;if(r){const{uv:m,uv1:g,uv2:_,uv3:y}=p;m&&(p.uv=Oa(m,c)),g&&(p.uv1=Oa(g,c)),_&&(p.uv2=Oa(_,c)),y&&(p.uv3=Oa(y,c))}if(n&&!p.normals&&f.computeVertexNormals(),a&&p.normals&&(p.normals=Oa(p.normals,h)),l&&qP(d,u),s&&f.index){const m=p.position.count,g=f.index,_=m>65535?Uint32Array:m>255?Uint16Array:Uint8Array;if(!(g.array instanceof _)){const y=new _(f.index.count);y.set(g.array);const v=new ke(y,1);f.setIndex(v)}}}})}}function Kt(o,e,t){return o&&e in o?o[e]:t}function Cv(o){return o!=="BOOLEAN"&&o!=="STRING"&&o!=="ENUM"}function $P(o){return/^FLOAT/.test(o)}function Vl(o){return/^VEC/.test(o)}function Hl(o){return/^MAT/.test(o)}function Rv(o,e,t,n=null){return Hl(t)||Vl(t)?n.fromArray(o,e):o[e]}function rp(o){const{type:e,componentType:t}=o;switch(e){case"SCALAR":return t==="INT64"?0n:0;case"VEC2":return new G;case"VEC3":return new A;case"VEC4":return new st;case"MAT2":return new qu;case"MAT3":return new We;case"MAT4":return new de;case"BOOLEAN":return!1;case"STRING":return"";case"ENUM":return 0}}function T0(o,e){if(e==null)return!1;switch(o){case"SCALAR":return typeof e=="number"||typeof e=="bigint";case"VEC2":return e.isVector2;case"VEC3":return e.isVector3;case"VEC4":return e.isVector4;case"MAT2":return e.isMatrix2;case"MAT3":return e.isMatrix3;case"MAT4":return e.isMatrix4;case"BOOLEAN":return typeof e=="boolean";case"STRING":return typeof e=="string";case"ENUM":return typeof e=="number"||typeof e=="bigint"}throw new Error("ClassProperty: invalid type.")}function xl(o,e=null){switch(o){case"INT8":return Int8Array;case"INT16":return Int16Array;case"INT32":return Int32Array;case"INT64":return BigInt64Array;case"UINT8":return Uint8Array;case"UINT16":return Uint16Array;case"UINT32":return Uint32Array;case"UINT64":return BigUint64Array;case"FLOAT32":return Float32Array;case"FLOAT64":return Float64Array}switch(e){case"BOOLEAN":return Uint8Array;case"STRING":return Uint8Array}throw new Error("ClassProperty: invalid type.")}function ZP(o,e=null){if(o.array){e=e&&Array.isArray(e)?e:[],e.length=o.count;for(let n=0,i=e.length;n<i;n++)e[n]=jh(o,e[n])}else e=jh(o,e);return e}function jh(o,e=null){const t=o.default,n=o.type;if(e=e||rp(o),t===null){switch(n){case"SCALAR":return 0;case"VEC2":return e.set(0,0);case"VEC3":return e.set(0,0,0);case"VEC4":return e.set(0,0,0,0);case"MAT2":return e.identity();case"MAT3":return e.identity();case"MAT4":return e.identity();case"BOOLEAN":return!1;case"STRING":return"";case"ENUM":return""}throw new Error("ClassProperty: invalid type.")}else if(Hl(n))e.fromArray(t);else if(Vl(n))e.fromArray(t);else return t}function jP(o,e){if(o.noData===null)return e;const t=o.noData,n=o.type;if(Array.isArray(e))for(let r=0,a=e.length;r<a;r++)e[r]=i(e[r]);else e=i(e);return e;function i(r){return s(r)&&(r=jh(o,r)),r}function s(r){if(Hl(n)){const a=r.elements;for(let l=0,c=t.length;l<c;l++)if(t[l]!==a[l])return!1;return!0}else if(Vl(n)){for(let a=0,l=t.length;a<l;a++)if(t[a]!==r.getComponent(a))return!1;return!0}else return t===r}}function KP(o,e){switch(o){case"INT8":return Math.max(e/127,-1);case"INT16":return Math.max(e,32767,-1);case"INT32":return Math.max(e/2147483647,-1);case"INT64":return Math.max(Number(e)/9223372036854776e3,-1);case"UINT8":return e/255;case"UINT16":return e/65535;case"UINT32":return e/4294967295;case"UINT64":return Number(e)/18446744073709552e3}}function JP(o,e){const{type:t,componentType:n,scale:i,offset:s,normalized:r}=o;if(Array.isArray(e))for(let u=0,d=e.length;u<d;u++)e[u]=a(e[u]);else e=a(e);return e;function a(u){return Hl(t)?u=c(u):Vl(t)?u=l(u):u=h(u),u}function l(u){return u.x=h(u.x),u.y=h(u.y),"z"in u&&(u.z=h(u.z)),"w"in u&&(u.w=h(u.w)),u}function c(u){const d=u.elements;for(let f=0,p=d.length;f<p;f++)d[f]=h(d[f]);return u}function h(u){return r&&(u=KP(n,u)),(r||$P(n))&&(u=u*i+s),u}}function gm(o,e,t=null){if(o.array){Array.isArray(e)||(e=new Array(o.count||0)),e.length=t!==null?t:o.count;for(let n=0,i=e.length;n<i;n++)T0(o.type,e[n])||(e[n]=rp(o))}else T0(o.type,e)||(e=rp(o));return e}function Kh(o,e){for(const t in e)t in o||delete e[t];for(const t in o){const n=o[t];e[t]=gm(n,e[t])}}function QP(o){switch(o){case"ENUM":return 1;case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":return 3;case"VEC4":return 4;case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16;case"BOOLEAN":return-1;case"STRING":return-1;default:return-1}}class ju{constructor(e,t,n=null){this.name=t.name||null,this.description=t.description||null,this.type=t.type,this.componentType=t.componentType||null,this.enumType=t.enumType||null,this.array=t.array||!1,this.count=t.count||0,this.normalized=t.normalized||!1,this.offset=t.offset||0,this.scale=Kt(t,"scale",1),this.max=Kt(t,"max",1/0),this.min=Kt(t,"min",-1/0),this.required=t.required||!1,this.noData=Kt(t,"noData",null),this.default=Kt(t,"default",null),this.semantic=Kt(t,"semantic",null),this.enumSet=null,this.accessorProperty=n,n&&(this.offset=Kt(n,"offset",this.offset),this.scale=Kt(n,"scale",this.scale),this.max=Kt(n,"max",this.max),this.min=Kt(n,"min",this.min)),t.type==="ENUM"&&(this.enumSet=e[this.enumType],this.componentType===null&&(this.componentType=Kt(this.enumSet,"valueType","UINT16")))}shapeToProperty(e,t=null){return gm(this,e,t)}resolveDefaultElement(e){return jh(this,e)}resolveDefault(e){return ZP(this,e)}resolveNoData(e){return jP(this,e)}resolveEnumsToStrings(e){const t=this.enumSet;if(this.type==="ENUM")if(Array.isArray(e))for(let i=0,s=e.length;i<s;i++)e[i]=n(e[i]);else e=n(e);return e;function n(i){const s=t.values.find(r=>r.value===i);return s===null?"":s.name}}adjustValueScaleOffset(e){return Cv(this.type)?JP(this,e):e}}class _m{constructor(e,t={},n={},i=null){this.definition=e,this.class=t[e.class],this.className=e.class,this.enums=n,this.data=i,this.name="name"in e?e.name:null,this.properties=null}getPropertyNames(){return Object.keys(this.class.properties)}includesData(e){return!!this.definition.properties[e]}dispose(){}_initProperties(e=ju){const t={};for(const n in this.class.properties)t[n]=new e(this.enums,this.class.properties[n],this.definition.properties[n]);this.properties=t}}class eI extends ju{constructor(e,t,n=null){super(e,t,n),this.attribute=(n==null?void 0:n.attribute)??null}}class tI extends _m{constructor(...e){super(...e),this.isPropertyAttributeAccessor=!0,this._initProperties(eI)}getData(e,t,n={}){const i=this.properties;Kh(i,n);for(const s in i)n[s]=this.getPropertyValue(s,e,t,n[s]);return n}getPropertyValue(e,t,n,i=null){if(t>=this.count)throw new Error("PropertyAttributeAccessor: Requested index is outside the range of the buffer.");const s=this.properties[e],r=s.type;if(s){if(!this.definition.properties[e])return s.resolveDefault(i)}else throw new Error("PropertyAttributeAccessor: Requested class property does not exist.");i=s.shapeToProperty(i);const a=n.getAttribute(s.attribute.toLowerCase());if(Hl(r)){const l=i.elements;for(let c=0,h=l.length;c<h;c<h)l[c]=a.getComponent(t,c)}else if(Vl(r))i.fromBufferAttribute(a,t);else if(r==="SCALAR"||r==="ENUM")i=a.getX(t);else throw new Error("StructuredMetadata.PropertyAttributeAccessor: BOOLEAN and STRING types are not supported by property attributes.");return i=s.adjustValueScaleOffset(i),i=s.resolveEnumsToStrings(i),i=s.resolveNoData(i),i}}class nI extends ju{constructor(e,t,n=null){super(e,t,n),this.values=(n==null?void 0:n.values)??null,this.valueLength=QP(this.type),this.arrayOffsets=Kt(n,"arrayOffsets",null),this.stringOffsets=Kt(n,"stringOffsets",null),this.arrayOffsetType=Kt(n,"arrayOffsetType","UINT32"),this.stringOffsetType=Kt(n,"stringOffsetType","UINT32")}getArrayLengthFromId(e,t){let n=this.count;if(this.arrayOffsets!==null){const{arrayOffsets:i,arrayOffsetType:s}=this,r=xl(s),a=new r(e[i]);n=a[t+1]-a[t]}return n}getIndexOffsetFromId(e,t){let n=t;if(this.arrayOffsets){const{arrayOffsets:i,arrayOffsetType:s}=this,r=xl(s);n=new r(e[i])[n]}else this.array&&(n*=this.count);return n}}class iI extends _m{constructor(...e){super(...e),this.isPropertyTableAccessor=!0,this.count=this.definition.count,this._initProperties(nI)}getData(e,t={}){const n=this.properties;Kh(n,t);for(const i in n)t[i]=this.getPropertyValue(i,e,t[i]);return t}_readValueAtIndex(e,t,n,i=null){const s=this.properties[e],{componentType:r,type:a}=s,l=this.data,c=l[s.values],h=xl(r,a),u=new h(c),d=s.getIndexOffsetFromId(l,t);if(Cv(a)||a==="ENUM")return Rv(u,(d+n)*s.valueLength,a,i);if(a==="STRING"){let f=d+n,p=0;if(s.stringOffsets!==null){const{stringOffsets:g,stringOffsetType:_}=s,y=xl(_),v=new y(l[g]);p=v[f+1]-v[f],f=v[f]}const m=new Uint8Array(u.buffer,f,p);i=new TextDecoder().decode(m)}else if(a==="BOOLEAN"){const f=d+n,p=Math.floor(f/8),m=f%8;i=(u[p]>>m&1)===1}return i}getPropertyValue(e,t,n=null){if(t>=this.count)throw new Error("PropertyTableAccessor: Requested index is outside the range of the table.");const i=this.properties[e];if(i){if(!this.definition.properties[e])return i.resolveDefault(n)}else throw new Error("PropertyTableAccessor: Requested property does not exist.");const s=i.array,r=this.data,a=i.getArrayLengthFromId(r,t);if(n=i.shapeToProperty(n,a),s)for(let l=0,c=n.length;l<c;l++)n[l]=this._readValueAtIndex(e,t,l,n[l]);else n=this._readValueAtIndex(e,t,0,n);return n=i.adjustValueScaleOffset(n),n=i.resolveEnumsToStrings(n),n=i.resolveNoData(n),n}}const sI=new Ss(-1,1,1,-1,0,1);class rI extends ze{constructor(){super(),this.setAttribute("position",new be([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new be([0,2,0,0,2,0],2))}}const oI=new rI;class Pv{constructor(e){this._mesh=new _t(oI,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,sI)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}const Na=new lv;class w0{constructor(){this._renderer=new mm,this._target=new xi(1,1),this._texTarget=new xi,this._quad=new Pv(new Qn({blending:Rp,blendDst:Pp,blendSrc:Ip,uniforms:{map:{value:null},pixel:{value:new G}},vertexShader:`
				void main() {

					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

				}
			`,fragmentShader:`
				uniform sampler2D map;
				uniform ivec2 pixel;

				void main() {

					gl_FragColor = texelFetch( map, pixel, 0 );

				}
			`}))}increaseSizeTo(e){this._target.setSize(Math.max(this._target.width,e),1)}readDataAsync(e){const{_renderer:t,_target:n}=this;return t.readRenderTargetPixelsAsync(n,0,0,e.length/4,1,e)}readData(e){const{_renderer:t,_target:n}=this;t.readRenderTargetPixels(n,0,0,e.length/4,1,e)}renderPixelToTarget(e,t,n){const{_renderer:i,_target:s}=this;Na.min.copy(t),Na.max.copy(t),Na.max.x+=1,Na.max.y+=1,i.initRenderTarget(s),i.copyTextureToTexture(e,s.texture,Na,n,0)}}const ks=new class{constructor(){let o=null;Object.getOwnPropertyNames(w0.prototype).forEach(e=>{e!=="constructor"&&(this[e]=(...t)=>(o=o||new w0,o[e](...t)))})}},E0=new G,A0=new G,C0=new G;function aI(o,e){return e===0?o.getAttribute("uv"):o.getAttribute(`uv${e}`)}function Iv(o,e,t=new Array(3)){let n=3*e,i=3*e+1,s=3*e+2;return o.index&&(n=o.index.getX(n),i=o.index.getX(i),s=o.index.getX(s)),t[0]=n,t[1]=i,t[2]=s,t}function Lv(o,e,t,n,i){const[s,r,a]=n,l=aI(o,e);E0.fromBufferAttribute(l,s),A0.fromBufferAttribute(l,r),C0.fromBufferAttribute(l,a),i.set(0,0,0).addScaledVector(E0,t.x).addScaledVector(A0,t.y).addScaledVector(C0,t.z)}function Dv(o,e,t,n){const i=o.x-Math.floor(o.x),s=o.y-Math.floor(o.y),r=Math.floor(i*e%e),a=Math.floor(s*t%t);return n.set(r,a),n}const R0=new G,P0=new G,I0=new G;class lI extends ju{constructor(e,t,n=null){super(e,t,n),this.channels=Kt(n,"channels",[0]),this.index=Kt(n,"index",null),this.texCoord=Kt(n,"texCoord",null),this.valueLength=parseInt(this.type.replace(/[^0-9]/g,""))||1}readDataFromBuffer(e,t,n=null){const i=this.type;if(i==="BOOLEAN"||i==="STRING")throw new Error("PropertyTextureAccessor: BOOLEAN and STRING types not supported.");return Rv(e,t*this.valueLength,i,n)}}class cI extends _m{constructor(...e){super(...e),this.isPropertyTextureAccessor=!0,this._asyncRead=!1,this._initProperties(lI)}getData(e,t,n,i={}){const s=this.properties;Kh(s,i);const r=Object.keys(s),a=r.map(l=>i[l]);return this.getPropertyValuesAtTexel(r,e,t,n,a),r.forEach((l,c)=>i[l]=a[c]),i}async getDataAsync(e,t,n,i={}){const s=this.properties;Kh(s,i);const r=Object.keys(s),a=r.map(l=>i[l]);return await this.getPropertyValuesAtTexelAsync(r,e,t,n,a),r.forEach((l,c)=>i[l]=a[c]),i}getPropertyValuesAtTexelAsync(...e){this._asyncRead=!0;const t=this.getPropertyValuesAtTexel(...e);return this._asyncRead=!1,t}getPropertyValuesAtTexel(e,t,n,i,s=[]){for(;s.length<e.length;)s.push(null);s.length=e.length,ks.increaseSizeTo(s.length);const r=this.data,a=this.definition.properties,l=this.properties,c=Iv(i,t);for(let d=0,f=e.length;d<f;d++){const p=e[d];if(!a[p])continue;const m=l[p],g=r[m.index];Lv(i,m.texCoord,n,c,R0),Dv(R0,g.image.width,g.image.height,P0),I0.set(d,0),ks.renderPixelToTarget(g,P0,I0)}const h=new Uint8Array(e.length*4);if(this._asyncRead)return ks.readDataAsync(h).then(()=>(u.call(this),s));return ks.readData(h),u.call(this),s;function u(){for(let d=0,f=e.length;d<f;d++){const p=e[d],m=l[p],g=m.type;if(s[d]=gm(m,s[d]),m){if(!a[p]){s[d]=m.resolveDefault(s);continue}}else throw new Error("PropertyTextureAccessor: Requested property does not exist.");const _=m.valueLength*(m.count||1),y=m.channels.map(T=>h[4*d+T]),v=m.componentType,x=xl(v,g),S=new x(_);if(new Uint8Array(S.buffer).set(y),m.array){const T=s[d];for(let w=0,E=T.length;w<E;w++)T[w]=m.readDataFromBuffer(S,w,T[w])}else s[d]=m.readDataFromBuffer(S,0,s[d]);s[d]=m.adjustValueScaleOffset(s[d]),s[d]=m.resolveEnumsToStrings(s[d]),s[d]=m.resolveNoData(s[d])}}}dispose(){this.data.forEach(e=>{e&&(e.dispose(),e.image instanceof ImageBitmap&&e.image.close())})}}class L0{constructor(e,t,n,i=null,s=null){const{schema:r,propertyTables:a=[],propertyTextures:l=[],propertyAttributes:c=[]}=e,{enums:h,classes:u}=r,d=a.map(m=>new iI(m,u,h,n));let f=[],p=[];i&&(i.propertyTextures&&(f=i.propertyTextures.map(m=>new cI(l[m],u,h,t))),i.propertyAttributes&&(p=i.propertyAttributes.map(m=>new tI(c[m],u,h)))),this.schema=r,this.tableAccessors=d,this.textureAccessors=f,this.attributeAccessors=p,this.object=s,this.textures=t,this.nodeMetadata=i}getPropertyTableData(e,t,n=null){if(!Array.isArray(e)||!Array.isArray(t))n=n||{},n=this.tableAccessors[e].getData(t,n);else{n=n||[];const i=Math.min(e.length,t.length);n.length=i;for(let s=0;s<i;s++){const r=this.tableAccessors[e[s]];n[s]=r.getData(t[s],n[s])}}return n}getPropertyTableInfo(e=null){if(e===null&&(e=this.tableAccessors.map((t,n)=>n)),Array.isArray(e))return e.map(t=>{const n=this.tableAccessors[t];return{name:n.name,className:n.definition.class}});{const t=this.tableAccessors[e];return{name:t.name,className:t.definition.class}}}getPropertyTextureData(e,t,n=[]){const i=this.textureAccessors;n.length=i.length;for(let s=0;s<i.length;s++){const r=i[s];n[s]=r.getData(e,t,this.object.geometry,n[s])}return n}async getPropertyTextureDataAsync(e,t,n=[]){const i=this.textureAccessors;n.length=i.length;const s=[];for(let r=0;r<i.length;r++){const l=i[r].getDataAsync(e,t,this.object.geometry,n[r]).then(c=>{n[r]=c});s.push(l)}return await Promise.all(s),n}getPropertyTextureInfo(){return this.textureAccessors}getPropertyAttributeData(e,t=[]){const n=this.attributeAccessors;t.length=n.length;for(let i=0;i<n.length;i++){const s=n[i];t[i]=s.getData(e,this.object.geometry,t[i])}return t}getPropertyAttributeInfo(){return this.attributeAccessors.map(e=>({name:e.name,className:e.definition.class}))}dispose(){this.textureAccessors.forEach(e=>e.dispose()),this.tableAccessors.forEach(e=>e.dispose()),this.attributeAccessors.forEach(e=>e.dispose())}}const Fa="EXT_structural_metadata";function hI(o,e=[]){var i;const t=((i=o.json.textures)==null?void 0:i.length)||0,n=new Array(t).fill(null);return e.forEach(({properties:s})=>{for(const r in s){const{index:a}=s[r];n[a]===null&&(n[a]=o.loadTexture(a))}}),Promise.all(n)}function uI(o,e=[]){var i;const t=((i=o.json.bufferViews)==null?void 0:i.length)||0,n=new Array(t).fill(null);return e.forEach(({properties:s})=>{for(const r in s){const{values:a,arrayOffsets:l,stringOffsets:c}=s[r];n[a]===null&&(n[a]=o.loadBufferView(a)),n[l]===null&&(n[l]=o.loadBufferView(l)),n[c]===null&&(n[c]=o.loadBufferView(c))}}),Promise.all(n)}class dI{constructor(e){this.parser=e,this.name=Fa}async afterRoot({scene:e,parser:t}){const n=t.json.extensionsUsed;if(!n||!n.includes(Fa))return;let i=null,s=t.json.extensions[Fa];if(s.schemaUri){const{manager:c,path:h,requestHeader:u,crossOrigin:d}=t.options,f=new URL(s.schemaUri,h).toString(),p=new kn(c);p.setCrossOrigin(d),p.setResponseType("json"),p.setRequestHeader(u),i=p.loadAsync(f).then(m=>{s={...s,schema:m}})}const[r,a]=await Promise.all([hI(t,s.propertyTextures),uI(t,s.propertyTables),i]),l=new L0(s,r,a);e.userData.structuralMetadata=l,e.traverse(c=>{var h;if(t.associations.has(c)){const{meshes:u,primitives:d}=t.associations.get(c),f=(h=t.json.meshes[u])==null?void 0:h.primitives[d];if(f&&f.extensions&&f.extensions[Fa]){const p=f.extensions[Fa];c.userData.structuralMetadata=new L0(s,r,a,p,c)}else c.userData.structuralMetadata=l}})}}const D0=new G,U0=new G,O0=new G;function fI(o){return o.x>o.y&&o.x>o.z?0:o.y>o.z?1:2}class pI{constructor(e,t,n){this.geometry=e,this.textures=t,this.data=n,this._asyncRead=!1,this.featureIds=n.featureIds.map(i=>{const{texture:s,...r}=i,a={label:null,propertyTable:null,nullFeatureId:null,...r};return s&&(a.texture={texCoord:0,channels:[0],...s}),a})}getTextures(){return this.textures}getFeatureInfo(){return this.featureIds}getFeaturesAsync(...e){this._asyncRead=!0;const t=this.getFeatures(...e);return this._asyncRead=!1,t}getFeatures(e,t){const{geometry:n,textures:i,featureIds:s}=this,r=new Array(s.length).fill(null),a=s.length;ks.increaseSizeTo(a);const l=Iv(n,e),c=l[fI(t)];for(let d=0,f=s.length;d<f;d++){const p=s[d],m="nullFeatureId"in p?p.nullFeatureId:null;if("texture"in p){const g=i[p.texture.index];Lv(n,p.texture.texCoord,t,l,D0),Dv(D0,g.image.width,g.image.height,U0),O0.set(d,0),ks.renderPixelToTarget(i[p.texture.index],U0,O0)}else if("attribute"in p){const _=n.getAttribute(`_feature_id_${p.attribute}`).getX(c);_!==m&&(r[d]=_)}else{const g=c;g!==m&&(r[d]=g)}}const h=new Uint8Array(a*4);if(this._asyncRead)return ks.readDataAsync(h).then(()=>(u(),r));return ks.readData(h),u(),r;function u(){const d=new Uint32Array(1);for(let f=0,p=s.length;f<p;f++){const m=s[f],g="nullFeatureId"in m?m.nullFeatureId:null;if("texture"in m){const{channels:_}=m.texture,y=_.map(x=>h[4*f+x]);new Uint8Array(d.buffer).set(y);const v=d[0];v!==g&&(r[f]=v)}}}}dispose(){this.textures.forEach(e=>{e&&(e.dispose(),e.image instanceof ImageBitmap&&e.image.close())})}}const Jh="EXT_mesh_features";function N0(o,e,t){o.traverse(n=>{var i;if(e.associations.has(n)){const{meshes:s,primitives:r}=e.associations.get(n),a=(i=e.json.meshes[s])==null?void 0:i.primitives[r];a&&a.extensions&&a.extensions[Jh]&&t(n,a.extensions[Jh])}})}class mI{constructor(e){this.parser=e,this.name=Jh}async afterRoot({scene:e,parser:t}){var a;const n=t.json.extensionsUsed;if(!n||!n.includes(Jh))return;const i=((a=t.json.textures)==null?void 0:a.length)||0,s=new Array(i).fill(null);N0(e,t,(l,{featureIds:c})=>{c.forEach(h=>{if(h.texture&&s[h.texture.index]===null){const u=h.texture.index;s[u]=t.loadTexture(u)}})});const r=await Promise.all(s);N0(e,t,(l,c)=>{l.userData.meshFeatures=new pI(l.geometry,r,c)})}}class gI{constructor(){this.name="CESIUM_RTC"}afterRoot(e){if(e.parser.json.extensions&&e.parser.json.extensions.CESIUM_RTC){const{center:t}=e.parser.json.extensions.CESIUM_RTC;t&&(e.scene.position.x+=t[0],e.scene.position.y+=t[1],e.scene.position.z+=t[2])}}}class _I{constructor(e){e={metadata:!0,rtc:!0,plugins:[],dracoLoader:null,ktxLoader:null,meshoptDecoder:null,autoDispose:!0,...e},this.tiles=null,this.metadata=e.metadata,this.rtc=e.rtc,this.plugins=e.plugins,this.dracoLoader=e.dracoLoader,this.ktxLoader=e.ktxLoader,this.meshoptDecoder=e.meshoptDecoder,this._gltfRegex=/\.(gltf|glb)$/g,this._dracoRegex=/\.drc$/g,this._loader=null}init(e){const t=new $u(e.manager);this.dracoLoader&&(t.setDRACOLoader(this.dracoLoader),e.manager.addHandler(this._dracoRegex,this.dracoLoader)),this.ktxLoader&&t.setKTX2Loader(this.ktxLoader),this.meshoptDecoder&&t.setMeshoptDecoder(this.meshoptDecoder),this.rtc&&t.register(()=>new gI),this.metadata&&(t.register(()=>new dI),t.register(()=>new mI)),this.plugins.forEach(n=>t.register(n)),e.manager.addHandler(this._gltfRegex,t),this.tiles=e,this._loader=t}dispose(){this.tiles.manager.removeHandler(this._gltfRegex),this.tiles.manager.removeHandler(this._dracoRegex),this.autoDispose&&(this.ktxLoader.dispose(),this.dracoLoader.dispose())}}class xI{set delay(e){this.deferCallbacks.delay=e}get delay(){return this.deferCallbacks.delay}set bytesTarget(e){this.lruCache.minBytesSize=e}get bytesTarget(){return this.lruCache.minBytesSize}get estimatedGpuBytes(){return this.lruCache.cachedBytes}constructor(e={}){const{delay:t=0,bytesTarget:n=0}=e;this.name="UNLOAD_TILES_PLUGIN",this.tiles=null,this.lruCache=new ux,this.deferCallbacks=new yI,this.delay=t,this.bytesTarget=n}init(e){this.tiles=e;const{lruCache:t,deferCallbacks:n}=this;n.callback=s=>{t.markUnused(s),t.scheduleUnload(!1)};const i=s=>{const r=s.cached.scene;e.visibleTiles.has(s)||e.invokeOnePlugin(l=>l.unloadTileFromGPU&&l.unloadTileFromGPU(r,s))};this._onUpdateBefore=()=>{t.unloadPriorityCallback=e.lruCache.unloadPriorityCallback,t.computeMemoryUsageCallback=e.lruCache.computeMemoryUsageCallback,t.minSize=1/0,t.maxSize=1/0,t.maxBytesSize=1/0,t.unloadPercent=1,t.autoMarkUnused=!1},this._onVisibilityChangeCallback=({tile:s,visible:r})=>{r?(t.add(s,i),e.markTileUsed(s),n.cancel(s)):n.run(s)},e.forEachLoadedModel((s,r)=>{const a=e.visibleTiles.has(r);this._onVisibilityChangeCallback({scene:s,visible:a})}),e.addEventListener("tile-visibility-change",this._onVisibilityChangeCallback),e.addEventListener("update-before",this._onUpdateBefore)}unloadTileFromGPU(e,t){e&&e.traverse(n=>{if(n.material){const i=n.material;i.dispose();for(const s in i){const r=i[s];r&&r.isTexture&&r.dispose()}}n.geometry&&n.geometry.dispose()})}dispose(){this.tiles.removeEventListener("tile-visibility-change",this._onVisibilityChangeCallback),this.tiles.removeEventListener("update-before",this._onUpdateBefore),this.deferCallbacks.cancelAll()}}class yI{constructor(e=()=>{}){this.map=new Map,this.callback=e,this.delay=0}run(e){const{map:t,delay:n}=this;if(t.has(e))throw new Error("DeferCallbackManager: Callback already initialized.");n===0?this.callback(e):t.set(e,setTimeout(()=>this.callback(e),n))}cancel(e){const{map:t}=this;t.has(e)&&(clearTimeout(t.get(e)),t.delete(e))}cancelAll(){this.map.forEach((e,t)=>{this.cancel(t)})}}const{clamp:Tf}=ue;class vI{constructor(){this.duration=250,this.fadeCount=0,this._lastTick=-1,this._fadeState=new Map,this.onFadeComplete=null,this.onFadeStart=null,this.onFadeSetComplete=null,this.onFadeSetStart=null}deleteObject(e){e&&this.completeFade(e)}guaranteeState(e){const t=this._fadeState;if(t.has(e))return!1;const n={fadeInTarget:0,fadeOutTarget:0,fadeIn:0,fadeOut:0};return t.set(e,n),!0}completeFade(e){const t=this._fadeState;if(!t.has(e))return;const n=t.get(e).fadeOutTarget===0;t.delete(e),this.fadeCount--,this.onFadeComplete&&this.onFadeComplete(e,n),this.fadeCount===0&&this.onFadeSetComplete&&this.onFadeSetComplete()}completeAllFades(){this._fadeState.forEach((e,t)=>{this.completeFade(t)})}forEachObject(e){this._fadeState.forEach((t,n)=>{e(n,t)})}fadeIn(e){const t=this.guaranteeState(e),n=this._fadeState.get(e);n.fadeInTarget=1,n.fadeOutTarget=0,n.fadeOut=0,t&&(this.fadeCount++,this.fadeCount===1&&this.onFadeSetStart&&this.onFadeSetStart(),this.onFadeStart&&this.onFadeStart(e))}fadeOut(e){const t=this.guaranteeState(e),n=this._fadeState.get(e);n.fadeOutTarget=1,t&&(n.fadeInTarget=1,n.fadeIn=1,this.fadeCount++,this.fadeCount===1&&this.onFadeSetStart&&this.onFadeSetStart(),this.onFadeStart&&this.onFadeStart(e))}isFading(e){return this._fadeState.has(e)}isFadingOut(e){const t=this._fadeState.get(e);return t&&t.fadeOutTarget===1}update(){const e=window.performance.now();this._lastTick===-1&&(this._lastTick=e);const t=Tf((e-this._lastTick)/this.duration,0,1);this._lastTick=e,this._fadeState.forEach((i,s)=>{const{fadeOutTarget:r,fadeInTarget:a}=i;let{fadeOut:l,fadeIn:c}=i;const h=Math.sign(a-c);c=Tf(c+h*t,0,1);const u=Math.sign(r-l);l=Tf(l+u*t,0,1),i.fadeIn=c,i.fadeOut=l,((l===1||l===0)&&(c===1||c===0)||l>=c)&&this.completeFade(s)})}}function Uv(o,e){const t={fadeIn:{value:0},fadeOut:{value:0},fadeTexture:{value:null}};return o.defines={...o.defines||{},FEATURE_FADE:0},o.onBeforeCompile=n=>{e&&e(n),n.uniforms={...n.uniforms,...t},n.vertexShader=n.vertexShader.replace(/void\s+main\(\)\s+{/,i=>`
					#ifdef USE_BATCHING_FRAG

					varying float vBatchId;

					#endif

					${i}

						#ifdef USE_BATCHING_FRAG

						// add 0.5 to the value to avoid floating error that may cause flickering
						vBatchId = getIndirectIndex( gl_DrawID ) + 0.5;

						#endif
				`),n.fragmentShader=n.fragmentShader.replace(/void main\(/,i=>`
				#if FEATURE_FADE

				// adapted from https://www.shadertoy.com/view/Mlt3z8
				float bayerDither2x2( vec2 v ) {

					return mod( 3.0 * v.y + 2.0 * v.x, 4.0 );

				}

				float bayerDither4x4( vec2 v ) {

					vec2 P1 = mod( v, 2.0 );
					vec2 P2 = floor( 0.5 * mod( v, 4.0 ) );
					return 4.0 * bayerDither2x2( P1 ) + bayerDither2x2( P2 );

				}

				// the USE_BATCHING define is not available in fragment shaders
				#ifdef USE_BATCHING_FRAG

				// functions for reading the fade state of a given batch id
				uniform sampler2D fadeTexture;
				varying float vBatchId;
				vec2 getFadeValues( const in float i ) {

					int size = textureSize( fadeTexture, 0 ).x;
					int j = int( i );
					int x = j % size;
					int y = j / size;
					return texelFetch( fadeTexture, ivec2( x, y ), 0 ).rg;

				}

				#else

				uniform float fadeIn;
				uniform float fadeOut;

				#endif

				#endif

				${i}
			`).replace(/#include <dithering_fragment>/,i=>`

				${i}

				#if FEATURE_FADE

				#ifdef USE_BATCHING_FRAG

				vec2 fadeValues = getFadeValues( vBatchId );
				float fadeIn = fadeValues.r;
				float fadeOut = fadeValues.g;

				#endif

				float bayerValue = bayerDither4x4( floor( mod( gl_FragCoord.xy, 4.0 ) ) );
				float bayerBins = 16.0;
				float dither = ( 0.5 + bayerValue ) / bayerBins;
				if ( dither >= fadeIn ) {

					discard;

				}

				if ( dither < fadeOut ) {

					discard;

				}

				#endif

			`)},t}class MI{constructor(){this._fadeParams=new WeakMap,this.fading=0}setFade(e,t,n){if(!e)return;const i=this._fadeParams;e.traverse(s=>{const r=s.material;if(r){const a=i.get(r);a.fadeIn.value=t,a.fadeOut.value=n;const h=+(!(t===0||t===1)||!(n===0||n===1));r.defines.FEATURE_FADE!==h&&(this.fading+=h===1?1:-1,r.defines.FEATURE_FADE=h,r.needsUpdate=!0)}})}prepareScene(e){e.traverse(t=>{t.material&&this.prepareMaterial(t.material)})}deleteScene(e){if(!e)return;const t=this._fadeParams;e.traverse(n=>{const i=n.material;i&&(t.delete(i),i.onBeforeCompile=()=>{},i.needsUpdate=!0)})}prepareMaterial(e){const t=this._fadeParams;t.has(e)||t.set(e,Uv(e))}}class SI{constructor(e,t=new un){this.other=e,this.material=t,this.visible=!0,this.parent=null,this._instanceInfo=[],this._visibilityChanged=!0;const n=new Proxy(this,{get(i,s){if(s in i)return i[s];{const r=e[s];return r instanceof Function?(...a)=>(i.syncInstances(),r.call(n,...a)):e[s]}},set(i,s,r){return s in i?i[s]=r:e[s]=r,!0},deleteProperty(i,s){return s in i?delete i[s]:delete e[s]}});return n}syncInstances(){const e=this._instanceInfo,t=this.other._instanceInfo;for(;t.length>e.length;){const n=e.length;e.push(new Proxy({visible:!1},{get(i,s){return s in i?i[s]:t[n][s]},set(i,s,r){return s in i?i[s]=r:t[n][s]=r,!0}}))}}}class bI extends SI{constructor(...e){super(...e);const t=this.material,n=Uv(t,t.onBeforeCompile);t.defines.FEATURE_FADE=1,t.defines.USE_BATCHING_FRAG=1,t.needsUpdate=!0,this.fadeTexture=null,this._fadeParams=n}setFadeAt(e,t,n){this._initFadeTexture(),this.fadeTexture.setValueAt(e,t*255,n*255)}_initFadeTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=e*e*2,n=this.fadeTexture;if(!n||n.image.data.length!==t){const i=new Uint8Array(t),s=new TI(i,e,e,Il,Jn);if(n){n.dispose();const r=n.image.data,a=this.fadeTexture.image.data,l=Math.min(r.length,a.length);a.set(new r.constructor(r.buffer,0,l))}this.fadeTexture=s,this._fadeParams.fadeTexture.value=s,s.needsUpdate=!0}}dispose(){this.fadeTexture&&this.fadeTexture.dispose()}}class TI extends jn{setValueAt(e,...t){const{data:n,width:i,height:s}=this.image,r=Math.floor(n.length/(i*s));let a=!1;for(let l=0;l<r;l++){const c=e*r+l,h=n[c],u=t[l]||0;h!==u&&(n[c]=u,a=!0)}a&&(this.needsUpdate=!0)}}const F0=Symbol("HAS_POPPED_IN"),B0=new A,k0=new A,z0=new vt,V0=new vt,H0=new A;function wI(){const o=this._fadeManager,e=this.tiles;this._fadingBefore=o.fadeCount,this._displayActiveTiles=e.displayActiveTiles,e.displayActiveTiles=!0}function EI(){const o=this._fadeManager,e=this._fadeMaterialManager,t=this._displayActiveTiles,n=this._fadingBefore,i=this._prevCameraTransforms,{tiles:s,maximumFadeOutTiles:r,batchedMesh:a}=this,{cameras:l}=s;s.displayActiveTiles=t,o.update();const c=o.fadeCount;if(n!==0&&c!==0&&(s.dispatchEvent({type:"fade-change"}),s.dispatchEvent({type:"needs-render"})),t||s.visibleTiles.forEach(h=>{const u=h.cached.scene;u&&(u.visible=h.__inFrustum),this.forEachBatchIds(h,(d,f,p)=>{f.setVisibleAt(d,h.__inFrustum),p.batchedMesh.setVisibleAt(d,h.__inFrustum)})}),r<this._fadingOutCount){let h=!0;l.forEach(u=>{if(!i.has(u))return;const d=u.matrixWorld,f=i.get(u);d.decompose(k0,V0,H0),f.decompose(B0,z0,H0);const p=V0.angleTo(z0),m=k0.distanceTo(B0);h=h&&(p>.25||m>.1)}),h&&o.completeAllFades()}if(l.forEach(h=>{i.get(h).copy(h.matrixWorld)}),o.forEachObject((h,{fadeIn:u,fadeOut:d})=>{const f=h.cached.scene,p=o.isFadingOut(h);s.markTileUsed(h),f&&(e.setFade(f,u,d),p&&(f.visible=!0)),this.forEachBatchIds(h,(m,g,_)=>{g.setFadeAt(m,u,d),g.setVisibleAt(m,!0),_.batchedMesh.setVisibleAt(m,!1)})}),a){const h=s.getPluginByName("BATCHED_TILES_PLUGIN").batchedMesh.material;a.material.map=h.map}}class AI{get fadeDuration(){return this._fadeManager.duration}set fadeDuration(e){this._fadeManager.duration=Number(e)}get fadingTiles(){return this._fadeManager.fadeCount}constructor(e){e={maximumFadeOutTiles:50,fadeRootTiles:!1,fadeDuration:250,...e},this.name="FADE_TILES_PLUGIN",this.priority=-2,this.tiles=null,this.batchedMesh=null,this._fadeManager=new vI,this._fadeMaterialManager=new MI,this._prevCameraTransforms=null,this._fadingOutCount=0,this.maximumFadeOutTiles=e.maximumFadeOutTiles,this.fadeRootTiles=e.fadeRootTiles,this.fadeDuration=e.fadeDuration}init(e){this._onLoadModel=({scene:i})=>{this._fadeMaterialManager.prepareScene(i)},this._onDisposeModel=({tile:i,scene:s})=>{this._fadeManager.deleteObject(i),this._fadeMaterialManager.deleteScene(s)},this._onAddCamera=({camera:i})=>{this._prevCameraTransforms.set(i,new de)},this._onDeleteCamera=({camera:i})=>{this._prevCameraTransforms.delete(i)},this._onTileVisibilityChange=({tile:i,visible:s})=>{const r=i.cached.scene;r&&(r.visible=!0),this.forEachBatchIds(i,(a,l,c)=>{l.setFadeAt(a,0,0),l.setVisibleAt(a,!1),c.batchedMesh.setVisibleAt(a,!1)})},this._onUpdateBefore=()=>{wI.call(this)},this._onUpdateAfter=()=>{EI.call(this)},e.addEventListener("load-model",this._onLoadModel),e.addEventListener("dispose-model",this._onDisposeModel),e.addEventListener("add-camera",this._onAddCamera),e.addEventListener("delete-camera",this._onDeleteCamera),e.addEventListener("update-before",this._onUpdateBefore),e.addEventListener("update-after",this._onUpdateAfter),e.addEventListener("tile-visibility-change",this._onTileVisibilityChange);const t=this._fadeManager;t.onFadeSetStart=()=>{e.dispatchEvent({type:"fade-start"}),e.dispatchEvent({type:"needs-render"})},t.onFadeSetComplete=()=>{e.dispatchEvent({type:"fade-end"}),e.dispatchEvent({type:"needs-render"})},t.onFadeComplete=(i,s)=>{this._fadeMaterialManager.setFade(i.cached.scene,0,0),this.forEachBatchIds(i,(r,a,l)=>{a.setFadeAt(r,0,0),a.setVisibleAt(r,!1),l.batchedMesh.setVisibleAt(r,s)}),s||(e.invokeOnePlugin(r=>r!==this&&r.setTileVisible&&r.setTileVisible(i,!1)),this._fadingOutCount--)};const n=new Map;e.cameras.forEach(i=>{n.set(i,new de)}),e.forEachLoadedModel((i,s)=>{this._onLoadModel({scene:i})}),this.tiles=e,this._fadeManager=t,this._prevCameraTransforms=n}initBatchedMesh(){var t;const e=(t=this.tiles.getPluginByName("BATCHED_TILES_PLUGIN"))==null?void 0:t.batchedMesh;if(e){if(this.batchedMesh===null){this._onBatchedMeshDispose=()=>{this.batchedMesh.dispose(),this.batchedMesh.removeFromParent(),this.batchedMesh=null,e.removeEventListener("dispose",this._onBatchedMeshDispose)};const n=e.material.clone();n.onBeforeCompile=e.material.onBeforeCompile,this.batchedMesh=new bI(e,n),this.tiles.group.add(this.batchedMesh)}}else this.batchedMesh!==null&&(this._onBatchedMeshDispose(),this._onBatchedMeshDispose=null)}setTileVisible(e,t){const n=this._fadeManager,i=n.isFading(e);if(n.isFadingOut(e)&&this._fadingOutCount--,t?e.__depthFromRenderedParent===1?((e[F0]||this.fadeRootTiles)&&this._fadeManager.fadeIn(e),e[F0]=!0):this._fadeManager.fadeIn(e):(this._fadingOutCount++,n.fadeOut(e)),i)return!0;const s=this._fadeManager.isFading(e);return!!(!t&&s)}dispose(){const e=this.tiles;this._fadeManager.completeAllFades(),this.batchedMesh!==null&&this._onBatchedMeshDispose(),e.removeEventListener("load-model",this._onLoadModel),e.removeEventListener("dispose-model",this._onDisposeModel),e.removeEventListener("add-camera",this._onAddCamera),e.removeEventListener("delete-camera",this._onDeleteCamera),e.removeEventListener("update-before",this._onUpdateBefore),e.removeEventListener("update-after",this._onUpdateAfter),e.removeEventListener("tile-visibility-change",this._onTileVisibilityChange),e.forEachLoadedModel((t,n)=>{this._fadeManager.deleteObject(n),t&&(t.visible=!0)})}forEachBatchIds(e,t){if(this.initBatchedMesh(),this.batchedMesh){const n=this.tiles.getPluginByName("BATCHED_TILES_PLUGIN"),i=n.getTileBatchIds(e);i&&i.forEach(s=>{t(s,this.batchedMesh,n)})}}}const wf=new de,G0=new A,W0=new A;class CI extends Yp{constructor(...e){super(...e),this.resetDistance=1e4,this._matricesTextureHandle=null,this._lastCameraPos=new de,this._forceUpdate=!0,this._matrices=[]}setMatrixAt(e,t){super.setMatrixAt(e,t),this._forceUpdate=!0;const n=this._matrices;for(;n.length<=e;)n.push(new de);n[e].copy(t)}setInstanceCount(...e){super.setInstanceCount(...e);const t=this._matrices;for(;t.length>this.instanceCount;)t.pop()}onBeforeRender(e,t,n,i,s,r){super.onBeforeRender(e,t,n,i,s,r),G0.setFromMatrixPosition(n.matrixWorld),W0.setFromMatrixPosition(this._lastCameraPos);const a=this._matricesTexture;let l=this._modelViewMatricesTexture;if((!l||l.image.width!==a.image.width||l.image.height!==a.image.height)&&(l&&l.dispose(),l=a.clone(),l.source=new hs({...l.image,data:l.image.data.slice()}),this._modelViewMatricesTexture=l),this._forceUpdate||G0.distanceTo(W0)>this.resetDistance){const c=this._matrices,h=l.image.data;for(let u=0;u<this.maxInstanceCount;u++){const d=c[u];d?wf.copy(d):wf.identity(),wf.premultiply(this.matrixWorld).premultiply(n.matrixWorldInverse).toArray(h,u*16)}l.needsUpdate=!0,this._lastCameraPos.copy(n.matrixWorld),this._forceUpdate=!1}this._matricesTextureHandle=this._matricesTexture,this._matricesTexture=this._modelViewMatricesTexture,this.matrixWorld.copy(this._lastCameraPos)}onAfterRender(){this.updateMatrixWorld(),this._matricesTexture=this._matricesTextureHandle,this._matricesTextureHandle=null}onAfterShadow(e,t,n,i,s,r){this.onAfterRender(e,null,i,s,r)}dispose(){super.dispose(),this._modelViewMatricesTexture&&this._modelViewMatricesTexture.dispose()}}const li=new _t,Jc=[];class RI extends CI{constructor(...e){super(...e),this.expandPercent=.25,this.maxInstanceExpansionSize=1/0,this._freeGeometryIds=[]}findFreeId(e,t,n){const i=!!this.geometry.index,s=Math.max(i?e.index.count:-1,n),r=Math.max(e.attributes.position.count,t);let a=-1,l=1/0;const c=this._freeGeometryIds;if(c.forEach((h,u)=>{const d=this.getGeometryRangeAt(h),{reservedIndexCount:f,reservedVertexCount:p}=d;if(f>=s&&p>=r){const m=s-f+(r-p);m<l&&(a=u,l=m)}}),a!==-1){const h=c[a];return c.splice(a,1),h}else return-1}addGeometry(e,t,n){const i=!!this.geometry.index;n=Math.max(i?e.index.count:-1,n),t=Math.max(e.attributes.position.count,t);const{expandPercent:s,_freeGeometryIds:r}=this;let a=this.findFreeId(e,t,n);if(a!==-1)this.setGeometryAt(a,e);else{const l=()=>{const u=this.unusedVertexCount<t,d=this.unusedIndexCount<n;return u||d},c=e.index,h=e.attributes.position;if(t=Math.max(t,h.count),n=Math.max(n,c?c.count:0),l()&&(r.forEach(u=>this.deleteGeometry(u)),r.length=0,this.optimize(),l())){const u=this.geometry.index,d=this.geometry.attributes.position;let f,p;if(u){const m=Math.ceil(s*u.count);f=Math.max(m,n,c.count)+u.count}else f=Math.max(this.unusedIndexCount,n);if(d){const m=Math.ceil(s*d.count);p=Math.max(m,t,h.count)+d.count}else p=Math.max(this.unusedVertexCount,t);this.setGeometrySize(p,f)}a=super.addGeometry(e,t,n)}return a}addInstance(e){if(this.maxInstanceCount===this.instanceCount){const t=Math.ceil(this.maxInstanceCount*(1+this.expandPercent));this.setInstanceCount(Math.min(t,this.maxInstanceExpansionSize))}return super.addInstance(e)}deleteInstance(e){const t=this.getGeometryIdAt(e);return t!==-1&&this._freeGeometryIds.push(t),super.deleteInstance(e)}raycastInstance(e,t,n){const i=this.geometry,s=this.getGeometryIdAt(e);li.material=this.material,li.geometry.index=i.index,li.geometry.attributes=i.attributes;const r=this.getGeometryRangeAt(s);li.geometry.setDrawRange(r.start,r.count),li.geometry.boundingBox===null&&(li.geometry.boundingBox=new Wt),li.geometry.boundingSphere===null&&(li.geometry.boundingSphere=new Ot),this.getMatrixAt(e,li.matrixWorld).premultiply(this.matrixWorld),this.getBoundingBoxAt(s,li.geometry.boundingBox),this.getBoundingSphereAt(s,li.geometry.boundingSphere),li.raycast(t,Jc);for(let a=0,l=Jc.length;a<l;a++){const c=Jc[a];c.object=this,c.batchId=e,n.push(c)}Jc.length=0}}function PI(o){return o.r===1&&o.g===1&&o.b===1}function II(o){o.needsUpdate=!0,o.onBeforeCompile=e=>{e.vertexShader=e.vertexShader.replace("#include <common>",`
				#include <common>
				varying float texture_index;
				`).replace("#include <uv_vertex>",`
				#include <uv_vertex>
				texture_index = getIndirectIndex( gl_DrawID );
				`),e.fragmentShader=e.fragmentShader.replace("#include <map_pars_fragment>",`
				#ifdef USE_MAP
				precision highp sampler2DArray;
				uniform sampler2DArray map;
				varying float texture_index;
				#endif
				`).replace("#include <map_fragment>",`
				#ifdef USE_MAP
					diffuseColor *= texture( map, vec3( vMapUv, texture_index ) );
				#endif
				`)}}const Ef=new Pv(new un),Ov=new jn(new Uint8Array([255,255,255,255]),1,1);Ov.needsUpdate=!0;class LI{constructor(e={}){if(parseInt(Cl)<170)throw new Error("BatchedTilesPlugin: Three.js revision 170 or higher required.");e={instanceCount:500,vertexCount:750,indexCount:2e3,expandPercent:.25,maxInstanceCount:1/0,discardOriginalContent:!0,textureSize:null,material:null,renderer:null,...e},this.name="BATCHED_TILES_PLUGIN",this.priority=-1;const t=e.renderer.getContext();this.instanceCount=e.instanceCount,this.vertexCount=e.vertexCount,this.indexCount=e.indexCount,this.material=e.material?e.material.clone():null,this.expandPercent=e.expandPercent,this.maxInstanceCount=Math.min(e.maxInstanceCount,t.getParameter(t.MAX_3D_TEXTURE_SIZE)),this.renderer=e.renderer,this.discardOriginalContent=e.discardOriginalContent,this.textureSize=e.textureSize,this.batchedMesh=null,this.arrayTarget=null,this.tiles=null,this._onLoadModel=null,this._onDisposeModel=null,this._onVisibilityChange=null,this._tileToInstanceId=new Map}init(e){this._onDisposeModel=({scene:t,tile:n})=>{this.removeSceneFromBatchedMesh(t,n)},e.addEventListener("dispose-model",this._onDisposeModel),this.tiles=e}initBatchedMesh(e){if(this.batchedMesh!==null)return;const{instanceCount:t,vertexCount:n,indexCount:i,tiles:s,renderer:r,textureSize:a}=this,l=this.material?this.material:new e.material.constructor,c=new RI(t,t*n,t*i,l);c.name="BatchTilesPlugin",c.frustumCulled=!1,s.group.add(c),c.updateMatrixWorld();const h=e.material.map,u={colorSpace:h.colorSpace,wrapS:h.wrapS,wrapT:h.wrapT,wrapR:h.wrapS,magFilter:h.magFilter},d=new Yf(a||h.image.width,a||h.image.height,t);Object.assign(d.texture,u),r.initRenderTarget(d),l.map=d.texture,II(l),this.arrayTarget=d,this.batchedMesh=c}setTileVisible(e,t){const n=e.cached.scene;if(t&&this.addSceneToBatchedMesh(n,e),this._tileToInstanceId.has(e)){this._tileToInstanceId.get(e).forEach(r=>{this.batchedMesh.setVisibleAt(r,t)});const s=this.tiles;return t?s.visibleTiles.add(e):s.visibleTiles.delete(e),s.dispatchEvent({type:"tile-visibility-change",scene:n,tile:e,visible:t}),!0}return!1}unloadTileFromGPU(e,t){return!this.discardOriginalContent&&this._tileToInstanceId.has(t)?(this.removeSceneFromBatchedMesh(e,t),!0):!1}assignTextureToLayer(e,t){this.expandArrayTargetIfNeeded();const{renderer:n}=this,i=n.getRenderTarget();n.setRenderTarget(this.arrayTarget,t),Ef.material.map=e,Ef.render(n),n.setRenderTarget(i),Ef.material.map=null,e.dispose()}expandArrayTargetIfNeeded(){const{batchedMesh:e,arrayTarget:t,renderer:n}=this,i=Math.min(e.maxInstanceCount,this.maxInstanceCount);if(i>t.depth){const s={colorSpace:t.texture.colorSpace,wrapS:t.texture.wrapS,wrapT:t.texture.wrapT,generateMipmaps:t.texture.generateMipmaps,minFilter:t.texture.minFilter,magFilter:t.texture.magFilter},r=new Yf(t.width,t.height,i);Object.assign(r.texture,s),n.initRenderTarget(r),n.copyTextureToTexture(t.texture,r.texture),t.dispose(),e.material.map=r.texture,this.arrayTarget=r}}removeSceneFromBatchedMesh(e,t){if(this._tileToInstanceId.has(t)){const n=this._tileToInstanceId.get(t);this._tileToInstanceId.delete(t),n.forEach(i=>{this.batchedMesh.deleteInstance(i)})}}addSceneToBatchedMesh(e,t){if(this._tileToInstanceId.has(t))return;const n=[];e.traverse(r=>{r.isMesh&&n.push(r)});let i=!0;n.forEach(r=>{if(this.batchedMesh&&i){const a=r.geometry.attributes,l=this.batchedMesh.geometry.attributes;for(const c in l)if(!(c in a)){i=!1;return}}});const s=!this.batchedMesh||this.batchedMesh.instanceCount+n.length<=this.maxInstanceCount;if(i&&s){e.updateMatrixWorld();const r=[];n.forEach(a=>{this.initBatchedMesh(a);const{geometry:l,material:c}=a,{batchedMesh:h,expandPercent:u}=this;h.expandPercent=u;const d=h.addGeometry(l,this.vertexCount,this.indexCount),f=h.addInstance(d);r.push(f),h.setMatrixAt(f,a.matrixWorld),h.setVisibleAt(f,!1),PI(c.color)||(c.color.setHSL(Math.random(),.5,.5),h.setColorAt(f,c.color));const p=c.map;p?this.assignTextureToLayer(p,f):this.assignTextureToLayer(Ov,f)}),this._tileToInstanceId.set(t,r),this.discardOriginalContent&&(t.cached.textures.forEach(a=>{a.image instanceof ImageBitmap&&a.image.close()}),t.cached.scene=null,t.cached.materials=[],t.cached.geometries=[],t.cached.textures=[])}}raycastTile(e,t,n,i){return this._tileToInstanceId.has(e)?(this._tileToInstanceId.get(e).forEach(r=>{this.batchedMesh.raycastInstance(r,n,i)}),!0):!1}dispose(){const{arrayTarget:e,tiles:t,batchedMesh:n}=this;e&&e.dispose(),n&&(n.material.dispose(),n.geometry.dispose(),n.dispose(),n.removeFromParent()),t.removeEventListener("dispose-model",this._onDisposeModel)}getTileBatchIds(e){return this._tileToInstanceId.get(e)}}const Af=new WeakMap;class DI extends mn{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,n,i){const s=new kn(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,r=>{this.parse(r,t,i)},n,i)}parse(e,t,n=()=>{}){this.decodeDracoFile(e,t,null,null,At,n).catch(n)}decodeDracoFile(e,t,n,i,s=nn,r=()=>{}){const a={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n,vertexColorSpace:s};return this.decodeGeometry(e,a).then(t).catch(r)}decodeGeometry(e,t){const n=JSON.stringify(t);if(Af.has(e)){const l=Af.get(e);if(l.key===n)return l.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let i;const s=this.workerNextTaskID++,r=e.byteLength,a=this._getWorker(s,r).then(l=>(i=l,new Promise((c,h)=>{i._callbacks[s]={resolve:c,reject:h},i.postMessage({type:"decode",id:s,taskConfig:t,buffer:e},[e])}))).then(l=>this._createGeometry(l.geometry));return a.catch(()=>!0).then(()=>{i&&s&&this._releaseTask(i,s)}),Af.set(e,{key:n,promise:a}),a}_createGeometry(e){const t=new ze;e.index&&t.setIndex(new ke(e.index.array,1));for(let n=0;n<e.attributes.length;n++){const i=e.attributes[n],s=i.name,r=i.array,a=i.itemSize,l=new ke(r,a);s==="color"&&(this._assignVertexColorSpace(l,i.vertexColorSpace),l.normalized=!(r instanceof Float32Array)),t.setAttribute(s,l)}return t}_assignVertexColorSpace(e,t){if(t!==At)return;const n=new le;for(let i=0,s=e.count;i<s;i++)n.fromBufferAttribute(e,i),Je.toWorkingColorSpace(n,At),e.setXYZ(i,n.r,n.g,n.b)}_loadLibrary(e,t){const n=new kn(this.manager);return n.setPath(this.decoderPath),n.setResponseType(t),n.setWithCredentials(this.withCredentials),new Promise((i,s)=>{n.load(e,i,void 0,s)})}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then(n=>{const i=n[0];e||(this.decoderConfig.wasmBinary=n[1]);const s=UI.toString(),r=["/* draco decoder */",i,"","/* worker */",s.substring(s.indexOf("{")+1,s.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([r]))}),this.decoderPending}_getWorker(e,t){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){const i=new Worker(this.workerSourceURL);i._callbacks={},i._taskCosts={},i._taskLoad=0,i.postMessage({type:"init",decoderConfig:this.decoderConfig}),i.onmessage=function(s){const r=s.data;switch(r.type){case"decode":i._callbacks[r.id].resolve(r);break;case"error":i._callbacks[r.id].reject(r);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+r.type+'"')}},this.workerPool.push(i)}else this.workerPool.sort(function(i,s){return i._taskLoad>s._taskLoad?-1:1});const n=this.workerPool[this.workerPool.length-1];return n._taskCosts[e]=t,n._taskLoad+=t,n})}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}debug(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this.workerSourceURL!==""&&URL.revokeObjectURL(this.workerSourceURL),this}}function UI(){let o,e;onmessage=function(r){const a=r.data;switch(a.type){case"init":o=a.decoderConfig,e=new Promise(function(h){o.onModuleLoaded=function(u){h({draco:u})},DracoDecoderModule(o)});break;case"decode":const l=a.buffer,c=a.taskConfig;e.then(h=>{const u=h.draco,d=new u.Decoder;try{const f=t(u,d,new Int8Array(l),c),p=f.attributes.map(m=>m.array.buffer);f.index&&p.push(f.index.array.buffer),self.postMessage({type:"decode",id:a.id,geometry:f},p)}catch(f){console.error(f),self.postMessage({type:"error",id:a.id,error:f.message})}finally{u.destroy(d)}});break}};function t(r,a,l,c){const h=c.attributeIDs,u=c.attributeTypes;let d,f;const p=a.GetEncodedGeometryType(l);if(p===r.TRIANGULAR_MESH)d=new r.Mesh,f=a.DecodeArrayToMesh(l,l.byteLength,d);else if(p===r.POINT_CLOUD)d=new r.PointCloud,f=a.DecodeArrayToPointCloud(l,l.byteLength,d);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!f.ok()||d.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+f.error_msg());const m={index:null,attributes:[]};for(const g in h){const _=self[u[g]];let y,v;if(c.useUniqueIDs)v=h[g],y=a.GetAttributeByUniqueId(d,v);else{if(v=a.GetAttributeId(d,r[h[g]]),v===-1)continue;y=a.GetAttribute(d,v)}const x=i(r,a,d,g,_,y);g==="color"&&(x.vertexColorSpace=c.vertexColorSpace),m.attributes.push(x)}return p===r.TRIANGULAR_MESH&&(m.index=n(r,a,d)),r.destroy(d),m}function n(r,a,l){const h=l.num_faces()*3,u=h*4,d=r._malloc(u);a.GetTrianglesUInt32Array(l,u,d);const f=new Uint32Array(r.HEAPF32.buffer,d,h).slice();return r._free(d),{array:f,itemSize:1}}function i(r,a,l,c,h,u){const d=u.num_components(),p=l.num_points()*d,m=p*h.BYTES_PER_ELEMENT,g=s(r,h),_=r._malloc(m);a.GetAttributeDataArrayForAllPoints(l,u,g,m,_);const y=new h(r.HEAPF32.buffer,_,p).slice();return r._free(_),{name:c,array:y,itemSize:d}}function s(r,a){switch(a){case Float32Array:return r.DT_FLOAT32;case Int8Array:return r.DT_INT8;case Int16Array:return r.DT_INT16;case Int32Array:return r.DT_INT32;case Uint8Array:return r.DT_UINT8;case Uint16Array:return r.DT_UINT16;case Uint32Array:return r.DT_UINT32}}}const OI=`

	// 空间点到椭球体表面最近投影点的计算
	vec3 getPositionToSurfacePoint( vec3 radius, vec3 pos ) {

		float EPSILON12 = 1e-12;
		float CENTER_EPS = 0.1;

		// From Cesium function Ellipsoid.scaleToGeodeticSurface
		// https://github.com/CesiumGS/cesium/blob/d11b746e5809ac115fcff65b7b0c6bdfe81dcf1c/packages/engine/Source/Core/scaleToGeodeticSurface.js#L25
		// pow(x,y)
		// x的y次幂
		vec3 invRadiusSq = 1.0 / pow( radius, vec3( 2.0 ) );
		vec3 pos2 = pos * pos * invRadiusSq;

		// Compute the squared ellipsoid norm.
		float squaredNorm = pos2.x + pos2.y + pos2.z;
		// 将点投影到椭球体表面所需的缩放比例
		float ratio = sqrt( 1.0 / squaredNorm );

		// As an initial approximation, assume that the radial intersection is the projection point.
		// 作为初步近似，假设径向交点就是投影点。
		vec3 intersection = pos * ratio;
		if ( squaredNorm < CENTER_EPS ) {
			// 返回零向量，表示点在椭球体中心附近
			return ratio > EPSILON12 ? vec3( 0.0 ) : intersection;

		}

		// Use the gradient at the intersection point in place of the true unit normal.
		// The difference in magnitude will be absorbed in the multiplier.
		// 在交点处使用梯度代替真实的单位法线。大小的差异将被乘数吸收。
		// 隐式方程
		// vec3(2x/a², 2y/b², 2z/c²)
		// 梯度向量
		vec3 gradient = intersection * invRadiusSq * 2.0;

		// Compute the initial guess at the normal vector multiplier, lambda.
		// 计算法向量乘数的初始猜测值 lambda。
		// 牛顿迭代法中用于求解空间点到椭球体表面最近投影点的初始猜测值 lambda 的公式。
		float lambda = ( 1.0 - ratio ) * length( pos ) / ( 0.5 * length( gradient ) );
		float correction = 0.0;

		float func, denominator;
		float xMultiplier, yMultiplier, zMultiplier;
		float xMultiplier2, yMultiplier2, zMultiplier2;
		float xMultiplier3, yMultiplier3, zMultiplier3;

		for ( int i = 0; i < 2; i ++ ) {

			lambda -= correction;

			xMultiplier = 1.0 / ( 1.0 + lambda * invRadiusSq.x );
			yMultiplier = 1.0 / ( 1.0 + lambda * invRadiusSq.y );
			zMultiplier = 1.0 / ( 1.0 + lambda * invRadiusSq.z );

			xMultiplier2 = xMultiplier * xMultiplier;
			yMultiplier2 = yMultiplier * yMultiplier;
			zMultiplier2 = zMultiplier * zMultiplier;

			xMultiplier3 = xMultiplier2 * xMultiplier;
			yMultiplier3 = yMultiplier2 * yMultiplier;
			zMultiplier3 = zMultiplier2 * zMultiplier;

			func = pos2.x * xMultiplier2 + pos2.y * yMultiplier2 + pos2.z * zMultiplier2 - 1.0;

			// "denominator" here refers to the use of this expression in the velocity and acceleration
			// computations in the sections to follow.
			denominator =
				pos2.x * xMultiplier3 * invRadiusSq.x +
				pos2.y * yMultiplier3 * invRadiusSq.y +
				pos2.z * zMultiplier3 * invRadiusSq.z;

			float derivative = - 2.0 * denominator;
			correction = func / derivative;

		}

		return vec3(
			pos.x * xMultiplier,
			pos.y * yMultiplier,
			pos.z * zMultiplier
		);

	}

	vec3 getPositionToNormal( vec3 radius, vec3 pos ) {

		vec3 radius2 = pow( radius, vec3( 2.0 ) );
		return normalize( pos / radius2 );

	}
`,NI=`
	float log10( float v ) {

		return log( v ) / log( 10.0 );

	}

	// 计算像素的偏导数
	float fwidth2( float v ) {

		// 偏导函数
		float vdy = dFdy( v );
		float vdx = dFdx( v );
		return length( vec2( vdy, vdx ) );

	}

	vec3 fwidth2( vec3 v ) {

		vec3 vdy = dFdy( v );
		vec3 vdx = dFdx( v );
		return sqrt( vdy * vdy + vdx * vdx );

	}
`;function FI(o,e){const t={resolution:{value:new G},pixelRatio:{value:1},ellipsoid:{value:new A},frame:{value:new de},topoColor:{value:new le},topoOpacity:{value:.5},topoLimit:{value:new G(0,1e10)},topoFadeLimit:{value:new G(0,1e10)},cartoColor:{value:new le},cartoOpacity:{value:.5},cartoLimit:{value:new G(0,1e10)},cartoFadeLimit:{value:new G(0,1e10)},thickness:{value:1}};return o.defines={...o.defines||{},USE_TOPO_ELLIPSOID:0,USE_TOPO_LINES:1},o.onBeforeCompile=n=>{BI(n),e&&e(n),n.uniforms={...n.uniforms,...t},n.vertexShader=n.vertexShader.replace(/void main\(/,i=>`

				${OI}

				#if USE_TOPO_ELLIPSOID && USE_TOPO_LINES

					// 椭球体xyz三个半轴的长度
					// ellipsoid = vec3(6378137.0, 6378137.0, 6356752.3)（WGS84 地球椭球参数）
					uniform vec3 ellipsoid;
					uniform mat4 frame;
					varying vec4 vCartographic;

				#endif

				${i}

			`).replace(/wPosition[^\n]+;/,i=>`

				${i}

				#if USE_TOPO_ELLIPSOID && USE_TOPO_LINES
				{

					mat4 invFrame = inverse( frame );
					vec3 localPosition = ( invFrame * vec4( wPosition, 1 ) ).xyz;

					// From Cesium function Ellipsoid.cartesianToCartographic
					// https://github.com/CesiumGS/cesium/blob/665ec32e813d5d6fe906ec3e87187f6c38ed5e49/packages/engine/Source/Core/Ellipsoid.js#L463
					// 计算表面点坐标
					vec3 surfacePoint = getPositionToSurfacePoint( ellipsoid, localPosition );
					// 计算表面法线
					vec3 surfaceNormal = getPositionToNormal( ellipsoid, localPosition );

					// 计算局部坐标系下的高度差
					vec3 heightDelta = localPosition - surfacePoint;
					// 计算高度值，使用符号函数来确保高度值的方向正确
					float height = sign( dot( heightDelta, localPosition ) ) * length( heightDelta );

					// 将经纬度和高度值存储到 vCartographic 中
					vCartographic.xyz = surfaceNormal;
					vCartographic.w = height;

				}
				#endif

			`),n.fragmentShader=n.fragmentShader.replace(/void main\(/,i=>`

				#if USE_TOPO_ELLIPSOID && USE_TOPO_LINES

					uniform vec3 ellipsoid;
					varying vec4 vCartographic;

				#endif

				#if USE_TOPO_LINES

					uniform vec2 resolution;
					uniform float pixelRatio;

					uniform mat4 frame;
					uniform float thickness;

					uniform vec3 topoColor;
					uniform float topoOpacity;
					uniform vec2 topoLimit;
					uniform vec2 topoFadeLimit;

					uniform vec3 cartoColor;
					uniform float cartoOpacity;
					uniform vec2 cartoLimit;
					uniform vec2 cartoFadeLimit;

					uniform mat4 projectionMatrix;

					${NI}

				#endif

				// value 世界坐标
				// delta 世界坐标的像素变化量
				// topoStep 顶点线的步长
				// thickness 顶点线的厚度
				// emphasisStride 强调线的步长
				vec3 calculateTopoLines( vec3 value, vec3 delta, vec3 topoStep, vec2 thickness, vec3 emphasisStride ) {

					vec3 halfTopoStep = topoStep * 0.5;
					vec3 lineIndex = mod( value, topoStep * emphasisStride );
					lineIndex = abs( lineIndex );
					lineIndex = step( lineIndex, topoStep * 0.5 );

					// calculate the topography lines
					// TODO: validate that these thresholds are being used correctly
					// 计算线条的厚度
					// 线条的厚度取决于当前线条的索引，如果是第一条线，则使用 thickness[0]，否则使用 thickness[1]
					vec3 topoThickness = vec3(
						lineIndex.x == 0.0 ? thickness[ 0 ] : thickness[ 1 ],
						lineIndex.y == 0.0 ? thickness[ 0 ] : thickness[ 1 ],
						lineIndex.z == 0.0 ? thickness[ 0 ] : thickness[ 1 ]
					);
					vec3 stride = 2.0 * abs( mod( value + halfTopoStep, topoStep ) - halfTopoStep );
					vec3 topo = smoothstep( delta * 0.5, delta * - 0.5, stride - delta * topoThickness );

					// handle steep surfaces that cover multiple bands
					vec3 subPixelColor = delta / topoStep;
					vec3 subPixelAlpha = smoothstep( 0.4 * topoStep, 0.5 * topoStep, delta );
					vec3 fadedTopo = mix( topo, topoStep / delta * 0.2, subPixelAlpha );

					return vec3(
						lineIndex.x == 0.0 ? 0.5 : 1.0,
						lineIndex.y == 0.0 ? 0.5 : 1.0,
						lineIndex.z == 0.0 ? 0.5 : 1.0
					) * fadedTopo;

				}

				${i}
			`).replace(/#include <color_fragment>/,i=>`

				${i}

				#if USE_TOPO_LINES
				{

					float FADE_SIZE = 0.25;
					float FADE_SIZE_HALF = FADE_SIZE * 0.5;
					float targetPixelsPerStep = pixelRatio * 1.75;

					// calculate projected screen points
					float distanceFromCamera = ( viewMatrix * vec4( wPosition, 1.0 ) ).z;
					vec4 p0 = projectionMatrix * vec4( 0, 0, distanceFromCamera, 1 );
					vec4 p1 = projectionMatrix * vec4( 1.0, 1.0, distanceFromCamera, 1 );

					// amount of pixel change per meter in screen space
					// multiple by 0.5 since the NDC value range is between [-1, 1]
					vec2 clipSpaceDelta = 0.5 * ( ( p1 / p1.w ).xy - ( p0 / p0.w ).xy );
					vec2 pixelDelta = abs( clipSpaceDelta * resolution );

					// amount of meter change per pixel
					float pixelsPerMeter = max( pixelDelta.x, pixelDelta.y );
					float metersPerPixel = 1.0 / pixelsPerMeter;
					float targetMeters = targetPixelsPerStep * metersPerPixel;

					// calculate the nearest power of 10 that the meters
					float nearestPow10 = log10( targetMeters );
					float topoAlpha = smoothstep( 1.0, 1.0 - FADE_SIZE, mod( nearestPow10, 1.0 ) );
					float topoStep = pow( 10.0, ceil( nearestPow10 ) );

					// get the height value to use for topo lines
					vec3 pos;
					#if USE_TOPO_ELLIPSOID

						vec3 surfaceNormal = vCartographic.xyz;
						pos.x = atan( surfaceNormal.y, surfaceNormal.x );
						pos.y = asin( surfaceNormal.z );
						pos.z = vCartographic.w;

						pos.xy *= 180.0 / PI;
						pos.x += 180.0;
						pos.xy *= 1000.0;

					#else

						mat4 invFrame = inverse( frame );
						vec3 localPosition = ( invFrame * vec4( wPosition, 1 ) ).xyz;
						pos = vec3( localPosition.xy * 0.1, localPosition.z );

					#endif

					// calculate the step for the narrow and thick lines, limiting the minimum stride
					vec3 step0 = max( vec3( cartoLimit.xx, topoLimit.x ), vec3( topoStep ) );
					step0 = min( vec3( cartoLimit.yy, topoLimit.y ), step0 );

					vec3 step1 = max( vec3( cartoLimit.xx, topoLimit.x ), vec3( topoStep * 10.0 ) );
					step1 = min( vec3( cartoLimit.yy, topoLimit.y ), step1 );

					// thickness and emphasis of lines
					vec2 thickness0 = vec2( 1.0, 2.0 );
					vec2 thickness1 = vec2( 1.0, 2.0 );
					vec3 emphasisStride0 = vec3( 10.0 );
					vec3 emphasisStride1 = vec3( 10.0 );
					#if USE_TOPO_ELLIPSOID

						// If our stride is at the root level then adjust the lines and emphasis so it
						// lies on the quadrant axes
						if ( step0.x > 1e4 ) {

							thickness0 = vec2( 2.0 );
							step0.x = 90.0 * 1000.0;

						}

						if ( step0.x > 1e3 ) {

							emphasisStride0.x = 9.0;

						}

						if ( step1.x > 1e4 ) {

							thickness1 = vec2( 2.0 );
							step1.x = 90.0 * 1000.0;

						}

						if ( step1.x > 1e3 ) {

							emphasisStride1.x = 9.0;

						}

					#endif

					thickness0 *= thickness * pixelRatio;
					thickness1 *= thickness * pixelRatio;

					// calculate the topo line value
					vec3 posDelta = max( fwidth2( pos ), 1e-7 );

					vec3 topo0 = calculateTopoLines( pos, posDelta, step0, thickness0, emphasisStride0 );

					vec3 topo1 = calculateTopoLines( pos, posDelta, step1, thickness1, emphasisStride1 );

					// calculate the point to fade out the topographic lines based on the unclamped step
					vec3 maxFadeLimit = vec3( cartoFadeLimit.yy, topoFadeLimit.y );
					vec3 minFadeLimit = vec3( cartoFadeLimit.xx, topoFadeLimit.x );
					vec3 maxFadeLimitAlpha = 1.0 - smoothstep( maxFadeLimit * ( 1.0 - FADE_SIZE_HALF ), maxFadeLimit * ( 1.0 + FADE_SIZE_HALF ), vec3( pow( 10.0, nearestPow10 + 1.0 ) ) );
					vec3 minFadeLimitAlpha = smoothstep( minFadeLimit * ( 1.0 - FADE_SIZE_HALF ), minFadeLimit * ( 1.0 + FADE_SIZE_HALF ), vec3( pow( 10.0, nearestPow10 + 1.0 ) ) );

					// blend the small and large topo lines
					vec3 topo = mix( topo1, topo0, topoAlpha ) * maxFadeLimitAlpha * minFadeLimitAlpha;

					// blend with the base color
					diffuseColor.rgb = mix( diffuseColor.rgb, cartoColor, max( topo.x * cartoOpacity, topo.y * cartoOpacity ) );
					diffuseColor.rgb = mix( diffuseColor.rgb, topoColor, topo.z * topoOpacity );

				}
				#endif

			`)},t}function BI(o){if(!/varying\s+vec3\s+wPosition/.test(o.vertexShader))return o.vertexShader=`
			varying vec3 wPosition;
			${o.vertexShader}
		`.replace(/#include <project_vertex>/,e=>`
				${e}
				wPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;
			`),o.fragmentShader=`
		varying vec3 wPosition;
		${o.fragmentShader}
	`,o}const kI=new A,zI=new G,jt=new A,Qc=new A,X0=new A,VI=new A,HI=new A,GI=new de,WI=new de,Ba=new A,ka=new A;class XI extends _t{constructor(){super()}dispose(){this.removeFromParent(),this.material.dispose(),this.geometry.dispose()}}class qI{get resolution(){return this._resolution}get topoOpacity(){return this.topoOpacityUniform.value}set topoOpacity(e){this.topoOpacityUniform.value!==e&&(this.topoOpacityUniform.value=e,this.updateDefines())}get cartoOpacity(){return this.cartoOpacityUniform.value}set cartoOpacity(e){this.cartoOpacityUniform.value!==e&&(this.cartoOpacityUniform.value=e,this.updateDefines())}get projection(){return this._projection}set projection(e){e!==this._projection&&(this._projection=e,this.updateDefines())}get thickness(){return this.thicknessUniform.value}set thickness(e){this.thicknessUniform.value=e}get cartoColor(){return this._cartoColor}set cartoColor(e){this._cartoColor.equals(e)||(this._cartoColor.copy(e),this.updateDefines())}constructor(e={}){const t="projection"in e?e.projection==="planar":!0,{projection:n="planar",thickness:i=1,topoColor:s=new le(16777215),topoOpacity:r=.5,topoLimit:a=t?new G(.1,1e10):new G(1,1e10),topoFadeLimit:l=t?new G(0,1e10):new G(0,1e4),cartoColor:c=new le(16777215),cartoOpacity:h=t?0:.5,cartoLimit:u=new G(.1,1e10),cartoFadeLimit:d=t?new G(0,1e10):new G(1.5*1e4,1e6)}=e;this.name="TOPO_LINES_PLUGIN",this.tiles=null,this.thicknessUniform={value:i},this.topoColor=new le().set(s),this.topoOpacityUniform={value:r},this.topoLimit=new G(...a),this.topoFadeLimit=new G(...l),this._cartoColor=new le().set(c),this.cartoOpacityUniform={value:h},this.cartoLimit=new G(...u),this.cartoFadeLimit=new G(...d),this._projection=n,this._pixelRatioUniform={value:1},this._resolution=new G(1,1),this._resolutionSampleObject=null}computeTopographicLineInfo(e,t,n={}){n.alpha=0,n.value=0,n.fade=0,n.emphasisStride=0,n.min=n.min||{step:0,stepInPixels:0},n.max=n.max||{step:0,stepInPixels:0};const{cartoLimit:i,cartoFadeLimit:s,topoLimit:r,topoFadeLimit:a}=this,l=this._pixelRatioUniform.value,c=this._resolution,h=this._projection,u=GI.copy(this.tiles.group.matrixWorld).invert(),d=WI.copy(e.matrixWorld).invert(),f=.25,p=f*.5,m=l*1.75,g=kI.copy(t).applyMatrix4(d).z,_=VI.set(0,0,g).applyMatrix4(e.projectionMatrix),y=HI.set(1,1,g).applyMatrix4(e.projectionMatrix),v=zI.subVectors(y,_).multiply(c).multiplyScalar(.5),x=Math.max(Math.abs(v.x),Math.abs(v.y)),S=1/x,T=m*S,w=Math.log10(T),E=1-ue.smoothstep(1-Math.abs(w%1),1-f,1),M=Math.pow(10,Math.ceil(w));if(h==="ellipsoid"){jt.copy(t).applyMatrix4(u);const D=this.tiles.ellipsoid;D.getPositionToSurfacePoint(jt,X0),D.getPositionToNormal(jt,Qc);const U=jt.distanceTo(X0);jt.x=Math.atan(Qc.y,Qc.x),jt.y=Math.asin(Qc.z),jt.z=U,jt.x=jt.x*ue.RAD2DEG,jt.y=jt.x*ue.RAD2DEG,jt.x+=180,jt.x*=1e3,jt.y*=1e3}else jt.copy(t).applyMatrix4(u),jt.x*=.1,jt.y*=.1;Ba.x=ue.clamp(M,i.x,i.y),Ba.y=ue.clamp(M,i.x,i.y),Ba.z=ue.clamp(M,r.x,r.y),ka.x=ue.clamp(M*10,i.x,i.y),ka.y=ue.clamp(M*10,i.x,i.y),ka.z=ue.clamp(M*10,r.x,r.y);const b=1-ue.smoothstep(a.y*(1-p),a.y*(1+p),Math.pow(10,w+1)),I=ue.smoothstep(s.y*(1-p),s.y*(1+p),Math.pow(10,w+1));return n.alpha=E,n.fade=b*I,n.value=jt.z,n.min.step=Ba.z,n.min.stepInPixels=Ba.z*x,n.max.step=ka.z,n.max.stepInPixels=ka.z*x,n}init(e){this.tiles=e,this._loadModelCallback=({scene:n})=>{n.traverse(i=>{if(i.material){const s=FI(i.material,i.material.onBeforeCompile);s.ellipsoid.value=e.ellipsoid.radius,s.frame.value=e.group.matrixWorld,s.thickness=this.thicknessUniform,s.topoColor.value=this.topoColor,s.topoOpacity=this.topoOpacityUniform,s.topoLimit.value=this.topoLimit,s.topoFadeLimit.value=this.topoFadeLimit,s.cartoColor.value=this._cartoColor,s.cartoOpacity=this.cartoOpacityUniform,s.cartoLimit.value=this.cartoLimit,s.cartoFadeLimit.value=this.cartoFadeLimit,s.resolution.value=this._resolution,s.pixelRatio=this._pixelRatioUniform,i.material.defines.USE_TOPO_ELLIPSOID=+(this.projection==="ellipsoid"),i.material.needsUpdate=!0}})},e.addEventListener("load-model",this._loadModelCallback);const t=new XI;t.frustumCulled=!1,t.onBeforeRender=n=>{const i=n.getRenderTarget();i?(this._resolution.width=i.width,this._resolution.height=i.height,this._pixelRatioUniform.value=1):(n.getDrawingBufferSize(this._resolution),this._pixelRatioUniform.value=n.getPixelRatio())},e.group.add(t),this._resolutionSampleObject=t}updateDefines(){const e=+(this.projection==="ellipsoid"),t=+!!(this.topoOpacity+this.cartoOpacity);this.tiles.forEachLoadedModel(n=>{n.traverse(i=>{if(i.material){const{defines:s}=i.material;s.USE_TOPO_ELLIPSOID!==e&&(s.USE_TOPO_ELLIPSOID=e,i.material.needsUpdate=!0),s.USE_TOPO_LINES!==t&&(s.USE_TOPO_LINES=t,i.material.needsUpdate=!0)}})})}dispose(){this.cartoOpacity=0,this.topoOpacity=0,this.tiles.removeEventListener("load-model",this._loadModelCallback),this.updateDefines(),this._resolutionSampleObject.dispose()}}function os(o){if(o===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return o}function Nv(o,e){o.prototype=Object.create(e.prototype),o.prototype.constructor=o,o.__proto__=e}/*!
 * GSAP 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var Kn={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},ta={duration:.5,overwrite:!1,delay:0},xm,tn,bt,Vi=1e8,dn=1/Vi,op=Math.PI*2,YI=op/4,$I=0,Fv=Math.sqrt,ZI=Math.cos,jI=Math.sin,Jt=function(e){return typeof e=="string"},Ut=function(e){return typeof e=="function"},ys=function(e){return typeof e=="number"},ym=function(e){return typeof e>"u"},Gi=function(e){return typeof e=="object"},On=function(e){return e!==!1},vm=function(){return typeof window<"u"},eh=function(e){return Ut(e)||Jt(e)},Bv=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},fn=Array.isArray,ap=/(?:-?\.?\d|\.)+/gi,kv=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,Oo=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Cf=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,zv=/[+-]=-?[.\d]+/,Vv=/[^,'"\[\]\s]+/gi,KI=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,Et,Fi,lp,Mm,ei={},Qh={},Hv,Gv=function(e){return(Qh=na(e,ei))&&zn},Sm=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},yl=function(e,t){return!t&&console.warn(e)},Wv=function(e,t){return e&&(ei[e]=t)&&Qh&&(Qh[e]=t)||ei},vl=function(){return 0},JI={suppressEvents:!0,isStart:!0,kill:!1},oh={suppressEvents:!0,kill:!1},QI={suppressEvents:!0},bm={},Xs=[],cp={},Xv,Xn={},Rf={},q0=30,ah=[],Tm="",wm=function(e){var t=e[0],n,i;if(Gi(t)||Ut(t)||(e=[e]),!(n=(t._gsap||{}).harness)){for(i=ah.length;i--&&!ah[i].targetTest(t););n=ah[i]}for(i=e.length;i--;)e[i]&&(e[i]._gsap||(e[i]._gsap=new mM(e[i],n)))||e.splice(i,1);return e},zr=function(e){return e._gsap||wm(gi(e))[0]._gsap},qv=function(e,t,n){return(n=e[t])&&Ut(n)?e[t]():ym(n)&&e.getAttribute&&e.getAttribute(t)||n},Nn=function(e,t){return(e=e.split(",")).forEach(t)||e},Ft=function(e){return Math.round(e*1e5)/1e5||0},Ht=function(e){return Math.round(e*1e7)/1e7||0},zo=function(e,t){var n=t.charAt(0),i=parseFloat(t.substr(2));return e=parseFloat(e),n==="+"?e+i:n==="-"?e-i:n==="*"?e*i:e/i},eL=function(e,t){for(var n=t.length,i=0;e.indexOf(t[i])<0&&++i<n;);return i<n},eu=function(){var e=Xs.length,t=Xs.slice(0),n,i;for(cp={},Xs.length=0,n=0;n<e;n++)i=t[n],i&&i._lazy&&(i.render(i._lazy[0],i._lazy[1],!0)._lazy=0)},Em=function(e){return!!(e._initted||e._startAt||e.add)},Yv=function(e,t,n,i){Xs.length&&!tn&&eu(),e.render(t,n,!!(tn&&t<0&&Em(e))),Xs.length&&!tn&&eu()},$v=function(e){var t=parseFloat(e);return(t||t===0)&&(e+"").match(Vv).length<2?t:Jt(e)?e.trim():e},Zv=function(e){return e},ti=function(e,t){for(var n in t)n in e||(e[n]=t[n]);return e},tL=function(e){return function(t,n){for(var i in n)i in t||i==="duration"&&e||i==="ease"||(t[i]=n[i])}},na=function(e,t){for(var n in t)e[n]=t[n];return e},Y0=function o(e,t){for(var n in t)n!=="__proto__"&&n!=="constructor"&&n!=="prototype"&&(e[n]=Gi(t[n])?o(e[n]||(e[n]={}),t[n]):t[n]);return e},tu=function(e,t){var n={},i;for(i in e)i in t||(n[i]=e[i]);return n},il=function(e){var t=e.parent||Et,n=e.keyframes?tL(fn(e.keyframes)):ti;if(On(e.inherit))for(;t;)n(e,t.vars.defaults),t=t.parent||t._dp;return e},nL=function(e,t){for(var n=e.length,i=n===t.length;i&&n--&&e[n]===t[n];);return n<0},jv=function(e,t,n,i,s){var r=e[i],a;if(s)for(a=t[s];r&&r[s]>a;)r=r._prev;return r?(t._next=r._next,r._next=t):(t._next=e[n],e[n]=t),t._next?t._next._prev=t:e[i]=t,t._prev=r,t.parent=t._dp=e,t},Ku=function(e,t,n,i){n===void 0&&(n="_first"),i===void 0&&(i="_last");var s=t._prev,r=t._next;s?s._next=r:e[n]===t&&(e[n]=r),r?r._prev=s:e[i]===t&&(e[i]=s),t._next=t._prev=t.parent=null},js=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove&&e.parent.remove(e),e._act=0},Vr=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var n=e;n;)n._dirty=1,n=n.parent;return e},iL=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},hp=function(e,t,n,i){return e._startAt&&(tn?e._startAt.revert(oh):e.vars.immediateRender&&!e.vars.autoRevert||e._startAt.render(t,!0,i))},sL=function o(e){return!e||e._ts&&o(e.parent)},$0=function(e){return e._repeat?ia(e._tTime,e=e.duration()+e._rDelay)*e:0},ia=function(e,t){var n=Math.floor(e=Ht(e/t));return e&&n===e?n-1:n},nu=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},Ju=function(e){return e._end=Ht(e._start+(e._tDur/Math.abs(e._ts||e._rts||dn)||0))},Qu=function(e,t){var n=e._dp;return n&&n.smoothChildTiming&&e._ts&&(e._start=Ht(n._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),Ju(e),n._dirty||Vr(n,e)),e},Kv=function(e,t){var n;if((t._time||!t._dur&&t._initted||t._start<e._time&&(t._dur||!t.add))&&(n=nu(e.rawTime(),t),(!t._dur||Gl(0,t.totalDuration(),n)-t._tTime>dn)&&t.render(n,!0)),Vr(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(n=e;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;e._zTime=-1e-8}},Bi=function(e,t,n,i){return t.parent&&js(t),t._start=Ht((ys(n)?n:n||e!==Et?ci(e,n,t):e._time)+t._delay),t._end=Ht(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),jv(e,t,"_first","_last",e._sort?"_start":0),up(t)||(e._recent=t),i||Kv(e,t),e._ts<0&&Qu(e,e._tTime),e},Jv=function(e,t){return(ei.ScrollTrigger||Sm("scrollTrigger",t))&&ei.ScrollTrigger.create(t,e)},Qv=function(e,t,n,i,s){if(Cm(e,t,s),!e._initted)return 1;if(!n&&e._pt&&!tn&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&Xv!==qn.frame)return Xs.push(e),e._lazy=[s,i],1},rL=function o(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||o(t))},up=function(e){var t=e.data;return t==="isFromStart"||t==="isStart"},oL=function(e,t,n,i){var s=e.ratio,r=t<0||!t&&(!e._start&&rL(e)&&!(!e._initted&&up(e))||(e._ts<0||e._dp._ts<0)&&!up(e))?0:1,a=e._rDelay,l=0,c,h,u;if(a&&e._repeat&&(l=Gl(0,e._tDur,t),h=ia(l,a),e._yoyo&&h&1&&(r=1-r),h!==ia(e._tTime,a)&&(s=1-r,e.vars.repeatRefresh&&e._initted&&e.invalidate())),r!==s||tn||i||e._zTime===dn||!t&&e._zTime){if(!e._initted&&Qv(e,t,i,n,l))return;for(u=e._zTime,e._zTime=t||(n?dn:0),n||(n=t&&!u),e.ratio=r,e._from&&(r=1-r),e._time=0,e._tTime=l,c=e._pt;c;)c.r(r,c.d),c=c._next;t<0&&hp(e,t,n,!0),e._onUpdate&&!n&&$n(e,"onUpdate"),l&&e._repeat&&!n&&e.parent&&$n(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===r&&(r&&js(e,1),!n&&!tn&&($n(e,r?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},aL=function(e,t,n){var i;if(n>t)for(i=e._first;i&&i._start<=n;){if(i.data==="isPause"&&i._start>t)return i;i=i._next}else for(i=e._last;i&&i._start>=n;){if(i.data==="isPause"&&i._start<t)return i;i=i._prev}},sa=function(e,t,n,i){var s=e._repeat,r=Ht(t)||0,a=e._tTime/e._tDur;return a&&!i&&(e._time*=r/e._dur),e._dur=r,e._tDur=s?s<0?1e10:Ht(r*(s+1)+e._rDelay*s):r,a>0&&!i&&Qu(e,e._tTime=e._tDur*a),e.parent&&Ju(e),n||Vr(e.parent,e),e},Z0=function(e){return e instanceof Tn?Vr(e):sa(e,e._dur)},lL={_start:0,endTime:vl,totalDuration:vl},ci=function o(e,t,n){var i=e.labels,s=e._recent||lL,r=e.duration()>=Vi?s.endTime(!1):e._dur,a,l,c;return Jt(t)&&(isNaN(t)||t in i)?(l=t.charAt(0),c=t.substr(-1)==="%",a=t.indexOf("="),l==="<"||l===">"?(a>=0&&(t=t.replace(/=/,"")),(l==="<"?s._start:s.endTime(s._repeat>=0))+(parseFloat(t.substr(1))||0)*(c?(a<0?s:n).totalDuration()/100:1)):a<0?(t in i||(i[t]=r),i[t]):(l=parseFloat(t.charAt(a-1)+t.substr(a+1)),c&&n&&(l=l/100*(fn(n)?n[0]:n).totalDuration()),a>1?o(e,t.substr(0,a-1),n)+l:r+l)):t==null?r:+t},sl=function(e,t,n){var i=ys(t[1]),s=(i?2:1)+(e<2?0:1),r=t[s],a,l;if(i&&(r.duration=t[1]),r.parent=n,e){for(a=r,l=n;l&&!("immediateRender"in a);)a=l.vars.defaults||{},l=On(l.vars.inherit)&&l.parent;r.immediateRender=On(a.immediateRender),e<2?r.runBackwards=1:r.startAt=t[s-1]}return new Vt(t[0],r,t[s+1])},tr=function(e,t){return e||e===0?t(e):t},Gl=function(e,t,n){return n<e?e:n>t?t:n},hn=function(e,t){return!Jt(e)||!(t=KI.exec(e))?"":t[1]},cL=function(e,t,n){return tr(n,function(i){return Gl(e,t,i)})},dp=[].slice,eM=function(e,t){return e&&Gi(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&Gi(e[0]))&&!e.nodeType&&e!==Fi},hL=function(e,t,n){return n===void 0&&(n=[]),e.forEach(function(i){var s;return Jt(i)&&!t||eM(i,1)?(s=n).push.apply(s,gi(i)):n.push(i)})||n},gi=function(e,t,n){return bt&&!t&&bt.selector?bt.selector(e):Jt(e)&&!n&&(lp||!ra())?dp.call((t||Mm).querySelectorAll(e),0):fn(e)?hL(e,n):eM(e)?dp.call(e,0):e?[e]:[]},fp=function(e){return e=gi(e)[0]||yl("Invalid scope")||{},function(t){var n=e.current||e.nativeElement||e;return gi(t,n.querySelectorAll?n:n===e?yl("Invalid scope")||Mm.createElement("div"):e)}},tM=function(e){return e.sort(function(){return .5-Math.random()})},nM=function(e){if(Ut(e))return e;var t=Gi(e)?e:{each:e},n=Hr(t.ease),i=t.from||0,s=parseFloat(t.base)||0,r={},a=i>0&&i<1,l=isNaN(i)||a,c=t.axis,h=i,u=i;return Jt(i)?h=u={center:.5,edges:.5,end:1}[i]||0:!a&&l&&(h=i[0],u=i[1]),function(d,f,p){var m=(p||t).length,g=r[m],_,y,v,x,S,T,w,E,M;if(!g){if(M=t.grid==="auto"?0:(t.grid||[1,Vi])[1],!M){for(w=-1e8;w<(w=p[M++].getBoundingClientRect().left)&&M<m;);M<m&&M--}for(g=r[m]=[],_=l?Math.min(M,m)*h-.5:i%M,y=M===Vi?0:l?m*u/M-.5:i/M|0,w=0,E=Vi,T=0;T<m;T++)v=T%M-_,x=y-(T/M|0),g[T]=S=c?Math.abs(c==="y"?x:v):Fv(v*v+x*x),S>w&&(w=S),S<E&&(E=S);i==="random"&&tM(g),g.max=w-E,g.min=E,g.v=m=(parseFloat(t.amount)||parseFloat(t.each)*(M>m?m-1:c?c==="y"?m/M:M:Math.max(M,m/M))||0)*(i==="edges"?-1:1),g.b=m<0?s-m:s,g.u=hn(t.amount||t.each)||0,n=n&&m<0?dM(n):n}return m=(g[d]-g.min)/g.max||0,Ht(g.b+(n?n(m):m)*g.v)+g.u}},pp=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(n){var i=Ht(Math.round(parseFloat(n)/e)*e*t);return(i-i%1)/t+(ys(n)?0:hn(n))}},iM=function(e,t){var n=fn(e),i,s;return!n&&Gi(e)&&(i=n=e.radius||Vi,e.values?(e=gi(e.values),(s=!ys(e[0]))&&(i*=i)):e=pp(e.increment)),tr(t,n?Ut(e)?function(r){return s=e(r),Math.abs(s-r)<=i?s:r}:function(r){for(var a=parseFloat(s?r.x:r),l=parseFloat(s?r.y:0),c=Vi,h=0,u=e.length,d,f;u--;)s?(d=e[u].x-a,f=e[u].y-l,d=d*d+f*f):d=Math.abs(e[u]-a),d<c&&(c=d,h=u);return h=!i||c<=i?e[h]:r,s||h===r||ys(r)?h:h+hn(r)}:pp(e))},sM=function(e,t,n,i){return tr(fn(e)?!t:n===!0?!!(n=0):!i,function(){return fn(e)?e[~~(Math.random()*e.length)]:(n=n||1e-5)&&(i=n<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((e-n/2+Math.random()*(t-e+n*.99))/n)*n*i)/i})},uL=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(i){return t.reduce(function(s,r){return r(s)},i)}},dL=function(e,t){return function(n){return e(parseFloat(n))+(t||hn(n))}},fL=function(e,t,n){return oM(e,t,0,1,n)},rM=function(e,t,n){return tr(n,function(i){return e[~~t(i)]})},pL=function o(e,t,n){var i=t-e;return fn(e)?rM(e,o(0,e.length),t):tr(n,function(s){return(i+(s-e)%i)%i+e})},mL=function o(e,t,n){var i=t-e,s=i*2;return fn(e)?rM(e,o(0,e.length-1),t):tr(n,function(r){return r=(s+(r-e)%s)%s||0,e+(r>i?s-r:r)})},Ml=function(e){for(var t=0,n="",i,s,r,a;~(i=e.indexOf("random(",t));)r=e.indexOf(")",i),a=e.charAt(i+7)==="[",s=e.substr(i+7,r-i-7).match(a?Vv:ap),n+=e.substr(t,i-t)+sM(a?s:+s[0],a?0:+s[1],+s[2]||1e-5),t=r+1;return n+e.substr(t,e.length-t)},oM=function(e,t,n,i,s){var r=t-e,a=i-n;return tr(s,function(l){return n+((l-e)/r*a||0)})},gL=function o(e,t,n,i){var s=isNaN(e+t)?0:function(f){return(1-f)*e+f*t};if(!s){var r=Jt(e),a={},l,c,h,u,d;if(n===!0&&(i=1)&&(n=null),r)e={p:e},t={p:t};else if(fn(e)&&!fn(t)){for(h=[],u=e.length,d=u-2,c=1;c<u;c++)h.push(o(e[c-1],e[c]));u--,s=function(p){p*=u;var m=Math.min(d,~~p);return h[m](p-m)},n=t}else i||(e=na(fn(e)?[]:{},e));if(!h){for(l in t)Am.call(a,e,l,"get",t[l]);s=function(p){return Im(p,a)||(r?e.p:e)}}}return tr(n,s)},j0=function(e,t,n){var i=e.labels,s=Vi,r,a,l;for(r in i)a=i[r]-t,a<0==!!n&&a&&s>(a=Math.abs(a))&&(l=r,s=a);return l},$n=function(e,t,n){var i=e.vars,s=i[t],r=bt,a=e._ctx,l,c,h;if(s)return l=i[t+"Params"],c=i.callbackScope||e,n&&Xs.length&&eu(),a&&(bt=a),h=l?s.apply(c,l):s.call(c),bt=r,h},Xa=function(e){return js(e),e.scrollTrigger&&e.scrollTrigger.kill(!!tn),e.progress()<1&&$n(e,"onInterrupt"),e},No,aM=[],lM=function(e){if(e)if(e=!e.name&&e.default||e,vm()||e.headless){var t=e.name,n=Ut(e),i=t&&!n&&e.init?function(){this._props=[]}:e,s={init:vl,render:Im,add:Am,kill:LL,modifier:IL,rawVars:0},r={targetTest:0,get:0,getSetter:Pm,aliases:{},register:0};if(ra(),e!==i){if(Xn[t])return;ti(i,ti(tu(e,s),r)),na(i.prototype,na(s,tu(e,r))),Xn[i.prop=t]=i,e.targetTest&&(ah.push(i),bm[t]=1),t=(t==="css"?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}Wv(t,i),e.register&&e.register(zn,i,Fn)}else aM.push(e)},gt=255,qa={aqua:[0,gt,gt],lime:[0,gt,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,gt],navy:[0,0,128],white:[gt,gt,gt],olive:[128,128,0],yellow:[gt,gt,0],orange:[gt,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[gt,0,0],pink:[gt,192,203],cyan:[0,gt,gt],transparent:[gt,gt,gt,0]},Pf=function(e,t,n){return e+=e<0?1:e>1?-1:0,(e*6<1?t+(n-t)*e*6:e<.5?n:e*3<2?t+(n-t)*(2/3-e)*6:t)*gt+.5|0},cM=function(e,t,n){var i=e?ys(e)?[e>>16,e>>8&gt,e&gt]:0:qa.black,s,r,a,l,c,h,u,d,f,p;if(!i){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),qa[e])i=qa[e];else if(e.charAt(0)==="#"){if(e.length<6&&(s=e.charAt(1),r=e.charAt(2),a=e.charAt(3),e="#"+s+s+r+r+a+a+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return i=parseInt(e.substr(1,6),16),[i>>16,i>>8&gt,i&gt,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),i=[e>>16,e>>8&gt,e&gt]}else if(e.substr(0,3)==="hsl"){if(i=p=e.match(ap),!t)l=+i[0]%360/360,c=+i[1]/100,h=+i[2]/100,r=h<=.5?h*(c+1):h+c-h*c,s=h*2-r,i.length>3&&(i[3]*=1),i[0]=Pf(l+1/3,s,r),i[1]=Pf(l,s,r),i[2]=Pf(l-1/3,s,r);else if(~e.indexOf("="))return i=e.match(kv),n&&i.length<4&&(i[3]=1),i}else i=e.match(ap)||qa.transparent;i=i.map(Number)}return t&&!p&&(s=i[0]/gt,r=i[1]/gt,a=i[2]/gt,u=Math.max(s,r,a),d=Math.min(s,r,a),h=(u+d)/2,u===d?l=c=0:(f=u-d,c=h>.5?f/(2-u-d):f/(u+d),l=u===s?(r-a)/f+(r<a?6:0):u===r?(a-s)/f+2:(s-r)/f+4,l*=60),i[0]=~~(l+.5),i[1]=~~(c*100+.5),i[2]=~~(h*100+.5)),n&&i.length<4&&(i[3]=1),i},hM=function(e){var t=[],n=[],i=-1;return e.split(qs).forEach(function(s){var r=s.match(Oo)||[];t.push.apply(t,r),n.push(i+=r.length+1)}),t.c=n,t},K0=function(e,t,n){var i="",s=(e+i).match(qs),r=t?"hsla(":"rgba(",a=0,l,c,h,u;if(!s)return e;if(s=s.map(function(d){return(d=cM(d,t,1))&&r+(t?d[0]+","+d[1]+"%,"+d[2]+"%,"+d[3]:d.join(","))+")"}),n&&(h=hM(e),l=n.c,l.join(i)!==h.c.join(i)))for(c=e.replace(qs,"1").split(Oo),u=c.length-1;a<u;a++)i+=c[a]+(~l.indexOf(a)?s.shift()||r+"0,0,0,0)":(h.length?h:s.length?s:n).shift());if(!c)for(c=e.split(qs),u=c.length-1;a<u;a++)i+=c[a]+s[a];return i+c[u]},qs=function(){var o="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in qa)o+="|"+e+"\\b";return new RegExp(o+")","gi")}(),_L=/hsl[a]?\(/,uM=function(e){var t=e.join(" "),n;if(qs.lastIndex=0,qs.test(t))return n=_L.test(t),e[1]=K0(e[1],n),e[0]=K0(e[0],n,hM(e[1])),!0},Sl,qn=function(){var o=Date.now,e=500,t=33,n=o(),i=n,s=1e3/240,r=s,a=[],l,c,h,u,d,f,p=function m(g){var _=o()-i,y=g===!0,v,x,S,T;if((_>e||_<0)&&(n+=_-t),i+=_,S=i-n,v=S-r,(v>0||y)&&(T=++u.frame,d=S-u.time*1e3,u.time=S=S/1e3,r+=v+(v>=s?4:s-v),x=1),y||(l=c(m)),x)for(f=0;f<a.length;f++)a[f](S,d,T,g)};return u={time:0,frame:0,tick:function(){p(!0)},deltaRatio:function(g){return d/(1e3/(g||60))},wake:function(){Hv&&(!lp&&vm()&&(Fi=lp=window,Mm=Fi.document||{},ei.gsap=zn,(Fi.gsapVersions||(Fi.gsapVersions=[])).push(zn.version),Gv(Qh||Fi.GreenSockGlobals||!Fi.gsap&&Fi||{}),aM.forEach(lM)),h=typeof requestAnimationFrame<"u"&&requestAnimationFrame,l&&u.sleep(),c=h||function(g){return setTimeout(g,r-u.time*1e3+1|0)},Sl=1,p(2))},sleep:function(){(h?cancelAnimationFrame:clearTimeout)(l),Sl=0,c=vl},lagSmoothing:function(g,_){e=g||1/0,t=Math.min(_||33,e)},fps:function(g){s=1e3/(g||240),r=u.time*1e3+s},add:function(g,_,y){var v=_?function(x,S,T,w){g(x,S,T,w),u.remove(v)}:g;return u.remove(g),a[y?"unshift":"push"](v),ra(),v},remove:function(g,_){~(_=a.indexOf(g))&&a.splice(_,1)&&f>=_&&f--},_listeners:a},u}(),ra=function(){return!Sl&&qn.wake()},et={},xL=/^[\d.\-M][\d.\-,\s]/,yL=/["']/g,vL=function(e){for(var t={},n=e.substr(1,e.length-3).split(":"),i=n[0],s=1,r=n.length,a,l,c;s<r;s++)l=n[s],a=s!==r-1?l.lastIndexOf(","):l.length,c=l.substr(0,a),t[i]=isNaN(c)?c.replace(yL,"").trim():+c,i=l.substr(a+1).trim();return t},ML=function(e){var t=e.indexOf("(")+1,n=e.indexOf(")"),i=e.indexOf("(",t);return e.substring(t,~i&&i<n?e.indexOf(")",n+1):n)},SL=function(e){var t=(e+"").split("("),n=et[t[0]];return n&&t.length>1&&n.config?n.config.apply(null,~e.indexOf("{")?[vL(t[1])]:ML(e).split(",").map($v)):et._CE&&xL.test(e)?et._CE("",e):n},dM=function(e){return function(t){return 1-e(1-t)}},fM=function o(e,t){for(var n=e._first,i;n;)n instanceof Tn?o(n,t):n.vars.yoyoEase&&(!n._yoyo||!n._repeat)&&n._yoyo!==t&&(n.timeline?o(n.timeline,t):(i=n._ease,n._ease=n._yEase,n._yEase=i,n._yoyo=t)),n=n._next},Hr=function(e,t){return e&&(Ut(e)?e:et[e]||SL(e))||t},io=function(e,t,n,i){n===void 0&&(n=function(l){return 1-t(1-l)}),i===void 0&&(i=function(l){return l<.5?t(l*2)/2:1-t((1-l)*2)/2});var s={easeIn:t,easeOut:n,easeInOut:i},r;return Nn(e,function(a){et[a]=ei[a]=s,et[r=a.toLowerCase()]=n;for(var l in s)et[r+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=et[a+"."+l]=s[l]}),s},pM=function(e){return function(t){return t<.5?(1-e(1-t*2))/2:.5+e((t-.5)*2)/2}},If=function o(e,t,n){var i=t>=1?t:1,s=(n||(e?.3:.45))/(t<1?t:1),r=s/op*(Math.asin(1/i)||0),a=function(h){return h===1?1:i*Math.pow(2,-10*h)*jI((h-r)*s)+1},l=e==="out"?a:e==="in"?function(c){return 1-a(1-c)}:pM(a);return s=op/s,l.config=function(c,h){return o(e,c,h)},l},Lf=function o(e,t){t===void 0&&(t=1.70158);var n=function(r){return r?--r*r*((t+1)*r+t)+1:0},i=e==="out"?n:e==="in"?function(s){return 1-n(1-s)}:pM(n);return i.config=function(s){return o(e,s)},i};Nn("Linear,Quad,Cubic,Quart,Quint,Strong",function(o,e){var t=e<5?e+1:e;io(o+",Power"+(t-1),e?function(n){return Math.pow(n,t)}:function(n){return n},function(n){return 1-Math.pow(1-n,t)},function(n){return n<.5?Math.pow(n*2,t)/2:1-Math.pow((1-n)*2,t)/2})});et.Linear.easeNone=et.none=et.Linear.easeIn;io("Elastic",If("in"),If("out"),If());(function(o,e){var t=1/e,n=2*t,i=2.5*t,s=function(a){return a<t?o*a*a:a<n?o*Math.pow(a-1.5/e,2)+.75:a<i?o*(a-=2.25/e)*a+.9375:o*Math.pow(a-2.625/e,2)+.984375};io("Bounce",function(r){return 1-s(1-r)},s)})(7.5625,2.75);io("Expo",function(o){return Math.pow(2,10*(o-1))*o+o*o*o*o*o*o*(1-o)});io("Circ",function(o){return-(Fv(1-o*o)-1)});io("Sine",function(o){return o===1?1:-ZI(o*YI)+1});io("Back",Lf("in"),Lf("out"),Lf());et.SteppedEase=et.steps=ei.SteppedEase={config:function(e,t){e===void 0&&(e=1);var n=1/e,i=e+(t?0:1),s=t?1:0,r=1-dn;return function(a){return((i*Gl(0,r,a)|0)+s)*n}}};ta.ease=et["quad.out"];Nn("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(o){return Tm+=o+","+o+"Params,"});var mM=function(e,t){this.id=$I++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:qv,this.set=t?t.getSetter:Pm},bl=function(){function o(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,sa(this,+t.duration,1,1),this.data=t.data,bt&&(this._ctx=bt,bt.data.push(this)),Sl||qn.wake()}var e=o.prototype;return e.delay=function(n){return n||n===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+n-this._delay),this._delay=n,this):this._delay},e.duration=function(n){return arguments.length?this.totalDuration(this._repeat>0?n+(n+this._rDelay)*this._repeat:n):this.totalDuration()&&this._dur},e.totalDuration=function(n){return arguments.length?(this._dirty=0,sa(this,this._repeat<0?n:(n-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(n,i){if(ra(),!arguments.length)return this._tTime;var s=this._dp;if(s&&s.smoothChildTiming&&this._ts){for(Qu(this,n),!s._dp||s.parent||Kv(s,this);s&&s.parent;)s.parent._time!==s._start+(s._ts>=0?s._tTime/s._ts:(s.totalDuration()-s._tTime)/-s._ts)&&s.totalTime(s._tTime,!0),s=s.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&n<this._tDur||this._ts<0&&n>0||!this._tDur&&!n)&&Bi(this._dp,this,this._start-this._delay)}return(this._tTime!==n||!this._dur&&!i||this._initted&&Math.abs(this._zTime)===dn||!n&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=n),Yv(this,n,i)),this},e.time=function(n,i){return arguments.length?this.totalTime(Math.min(this.totalDuration(),n+$0(this))%(this._dur+this._rDelay)||(n?this._dur:0),i):this._time},e.totalProgress=function(n,i){return arguments.length?this.totalTime(this.totalDuration()*n,i):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.rawTime()>=0&&this._initted?1:0},e.progress=function(n,i){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-n:n)+$0(this),i):this.duration()?Math.min(1,this._time/this._dur):this.rawTime()>0?1:0},e.iteration=function(n,i){var s=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(n-1)*s,i):this._repeat?ia(this._tTime,s)+1:1},e.timeScale=function(n,i){if(!arguments.length)return this._rts===-1e-8?0:this._rts;if(this._rts===n)return this;var s=this.parent&&this._ts?nu(this.parent._time,this):this._tTime;return this._rts=+n||0,this._ts=this._ps||n===-1e-8?0:this._rts,this.totalTime(Gl(-Math.abs(this._delay),this.totalDuration(),s),i!==!1),Ju(this),iL(this)},e.paused=function(n){return arguments.length?(this._ps!==n&&(this._ps=n,n?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(ra(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==dn&&(this._tTime-=dn)))),this):this._ps},e.startTime=function(n){if(arguments.length){this._start=n;var i=this.parent||this._dp;return i&&(i._sort||!this.parent)&&Bi(i,this,n-this._delay),this}return this._start},e.endTime=function(n){return this._start+(On(n)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(n){var i=this.parent||this._dp;return i?n&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?nu(i.rawTime(n),this):this._tTime:this._tTime},e.revert=function(n){n===void 0&&(n=QI);var i=tn;return tn=n,Em(this)&&(this.timeline&&this.timeline.revert(n),this.totalTime(-.01,n.suppressEvents)),this.data!=="nested"&&n.kill!==!1&&this.kill(),tn=i,this},e.globalTime=function(n){for(var i=this,s=arguments.length?n:i.rawTime();i;)s=i._start+s/(Math.abs(i._ts)||1),i=i._dp;return!this.parent&&this._sat?this._sat.globalTime(n):s},e.repeat=function(n){return arguments.length?(this._repeat=n===1/0?-2:n,Z0(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(n){if(arguments.length){var i=this._time;return this._rDelay=n,Z0(this),i?this.time(i):this}return this._rDelay},e.yoyo=function(n){return arguments.length?(this._yoyo=n,this):this._yoyo},e.seek=function(n,i){return this.totalTime(ci(this,n),On(i))},e.restart=function(n,i){return this.play().totalTime(n?-this._delay:0,On(i)),this._dur||(this._zTime=-1e-8),this},e.play=function(n,i){return n!=null&&this.seek(n,i),this.reversed(!1).paused(!1)},e.reverse=function(n,i){return n!=null&&this.seek(n||this.totalDuration(),i),this.reversed(!0).paused(!1)},e.pause=function(n,i){return n!=null&&this.seek(n,i),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(n){return arguments.length?(!!n!==this.reversed()&&this.timeScale(-this._rts||(n?-1e-8:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-1e-8,this},e.isActive=function(){var n=this.parent||this._dp,i=this._start,s;return!!(!n||this._ts&&this._initted&&n.isActive()&&(s=n.rawTime(!0))>=i&&s<this.endTime(!0)-dn)},e.eventCallback=function(n,i,s){var r=this.vars;return arguments.length>1?(i?(r[n]=i,s&&(r[n+"Params"]=s),n==="onUpdate"&&(this._onUpdate=i)):delete r[n],this):r[n]},e.then=function(n){var i=this;return new Promise(function(s){var r=Ut(n)?n:Zv,a=function(){var c=i.then;i.then=null,Ut(r)&&(r=r(i))&&(r.then||r===i)&&(i.then=c),s(r),i.then=c};i._initted&&i.totalProgress()===1&&i._ts>=0||!i._tTime&&i._ts<0?a():i._prom=a})},e.kill=function(){Xa(this)},o}();ti(bl.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-1e-8,_prom:0,_ps:!1,_rts:1});var Tn=function(o){Nv(e,o);function e(n,i){var s;return n===void 0&&(n={}),s=o.call(this,n)||this,s.labels={},s.smoothChildTiming=!!n.smoothChildTiming,s.autoRemoveChildren=!!n.autoRemoveChildren,s._sort=On(n.sortChildren),Et&&Bi(n.parent||Et,os(s),i),n.reversed&&s.reverse(),n.paused&&s.paused(!0),n.scrollTrigger&&Jv(os(s),n.scrollTrigger),s}var t=e.prototype;return t.to=function(i,s,r){return sl(0,arguments,this),this},t.from=function(i,s,r){return sl(1,arguments,this),this},t.fromTo=function(i,s,r,a){return sl(2,arguments,this),this},t.set=function(i,s,r){return s.duration=0,s.parent=this,il(s).repeatDelay||(s.repeat=0),s.immediateRender=!!s.immediateRender,new Vt(i,s,ci(this,r),1),this},t.call=function(i,s,r){return Bi(this,Vt.delayedCall(0,i,s),r)},t.staggerTo=function(i,s,r,a,l,c,h){return r.duration=s,r.stagger=r.stagger||a,r.onComplete=c,r.onCompleteParams=h,r.parent=this,new Vt(i,r,ci(this,l)),this},t.staggerFrom=function(i,s,r,a,l,c,h){return r.runBackwards=1,il(r).immediateRender=On(r.immediateRender),this.staggerTo(i,s,r,a,l,c,h)},t.staggerFromTo=function(i,s,r,a,l,c,h,u){return a.startAt=r,il(a).immediateRender=On(a.immediateRender),this.staggerTo(i,s,a,l,c,h,u)},t.render=function(i,s,r){var a=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,h=i<=0?0:Ht(i),u=this._zTime<0!=i<0&&(this._initted||!c),d,f,p,m,g,_,y,v,x,S,T,w;if(this!==Et&&h>l&&i>=0&&(h=l),h!==this._tTime||r||u){if(a!==this._time&&c&&(h+=this._time-a,i+=this._time-a),d=h,x=this._start,v=this._ts,_=!v,u&&(c||(a=this._zTime),(i||!s)&&(this._zTime=i)),this._repeat){if(T=this._yoyo,g=c+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(g*100+i,s,r);if(d=Ht(h%g),h===l?(m=this._repeat,d=c):(S=Ht(h/g),m=~~S,m&&m===S&&(d=c,m--),d>c&&(d=c)),S=ia(this._tTime,g),!a&&this._tTime&&S!==m&&this._tTime-S*g-this._dur<=0&&(S=m),T&&m&1&&(d=c-d,w=1),m!==S&&!this._lock){var E=T&&S&1,M=E===(T&&m&1);if(m<S&&(E=!E),a=E?0:h%c?c:h,this._lock=1,this.render(a||(w?0:Ht(m*g)),s,!c)._lock=0,this._tTime=h,!s&&this.parent&&$n(this,"onRepeat"),this.vars.repeatRefresh&&!w&&(this.invalidate()._lock=1),a&&a!==this._time||_!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,M&&(this._lock=2,a=E?c:-1e-4,this.render(a,!0),this.vars.repeatRefresh&&!w&&this.invalidate()),this._lock=0,!this._ts&&!_)return this;fM(this,w)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(y=aL(this,Ht(a),Ht(d)),y&&(h-=d-(d=y._start))),this._tTime=h,this._time=d,this._act=!v,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=i,a=0),!a&&h&&!s&&!S&&($n(this,"onStart"),this._tTime!==h))return this;if(d>=a&&i>=0)for(f=this._first;f;){if(p=f._next,(f._act||d>=f._start)&&f._ts&&y!==f){if(f.parent!==this)return this.render(i,s,r);if(f.render(f._ts>0?(d-f._start)*f._ts:(f._dirty?f.totalDuration():f._tDur)+(d-f._start)*f._ts,s,r),d!==this._time||!this._ts&&!_){y=0,p&&(h+=this._zTime=-1e-8);break}}f=p}else{f=this._last;for(var b=i<0?i:d;f;){if(p=f._prev,(f._act||b<=f._end)&&f._ts&&y!==f){if(f.parent!==this)return this.render(i,s,r);if(f.render(f._ts>0?(b-f._start)*f._ts:(f._dirty?f.totalDuration():f._tDur)+(b-f._start)*f._ts,s,r||tn&&Em(f)),d!==this._time||!this._ts&&!_){y=0,p&&(h+=this._zTime=b?-1e-8:dn);break}}f=p}}if(y&&!s&&(this.pause(),y.render(d>=a?0:-1e-8)._zTime=d>=a?1:-1,this._ts))return this._start=x,Ju(this),this.render(i,s,r);this._onUpdate&&!s&&$n(this,"onUpdate",!0),(h===l&&this._tTime>=this.totalDuration()||!h&&a)&&(x===this._start||Math.abs(v)!==Math.abs(this._ts))&&(this._lock||((i||!c)&&(h===l&&this._ts>0||!h&&this._ts<0)&&js(this,1),!s&&!(i<0&&!a)&&(h||a||!l)&&($n(this,h===l&&i>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(h<l&&this.timeScale()>0)&&this._prom())))}return this},t.add=function(i,s){var r=this;if(ys(s)||(s=ci(this,s,i)),!(i instanceof bl)){if(fn(i))return i.forEach(function(a){return r.add(a,s)}),this;if(Jt(i))return this.addLabel(i,s);if(Ut(i))i=Vt.delayedCall(0,i);else return this}return this!==i?Bi(this,i,s):this},t.getChildren=function(i,s,r,a){i===void 0&&(i=!0),s===void 0&&(s=!0),r===void 0&&(r=!0),a===void 0&&(a=-1e8);for(var l=[],c=this._first;c;)c._start>=a&&(c instanceof Vt?s&&l.push(c):(r&&l.push(c),i&&l.push.apply(l,c.getChildren(!0,s,r)))),c=c._next;return l},t.getById=function(i){for(var s=this.getChildren(1,1,1),r=s.length;r--;)if(s[r].vars.id===i)return s[r]},t.remove=function(i){return Jt(i)?this.removeLabel(i):Ut(i)?this.killTweensOf(i):(i.parent===this&&Ku(this,i),i===this._recent&&(this._recent=this._last),Vr(this))},t.totalTime=function(i,s){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=Ht(qn.time-(this._ts>0?i/this._ts:(this.totalDuration()-i)/-this._ts))),o.prototype.totalTime.call(this,i,s),this._forcing=0,this):this._tTime},t.addLabel=function(i,s){return this.labels[i]=ci(this,s),this},t.removeLabel=function(i){return delete this.labels[i],this},t.addPause=function(i,s,r){var a=Vt.delayedCall(0,s||vl,r);return a.data="isPause",this._hasPause=1,Bi(this,a,ci(this,i))},t.removePause=function(i){var s=this._first;for(i=ci(this,i);s;)s._start===i&&s.data==="isPause"&&js(s),s=s._next},t.killTweensOf=function(i,s,r){for(var a=this.getTweensOf(i,r),l=a.length;l--;)zs!==a[l]&&a[l].kill(i,s);return this},t.getTweensOf=function(i,s){for(var r=[],a=gi(i),l=this._first,c=ys(s),h;l;)l instanceof Vt?eL(l._targets,a)&&(c?(!zs||l._initted&&l._ts)&&l.globalTime(0)<=s&&l.globalTime(l.totalDuration())>s:!s||l.isActive())&&r.push(l):(h=l.getTweensOf(a,s)).length&&r.push.apply(r,h),l=l._next;return r},t.tweenTo=function(i,s){s=s||{};var r=this,a=ci(r,i),l=s,c=l.startAt,h=l.onStart,u=l.onStartParams,d=l.immediateRender,f,p=Vt.to(r,ti({ease:s.ease||"none",lazy:!1,immediateRender:!1,time:a,overwrite:"auto",duration:s.duration||Math.abs((a-(c&&"time"in c?c.time:r._time))/r.timeScale())||dn,onStart:function(){if(r.pause(),!f){var g=s.duration||Math.abs((a-(c&&"time"in c?c.time:r._time))/r.timeScale());p._dur!==g&&sa(p,g,0,1).render(p._time,!0,!0),f=1}h&&h.apply(p,u||[])}},s));return d?p.render(0):p},t.tweenFromTo=function(i,s,r){return this.tweenTo(s,ti({startAt:{time:ci(this,i)}},r))},t.recent=function(){return this._recent},t.nextLabel=function(i){return i===void 0&&(i=this._time),j0(this,ci(this,i))},t.previousLabel=function(i){return i===void 0&&(i=this._time),j0(this,ci(this,i),1)},t.currentLabel=function(i){return arguments.length?this.seek(i,!0):this.previousLabel(this._time+dn)},t.shiftChildren=function(i,s,r){r===void 0&&(r=0);for(var a=this._first,l=this.labels,c;a;)a._start>=r&&(a._start+=i,a._end+=i),a=a._next;if(s)for(c in l)l[c]>=r&&(l[c]+=i);return Vr(this)},t.invalidate=function(i){var s=this._first;for(this._lock=0;s;)s.invalidate(i),s=s._next;return o.prototype.invalidate.call(this,i)},t.clear=function(i){i===void 0&&(i=!0);for(var s=this._first,r;s;)r=s._next,this.remove(s),s=r;return this._dp&&(this._time=this._tTime=this._pTime=0),i&&(this.labels={}),Vr(this)},t.totalDuration=function(i){var s=0,r=this,a=r._last,l=Vi,c,h,u;if(arguments.length)return r.timeScale((r._repeat<0?r.duration():r.totalDuration())/(r.reversed()?-i:i));if(r._dirty){for(u=r.parent;a;)c=a._prev,a._dirty&&a.totalDuration(),h=a._start,h>l&&r._sort&&a._ts&&!r._lock?(r._lock=1,Bi(r,a,h-a._delay,1)._lock=0):l=h,h<0&&a._ts&&(s-=h,(!u&&!r._dp||u&&u.smoothChildTiming)&&(r._start+=h/r._ts,r._time-=h,r._tTime-=h),r.shiftChildren(-h,!1,-1/0),l=0),a._end>s&&a._ts&&(s=a._end),a=c;sa(r,r===Et&&r._time>s?r._time:s,1,1),r._dirty=0}return r._tDur},e.updateRoot=function(i){if(Et._ts&&(Yv(Et,nu(i,Et)),Xv=qn.frame),qn.frame>=q0){q0+=Kn.autoSleep||120;var s=Et._first;if((!s||!s._ts)&&Kn.autoSleep&&qn._listeners.length<2){for(;s&&!s._ts;)s=s._next;s||qn.sleep()}}},e}(bl);ti(Tn.prototype,{_lock:0,_hasPause:0,_forcing:0});var bL=function(e,t,n,i,s,r,a){var l=new Fn(this._pt,e,t,0,1,MM,null,s),c=0,h=0,u,d,f,p,m,g,_,y;for(l.b=n,l.e=i,n+="",i+="",(_=~i.indexOf("random("))&&(i=Ml(i)),r&&(y=[n,i],r(y,e,t),n=y[0],i=y[1]),d=n.match(Cf)||[];u=Cf.exec(i);)p=u[0],m=i.substring(c,u.index),f?f=(f+1)%5:m.substr(-5)==="rgba("&&(f=1),p!==d[h++]&&(g=parseFloat(d[h-1])||0,l._pt={_next:l._pt,p:m||h===1?m:",",s:g,c:p.charAt(1)==="="?zo(g,p)-g:parseFloat(p)-g,m:f&&f<4?Math.round:0},c=Cf.lastIndex);return l.c=c<i.length?i.substring(c,i.length):"",l.fp=a,(zv.test(i)||_)&&(l.e=0),this._pt=l,l},Am=function(e,t,n,i,s,r,a,l,c,h){Ut(i)&&(i=i(s||0,e,r));var u=e[t],d=n!=="get"?n:Ut(u)?c?e[t.indexOf("set")||!Ut(e["get"+t.substr(3)])?t:"get"+t.substr(3)](c):e[t]():u,f=Ut(u)?c?CL:yM:Rm,p;if(Jt(i)&&(~i.indexOf("random(")&&(i=Ml(i)),i.charAt(1)==="="&&(p=zo(d,i)+(hn(d)||0),(p||p===0)&&(i=p))),!h||d!==i||mp)return!isNaN(d*i)&&i!==""?(p=new Fn(this._pt,e,t,+d||0,i-(d||0),typeof u=="boolean"?PL:vM,0,f),c&&(p.fp=c),a&&p.modifier(a,this,e),this._pt=p):(!u&&!(t in e)&&Sm(t,i),bL.call(this,e,t,d,i,f,l||Kn.stringFilter,c))},TL=function(e,t,n,i,s){if(Ut(e)&&(e=rl(e,s,t,n,i)),!Gi(e)||e.style&&e.nodeType||fn(e)||Bv(e))return Jt(e)?rl(e,s,t,n,i):e;var r={},a;for(a in e)r[a]=rl(e[a],s,t,n,i);return r},gM=function(e,t,n,i,s,r){var a,l,c,h;if(Xn[e]&&(a=new Xn[e]).init(s,a.rawVars?t[e]:TL(t[e],i,s,r,n),n,i,r)!==!1&&(n._pt=l=new Fn(n._pt,s,e,0,1,a.render,a,0,a.priority),n!==No))for(c=n._ptLookup[n._targets.indexOf(s)],h=a._props.length;h--;)c[a._props[h]]=l;return a},zs,mp,Cm=function o(e,t,n){var i=e.vars,s=i.ease,r=i.startAt,a=i.immediateRender,l=i.lazy,c=i.onUpdate,h=i.runBackwards,u=i.yoyoEase,d=i.keyframes,f=i.autoRevert,p=e._dur,m=e._startAt,g=e._targets,_=e.parent,y=_&&_.data==="nested"?_.vars.targets:g,v=e._overwrite==="auto"&&!xm,x=e.timeline,S,T,w,E,M,b,I,D,U,O,V,F,$;if(x&&(!d||!s)&&(s="none"),e._ease=Hr(s,ta.ease),e._yEase=u?dM(Hr(u===!0?s:u,ta.ease)):0,u&&e._yoyo&&!e._repeat&&(u=e._yEase,e._yEase=e._ease,e._ease=u),e._from=!x&&!!i.runBackwards,!x||d&&!i.stagger){if(D=g[0]?zr(g[0]).harness:0,F=D&&i[D.prop],S=tu(i,bm),m&&(m._zTime<0&&m.progress(1),t<0&&h&&a&&!f?m.render(-1,!0):m.revert(h&&p?oh:JI),m._lazy=0),r){if(js(e._startAt=Vt.set(g,ti({data:"isStart",overwrite:!1,parent:_,immediateRender:!0,lazy:!m&&On(l),startAt:null,delay:0,onUpdate:c&&function(){return $n(e,"onUpdate")},stagger:0},r))),e._startAt._dp=0,e._startAt._sat=e,t<0&&(tn||!a&&!f)&&e._startAt.revert(oh),a&&p&&t<=0&&n<=0){t&&(e._zTime=t);return}}else if(h&&p&&!m){if(t&&(a=!1),w=ti({overwrite:!1,data:"isFromStart",lazy:a&&!m&&On(l),immediateRender:a,stagger:0,parent:_},S),F&&(w[D.prop]=F),js(e._startAt=Vt.set(g,w)),e._startAt._dp=0,e._startAt._sat=e,t<0&&(tn?e._startAt.revert(oh):e._startAt.render(-1,!0)),e._zTime=t,!a)o(e._startAt,dn,dn);else if(!t)return}for(e._pt=e._ptCache=0,l=p&&On(l)||l&&!p,T=0;T<g.length;T++){if(M=g[T],I=M._gsap||wm(g)[T]._gsap,e._ptLookup[T]=O={},cp[I.id]&&Xs.length&&eu(),V=y===g?T:y.indexOf(M),D&&(U=new D).init(M,F||S,e,V,y)!==!1&&(e._pt=E=new Fn(e._pt,M,U.name,0,1,U.render,U,0,U.priority),U._props.forEach(function(H){O[H]=E}),U.priority&&(b=1)),!D||F)for(w in S)Xn[w]&&(U=gM(w,S,e,V,M,y))?U.priority&&(b=1):O[w]=E=Am.call(e,M,w,"get",S[w],V,y,0,i.stringFilter);e._op&&e._op[T]&&e.kill(M,e._op[T]),v&&e._pt&&(zs=e,Et.killTweensOf(M,O,e.globalTime(t)),$=!e.parent,zs=0),e._pt&&l&&(cp[I.id]=1)}b&&SM(e),e._onInit&&e._onInit(e)}e._onUpdate=c,e._initted=(!e._op||e._pt)&&!$,d&&t<=0&&x.render(Vi,!0,!0)},wL=function(e,t,n,i,s,r,a,l){var c=(e._pt&&e._ptCache||(e._ptCache={}))[t],h,u,d,f;if(!c)for(c=e._ptCache[t]=[],d=e._ptLookup,f=e._targets.length;f--;){if(h=d[f][t],h&&h.d&&h.d._pt)for(h=h.d._pt;h&&h.p!==t&&h.fp!==t;)h=h._next;if(!h)return mp=1,e.vars[t]="+=0",Cm(e,a),mp=0,l?yl(t+" not eligible for reset"):1;c.push(h)}for(f=c.length;f--;)u=c[f],h=u._pt||u,h.s=(i||i===0)&&!s?i:h.s+(i||0)+r*h.c,h.c=n-h.s,u.e&&(u.e=Ft(n)+hn(u.e)),u.b&&(u.b=h.s+hn(u.b))},EL=function(e,t){var n=e[0]?zr(e[0]).harness:0,i=n&&n.aliases,s,r,a,l;if(!i)return t;s=na({},t);for(r in i)if(r in s)for(l=i[r].split(","),a=l.length;a--;)s[l[a]]=s[r];return s},AL=function(e,t,n,i){var s=t.ease||i||"power1.inOut",r,a;if(fn(t))a=n[e]||(n[e]=[]),t.forEach(function(l,c){return a.push({t:c/(t.length-1)*100,v:l,e:s})});else for(r in t)a=n[r]||(n[r]=[]),r==="ease"||a.push({t:parseFloat(e),v:t[r],e:s})},rl=function(e,t,n,i,s){return Ut(e)?e.call(t,n,i,s):Jt(e)&&~e.indexOf("random(")?Ml(e):e},_M=Tm+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",xM={};Nn(_M+",id,stagger,delay,duration,paused,scrollTrigger",function(o){return xM[o]=1});var Vt=function(o){Nv(e,o);function e(n,i,s,r){var a;typeof i=="number"&&(s.duration=i,i=s,s=null),a=o.call(this,r?i:il(i))||this;var l=a.vars,c=l.duration,h=l.delay,u=l.immediateRender,d=l.stagger,f=l.overwrite,p=l.keyframes,m=l.defaults,g=l.scrollTrigger,_=l.yoyoEase,y=i.parent||Et,v=(fn(n)||Bv(n)?ys(n[0]):"length"in i)?[n]:gi(n),x,S,T,w,E,M,b,I;if(a._targets=v.length?wm(v):yl("GSAP target "+n+" not found. https://gsap.com",!Kn.nullTargetWarn)||[],a._ptLookup=[],a._overwrite=f,p||d||eh(c)||eh(h)){if(i=a.vars,x=a.timeline=new Tn({data:"nested",defaults:m||{},targets:y&&y.data==="nested"?y.vars.targets:v}),x.kill(),x.parent=x._dp=os(a),x._start=0,d||eh(c)||eh(h)){if(w=v.length,b=d&&nM(d),Gi(d))for(E in d)~_M.indexOf(E)&&(I||(I={}),I[E]=d[E]);for(S=0;S<w;S++)T=tu(i,xM),T.stagger=0,_&&(T.yoyoEase=_),I&&na(T,I),M=v[S],T.duration=+rl(c,os(a),S,M,v),T.delay=(+rl(h,os(a),S,M,v)||0)-a._delay,!d&&w===1&&T.delay&&(a._delay=h=T.delay,a._start+=h,T.delay=0),x.to(M,T,b?b(S,M,v):0),x._ease=et.none;x.duration()?c=h=0:a.timeline=0}else if(p){il(ti(x.vars.defaults,{ease:"none"})),x._ease=Hr(p.ease||i.ease||"none");var D=0,U,O,V;if(fn(p))p.forEach(function(F){return x.to(v,F,">")}),x.duration();else{T={};for(E in p)E==="ease"||E==="easeEach"||AL(E,p[E],T,p.easeEach);for(E in T)for(U=T[E].sort(function(F,$){return F.t-$.t}),D=0,S=0;S<U.length;S++)O=U[S],V={ease:O.e,duration:(O.t-(S?U[S-1].t:0))/100*c},V[E]=O.v,x.to(v,V,D),D+=V.duration;x.duration()<c&&x.to({},{duration:c-x.duration()})}}c||a.duration(c=x.duration())}else a.timeline=0;return f===!0&&!xm&&(zs=os(a),Et.killTweensOf(v),zs=0),Bi(y,os(a),s),i.reversed&&a.reverse(),i.paused&&a.paused(!0),(u||!c&&!p&&a._start===Ht(y._time)&&On(u)&&sL(os(a))&&y.data!=="nested")&&(a._tTime=-1e-8,a.render(Math.max(0,-h)||0)),g&&Jv(os(a),g),a}var t=e.prototype;return t.render=function(i,s,r){var a=this._time,l=this._tDur,c=this._dur,h=i<0,u=i>l-dn&&!h?l:i<dn?0:i,d,f,p,m,g,_,y,v,x;if(!c)oL(this,i,s,r);else if(u!==this._tTime||!i||r||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==h||this._lazy){if(d=u,v=this.timeline,this._repeat){if(m=c+this._rDelay,this._repeat<-1&&h)return this.totalTime(m*100+i,s,r);if(d=Ht(u%m),u===l?(p=this._repeat,d=c):(g=Ht(u/m),p=~~g,p&&p===g?(d=c,p--):d>c&&(d=c)),_=this._yoyo&&p&1,_&&(x=this._yEase,d=c-d),g=ia(this._tTime,m),d===a&&!r&&this._initted&&p===g)return this._tTime=u,this;p!==g&&(v&&this._yEase&&fM(v,_),this.vars.repeatRefresh&&!_&&!this._lock&&d!==m&&this._initted&&(this._lock=r=1,this.render(Ht(m*p),!0).invalidate()._lock=0))}if(!this._initted){if(Qv(this,h?i:d,r,s,u))return this._tTime=0,this;if(a!==this._time&&!(r&&this.vars.repeatRefresh&&p!==g))return this;if(c!==this._dur)return this.render(i,s,r)}if(this._tTime=u,this._time=d,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=y=(x||this._ease)(d/c),this._from&&(this.ratio=y=1-y),!a&&u&&!s&&!g&&($n(this,"onStart"),this._tTime!==u))return this;for(f=this._pt;f;)f.r(y,f.d),f=f._next;v&&v.render(i<0?i:v._dur*v._ease(d/this._dur),s,r)||this._startAt&&(this._zTime=i),this._onUpdate&&!s&&(h&&hp(this,i,s,r),$n(this,"onUpdate")),this._repeat&&p!==g&&this.vars.onRepeat&&!s&&this.parent&&$n(this,"onRepeat"),(u===this._tDur||!u)&&this._tTime===u&&(h&&!this._onUpdate&&hp(this,i,!0,!0),(i||!c)&&(u===this._tDur&&this._ts>0||!u&&this._ts<0)&&js(this,1),!s&&!(h&&!a)&&(u||a||_)&&($n(this,u===l?"onComplete":"onReverseComplete",!0),this._prom&&!(u<l&&this.timeScale()>0)&&this._prom()))}return this},t.targets=function(){return this._targets},t.invalidate=function(i){return(!i||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(i),o.prototype.invalidate.call(this,i)},t.resetTo=function(i,s,r,a,l){Sl||qn.wake(),this._ts||this.play();var c=Math.min(this._dur,(this._dp._time-this._start)*this._ts),h;return this._initted||Cm(this,c),h=this._ease(c/this._dur),wL(this,i,s,r,a,h,c,l)?this.resetTo(i,s,r,a,1):(Qu(this,0),this.parent||jv(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},t.kill=function(i,s){if(s===void 0&&(s="all"),!i&&(!s||s==="all"))return this._lazy=this._pt=0,this.parent?Xa(this):this.scrollTrigger&&this.scrollTrigger.kill(!!tn),this;if(this.timeline){var r=this.timeline.totalDuration();return this.timeline.killTweensOf(i,s,zs&&zs.vars.overwrite!==!0)._first||Xa(this),this.parent&&r!==this.timeline.totalDuration()&&sa(this,this._dur*this.timeline._tDur/r,0,1),this}var a=this._targets,l=i?gi(i):a,c=this._ptLookup,h=this._pt,u,d,f,p,m,g,_;if((!s||s==="all")&&nL(a,l))return s==="all"&&(this._pt=0),Xa(this);for(u=this._op=this._op||[],s!=="all"&&(Jt(s)&&(m={},Nn(s,function(y){return m[y]=1}),s=m),s=EL(a,s)),_=a.length;_--;)if(~l.indexOf(a[_])){d=c[_],s==="all"?(u[_]=s,p=d,f={}):(f=u[_]=u[_]||{},p=s);for(m in p)g=d&&d[m],g&&((!("kill"in g.d)||g.d.kill(m)===!0)&&Ku(this,g,"_pt"),delete d[m]),f!=="all"&&(f[m]=1)}return this._initted&&!this._pt&&h&&Xa(this),this},e.to=function(i,s){return new e(i,s,arguments[2])},e.from=function(i,s){return sl(1,arguments)},e.delayedCall=function(i,s,r,a){return new e(s,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:i,onComplete:s,onReverseComplete:s,onCompleteParams:r,onReverseCompleteParams:r,callbackScope:a})},e.fromTo=function(i,s,r){return sl(2,arguments)},e.set=function(i,s){return s.duration=0,s.repeatDelay||(s.repeat=0),new e(i,s)},e.killTweensOf=function(i,s,r){return Et.killTweensOf(i,s,r)},e}(bl);ti(Vt.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});Nn("staggerTo,staggerFrom,staggerFromTo",function(o){Vt[o]=function(){var e=new Tn,t=dp.call(arguments,0);return t.splice(o==="staggerFromTo"?5:4,0,0),e[o].apply(e,t)}});var Rm=function(e,t,n){return e[t]=n},yM=function(e,t,n){return e[t](n)},CL=function(e,t,n,i){return e[t](i.fp,n)},RL=function(e,t,n){return e.setAttribute(t,n)},Pm=function(e,t){return Ut(e[t])?yM:ym(e[t])&&e.setAttribute?RL:Rm},vM=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e6)/1e6,t)},PL=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},MM=function(e,t){var n=t._pt,i="";if(!e&&t.b)i=t.b;else if(e===1&&t.e)i=t.e;else{for(;n;)i=n.p+(n.m?n.m(n.s+n.c*e):Math.round((n.s+n.c*e)*1e4)/1e4)+i,n=n._next;i+=t.c}t.set(t.t,t.p,i,t)},Im=function(e,t){for(var n=t._pt;n;)n.r(e,n.d),n=n._next},IL=function(e,t,n,i){for(var s=this._pt,r;s;)r=s._next,s.p===i&&s.modifier(e,t,n),s=r},LL=function(e){for(var t=this._pt,n,i;t;)i=t._next,t.p===e&&!t.op||t.op===e?Ku(this,t,"_pt"):t.dep||(n=1),t=i;return!n},DL=function(e,t,n,i){i.mSet(e,t,i.m.call(i.tween,n,i.mt),i)},SM=function(e){for(var t=e._pt,n,i,s,r;t;){for(n=t._next,i=s;i&&i.pr>t.pr;)i=i._next;(t._prev=i?i._prev:r)?t._prev._next=t:s=t,(t._next=i)?i._prev=t:r=t,t=n}e._pt=s},Fn=function(){function o(t,n,i,s,r,a,l,c,h){this.t=n,this.s=s,this.c=r,this.p=i,this.r=a||vM,this.d=l||this,this.set=c||Rm,this.pr=h||0,this._next=t,t&&(t._prev=this)}var e=o.prototype;return e.modifier=function(n,i,s){this.mSet=this.mSet||this.set,this.set=DL,this.m=n,this.mt=s,this.tween=i},o}();Nn(Tm+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(o){return bm[o]=1});ei.TweenMax=ei.TweenLite=Vt;ei.TimelineLite=ei.TimelineMax=Tn;Et=new Tn({sortChildren:!1,defaults:ta,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});Kn.stringFilter=uM;var Gr=[],lh={},UL=[],J0=0,OL=0,Df=function(e){return(lh[e]||UL).map(function(t){return t()})},gp=function(){var e=Date.now(),t=[];e-J0>2&&(Df("matchMediaInit"),Gr.forEach(function(n){var i=n.queries,s=n.conditions,r,a,l,c;for(a in i)r=Fi.matchMedia(i[a]).matches,r&&(l=1),r!==s[a]&&(s[a]=r,c=1);c&&(n.revert(),l&&t.push(n))}),Df("matchMediaRevert"),t.forEach(function(n){return n.onMatch(n,function(i){return n.add(null,i)})}),J0=e,Df("matchMedia"))},bM=function(){function o(t,n){this.selector=n&&fp(n),this.data=[],this._r=[],this.isReverted=!1,this.id=OL++,t&&this.add(t)}var e=o.prototype;return e.add=function(n,i,s){Ut(n)&&(s=i,i=n,n=Ut);var r=this,a=function(){var c=bt,h=r.selector,u;return c&&c!==r&&c.data.push(r),s&&(r.selector=fp(s)),bt=r,u=i.apply(r,arguments),Ut(u)&&r._r.push(u),bt=c,r.selector=h,r.isReverted=!1,u};return r.last=a,n===Ut?a(r,function(l){return r.add(null,l)}):n?r[n]=a:a},e.ignore=function(n){var i=bt;bt=null,n(this),bt=i},e.getTweens=function(){var n=[];return this.data.forEach(function(i){return i instanceof o?n.push.apply(n,i.getTweens()):i instanceof Vt&&!(i.parent&&i.parent.data==="nested")&&n.push(i)}),n},e.clear=function(){this._r.length=this.data.length=0},e.kill=function(n,i){var s=this;if(n?function(){for(var a=s.getTweens(),l=s.data.length,c;l--;)c=s.data[l],c.data==="isFlip"&&(c.revert(),c.getChildren(!0,!0,!1).forEach(function(h){return a.splice(a.indexOf(h),1)}));for(a.map(function(h){return{g:h._dur||h._delay||h._sat&&!h._sat.vars.immediateRender?h.globalTime(0):-1/0,t:h}}).sort(function(h,u){return u.g-h.g||-1/0}).forEach(function(h){return h.t.revert(n)}),l=s.data.length;l--;)c=s.data[l],c instanceof Tn?c.data!=="nested"&&(c.scrollTrigger&&c.scrollTrigger.revert(),c.kill()):!(c instanceof Vt)&&c.revert&&c.revert(n);s._r.forEach(function(h){return h(n,s)}),s.isReverted=!0}():this.data.forEach(function(a){return a.kill&&a.kill()}),this.clear(),i)for(var r=Gr.length;r--;)Gr[r].id===this.id&&Gr.splice(r,1)},e.revert=function(n){this.kill(n||{})},o}(),NL=function(){function o(t){this.contexts=[],this.scope=t,bt&&bt.data.push(this)}var e=o.prototype;return e.add=function(n,i,s){Gi(n)||(n={matches:n});var r=new bM(0,s||this.scope),a=r.conditions={},l,c,h;bt&&!r.selector&&(r.selector=bt.selector),this.contexts.push(r),i=r.add("onMatch",i),r.queries=n;for(c in n)c==="all"?h=1:(l=Fi.matchMedia(n[c]),l&&(Gr.indexOf(r)<0&&Gr.push(r),(a[c]=l.matches)&&(h=1),l.addListener?l.addListener(gp):l.addEventListener("change",gp)));return h&&i(r,function(u){return r.add(null,u)}),this},e.revert=function(n){this.kill(n||{})},e.kill=function(n){this.contexts.forEach(function(i){return i.kill(n,!0)})},o}(),iu={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.forEach(function(i){return lM(i)})},timeline:function(e){return new Tn(e)},getTweensOf:function(e,t){return Et.getTweensOf(e,t)},getProperty:function(e,t,n,i){Jt(e)&&(e=gi(e)[0]);var s=zr(e||{}).get,r=n?Zv:$v;return n==="native"&&(n=""),e&&(t?r((Xn[t]&&Xn[t].get||s)(e,t,n,i)):function(a,l,c){return r((Xn[a]&&Xn[a].get||s)(e,a,l,c))})},quickSetter:function(e,t,n){if(e=gi(e),e.length>1){var i=e.map(function(h){return zn.quickSetter(h,t,n)}),s=i.length;return function(h){for(var u=s;u--;)i[u](h)}}e=e[0]||{};var r=Xn[t],a=zr(e),l=a.harness&&(a.harness.aliases||{})[t]||t,c=r?function(h){var u=new r;No._pt=0,u.init(e,n?h+n:h,No,0,[e]),u.render(1,u),No._pt&&Im(1,No)}:a.set(e,l);return r?c:function(h){return c(e,l,n?h+n:h,a,1)}},quickTo:function(e,t,n){var i,s=zn.to(e,ti((i={},i[t]="+=0.1",i.paused=!0,i.stagger=0,i),n||{})),r=function(l,c,h){return s.resetTo(t,l,c,h)};return r.tween=s,r},isTweening:function(e){return Et.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=Hr(e.ease,ta.ease)),Y0(ta,e||{})},config:function(e){return Y0(Kn,e||{})},registerEffect:function(e){var t=e.name,n=e.effect,i=e.plugins,s=e.defaults,r=e.extendTimeline;(i||"").split(",").forEach(function(a){return a&&!Xn[a]&&!ei[a]&&yl(t+" effect requires "+a+" plugin.")}),Rf[t]=function(a,l,c){return n(gi(a),ti(l||{},s),c)},r&&(Tn.prototype[t]=function(a,l,c){return this.add(Rf[t](a,Gi(l)?l:(c=l)&&{},this),c)})},registerEase:function(e,t){et[e]=Hr(t)},parseEase:function(e,t){return arguments.length?Hr(e,t):et},getById:function(e){return Et.getById(e)},exportRoot:function(e,t){e===void 0&&(e={});var n=new Tn(e),i,s;for(n.smoothChildTiming=On(e.smoothChildTiming),Et.remove(n),n._dp=0,n._time=n._tTime=Et._time,i=Et._first;i;)s=i._next,(t||!(!i._dur&&i instanceof Vt&&i.vars.onComplete===i._targets[0]))&&Bi(n,i,i._start-i._delay),i=s;return Bi(Et,n,0),n},context:function(e,t){return e?new bM(e,t):bt},matchMedia:function(e){return new NL(e)},matchMediaRefresh:function(){return Gr.forEach(function(e){var t=e.conditions,n,i;for(i in t)t[i]&&(t[i]=!1,n=1);n&&e.revert()})||gp()},addEventListener:function(e,t){var n=lh[e]||(lh[e]=[]);~n.indexOf(t)||n.push(t)},removeEventListener:function(e,t){var n=lh[e],i=n&&n.indexOf(t);i>=0&&n.splice(i,1)},utils:{wrap:pL,wrapYoyo:mL,distribute:nM,random:sM,snap:iM,normalize:fL,getUnit:hn,clamp:cL,splitColor:cM,toArray:gi,selector:fp,mapRange:oM,pipe:uL,unitize:dL,interpolate:gL,shuffle:tM},install:Gv,effects:Rf,ticker:qn,updateRoot:Tn.updateRoot,plugins:Xn,globalTimeline:Et,core:{PropTween:Fn,globals:Wv,Tween:Vt,Timeline:Tn,Animation:bl,getCache:zr,_removeLinkedListItem:Ku,reverting:function(){return tn},context:function(e){return e&&bt&&(bt.data.push(e),e._ctx=bt),bt},suppressOverwrites:function(e){return xm=e}}};Nn("to,from,fromTo,delayedCall,set,killTweensOf",function(o){return iu[o]=Vt[o]});qn.add(Tn.updateRoot);No=iu.to({},{duration:0});var FL=function(e,t){for(var n=e._pt;n&&n.p!==t&&n.op!==t&&n.fp!==t;)n=n._next;return n},BL=function(e,t){var n=e._targets,i,s,r;for(i in t)for(s=n.length;s--;)r=e._ptLookup[s][i],r&&(r=r.d)&&(r._pt&&(r=FL(r,i)),r&&r.modifier&&r.modifier(t[i],e,n[s],i))},Uf=function(e,t){return{name:e,headless:1,rawVars:1,init:function(i,s,r){r._onInit=function(a){var l,c;if(Jt(s)&&(l={},Nn(s,function(h){return l[h]=1}),s=l),t){l={};for(c in s)l[c]=t(s[c]);s=l}BL(a,s)}}}},zn=iu.registerPlugin({name:"attr",init:function(e,t,n,i,s){var r,a,l;this.tween=n;for(r in t)l=e.getAttribute(r)||"",a=this.add(e,"setAttribute",(l||0)+"",t[r],i,s,0,0,r),a.op=r,a.b=l,this._props.push(r)},render:function(e,t){for(var n=t._pt;n;)tn?n.set(n.t,n.p,n.b,n):n.r(e,n.d),n=n._next}},{name:"endArray",headless:1,init:function(e,t){for(var n=t.length;n--;)this.add(e,n,e[n]||0,t[n],0,0,0,0,0,1)}},Uf("roundProps",pp),Uf("modifiers"),Uf("snap",iM))||iu;Vt.version=Tn.version=zn.version="3.13.0";Hv=1;vm()&&ra();et.Power0;et.Power1;et.Power2;et.Power3;et.Power4;et.Linear;et.Quad;et.Cubic;et.Quart;et.Quint;et.Strong;et.Elastic;et.Back;et.SteppedEase;et.Bounce;et.Sine;et.Expo;et.Circ;/*!
 * CSSPlugin 3.13.0
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var Q0,Vs,Vo,Lm,Or,ex,Dm,kL=function(){return typeof window<"u"},vs={},Cr=180/Math.PI,Ho=Math.PI/180,Co=Math.atan2,tx=1e8,Um=/([A-Z])/g,zL=/(left|right|width|margin|padding|x)/i,VL=/[\s,\(]\S/,zi={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},_p=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},HL=function(e,t){return t.set(t.t,t.p,e===1?t.e:Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},GL=function(e,t){return t.set(t.t,t.p,e?Math.round((t.s+t.c*e)*1e4)/1e4+t.u:t.b,t)},WL=function(e,t){var n=t.s+t.c*e;t.set(t.t,t.p,~~(n+(n<0?-.5:.5))+t.u,t)},TM=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},wM=function(e,t){return t.set(t.t,t.p,e!==1?t.b:t.e,t)},XL=function(e,t,n){return e.style[t]=n},qL=function(e,t,n){return e.style.setProperty(t,n)},YL=function(e,t,n){return e._gsap[t]=n},$L=function(e,t,n){return e._gsap.scaleX=e._gsap.scaleY=n},ZL=function(e,t,n,i,s){var r=e._gsap;r.scaleX=r.scaleY=n,r.renderTransform(s,r)},jL=function(e,t,n,i,s){var r=e._gsap;r[t]=n,r.renderTransform(s,r)},Rt="transform",Bn=Rt+"Origin",KL=function o(e,t){var n=this,i=this.target,s=i.style,r=i._gsap;if(e in vs&&s){if(this.tfm=this.tfm||{},e!=="transform")e=zi[e]||e,~e.indexOf(",")?e.split(",").forEach(function(a){return n.tfm[a]=as(i,a)}):this.tfm[e]=r.x?r[e]:as(i,e),e===Bn&&(this.tfm.zOrigin=r.zOrigin);else return zi.transform.split(",").forEach(function(a){return o.call(n,a,t)});if(this.props.indexOf(Rt)>=0)return;r.svg&&(this.svgo=i.getAttribute("data-svg-origin"),this.props.push(Bn,t,"")),e=Rt}(s||t)&&this.props.push(e,t,s[e])},EM=function(e){e.translate&&(e.removeProperty("translate"),e.removeProperty("scale"),e.removeProperty("rotate"))},JL=function(){var e=this.props,t=this.target,n=t.style,i=t._gsap,s,r;for(s=0;s<e.length;s+=3)e[s+1]?e[s+1]===2?t[e[s]](e[s+2]):t[e[s]]=e[s+2]:e[s+2]?n[e[s]]=e[s+2]:n.removeProperty(e[s].substr(0,2)==="--"?e[s]:e[s].replace(Um,"-$1").toLowerCase());if(this.tfm){for(r in this.tfm)i[r]=this.tfm[r];i.svg&&(i.renderTransform(),t.setAttribute("data-svg-origin",this.svgo||"")),s=Dm(),(!s||!s.isStart)&&!n[Rt]&&(EM(n),i.zOrigin&&n[Bn]&&(n[Bn]+=" "+i.zOrigin+"px",i.zOrigin=0,i.renderTransform()),i.uncache=1)}},AM=function(e,t){var n={target:e,props:[],revert:JL,save:KL};return e._gsap||zn.core.getCache(e),t&&e.style&&e.nodeType&&t.split(",").forEach(function(i){return n.save(i)}),n},CM,xp=function(e,t){var n=Vs.createElementNS?Vs.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):Vs.createElement(e);return n&&n.style?n:Vs.createElement(e)},_i=function o(e,t,n){var i=getComputedStyle(e);return i[t]||i.getPropertyValue(t.replace(Um,"-$1").toLowerCase())||i.getPropertyValue(t)||!n&&o(e,oa(t)||t,1)||""},nx="O,Moz,ms,Ms,Webkit".split(","),oa=function(e,t,n){var i=t||Or,s=i.style,r=5;if(e in s&&!n)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);r--&&!(nx[r]+e in s););return r<0?null:(r===3?"ms":r>=0?nx[r]:"")+e},yp=function(){kL()&&window.document&&(Q0=window,Vs=Q0.document,Vo=Vs.documentElement,Or=xp("div")||{style:{}},xp("div"),Rt=oa(Rt),Bn=Rt+"Origin",Or.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",CM=!!oa("perspective"),Dm=zn.core.reverting,Lm=1)},ix=function(e){var t=e.ownerSVGElement,n=xp("svg",t&&t.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),i=e.cloneNode(!0),s;i.style.display="block",n.appendChild(i),Vo.appendChild(n);try{s=i.getBBox()}catch{}return n.removeChild(i),Vo.removeChild(n),s},sx=function(e,t){for(var n=t.length;n--;)if(e.hasAttribute(t[n]))return e.getAttribute(t[n])},RM=function(e){var t,n;try{t=e.getBBox()}catch{t=ix(e),n=1}return t&&(t.width||t.height)||n||(t=ix(e)),t&&!t.width&&!t.x&&!t.y?{x:+sx(e,["x","cx","x1"])||0,y:+sx(e,["y","cy","y1"])||0,width:0,height:0}:t},PM=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&RM(e))},Kr=function(e,t){if(t){var n=e.style,i;t in vs&&t!==Bn&&(t=Rt),n.removeProperty?(i=t.substr(0,2),(i==="ms"||t.substr(0,6)==="webkit")&&(t="-"+t),n.removeProperty(i==="--"?t:t.replace(Um,"-$1").toLowerCase())):n.removeAttribute(t)}},Hs=function(e,t,n,i,s,r){var a=new Fn(e._pt,t,n,0,1,r?wM:TM);return e._pt=a,a.b=i,a.e=s,e._props.push(n),a},rx={deg:1,rad:1,turn:1},QL={grid:1,flex:1},Ks=function o(e,t,n,i){var s=parseFloat(n)||0,r=(n+"").trim().substr((s+"").length)||"px",a=Or.style,l=zL.test(t),c=e.tagName.toLowerCase()==="svg",h=(c?"client":"offset")+(l?"Width":"Height"),u=100,d=i==="px",f=i==="%",p,m,g,_;if(i===r||!s||rx[i]||rx[r])return s;if(r!=="px"&&!d&&(s=o(e,t,n,"px")),_=e.getCTM&&PM(e),(f||r==="%")&&(vs[t]||~t.indexOf("adius")))return p=_?e.getBBox()[l?"width":"height"]:e[h],Ft(f?s/p*u:s/100*p);if(a[l?"width":"height"]=u+(d?r:i),m=i!=="rem"&&~t.indexOf("adius")||i==="em"&&e.appendChild&&!c?e:e.parentNode,_&&(m=(e.ownerSVGElement||{}).parentNode),(!m||m===Vs||!m.appendChild)&&(m=Vs.body),g=m._gsap,g&&f&&g.width&&l&&g.time===qn.time&&!g.uncache)return Ft(s/g.width*u);if(f&&(t==="height"||t==="width")){var y=e.style[t];e.style[t]=u+i,p=e[h],y?e.style[t]=y:Kr(e,t)}else(f||r==="%")&&!QL[_i(m,"display")]&&(a.position=_i(e,"position")),m===e&&(a.position="static"),m.appendChild(Or),p=Or[h],m.removeChild(Or),a.position="absolute";return l&&f&&(g=zr(m),g.time=qn.time,g.width=m[h]),Ft(d?p*s/u:p&&s?u/p*s:0)},as=function(e,t,n,i){var s;return Lm||yp(),t in zi&&t!=="transform"&&(t=zi[t],~t.indexOf(",")&&(t=t.split(",")[0])),vs[t]&&t!=="transform"?(s=wl(e,i),s=t!=="transformOrigin"?s[t]:s.svg?s.origin:ru(_i(e,Bn))+" "+s.zOrigin+"px"):(s=e.style[t],(!s||s==="auto"||i||~(s+"").indexOf("calc("))&&(s=su[t]&&su[t](e,t,n)||_i(e,t)||qv(e,t)||(t==="opacity"?1:0))),n&&!~(s+"").trim().indexOf(" ")?Ks(e,t,s,n)+n:s},e2=function(e,t,n,i){if(!n||n==="none"){var s=oa(t,e,1),r=s&&_i(e,s,1);r&&r!==n?(t=s,n=r):t==="borderColor"&&(n=_i(e,"borderTopColor"))}var a=new Fn(this._pt,e.style,t,0,1,MM),l=0,c=0,h,u,d,f,p,m,g,_,y,v,x,S;if(a.b=n,a.e=i,n+="",i+="",i.substring(0,6)==="var(--"&&(i=_i(e,i.substring(4,i.indexOf(")")))),i==="auto"&&(m=e.style[t],e.style[t]=i,i=_i(e,t)||i,m?e.style[t]=m:Kr(e,t)),h=[n,i],uM(h),n=h[0],i=h[1],d=n.match(Oo)||[],S=i.match(Oo)||[],S.length){for(;u=Oo.exec(i);)g=u[0],y=i.substring(l,u.index),p?p=(p+1)%5:(y.substr(-5)==="rgba("||y.substr(-5)==="hsla(")&&(p=1),g!==(m=d[c++]||"")&&(f=parseFloat(m)||0,x=m.substr((f+"").length),g.charAt(1)==="="&&(g=zo(f,g)+x),_=parseFloat(g),v=g.substr((_+"").length),l=Oo.lastIndex-v.length,v||(v=v||Kn.units[t]||x,l===i.length&&(i+=v,a.e+=v)),x!==v&&(f=Ks(e,t,m,v)||0),a._pt={_next:a._pt,p:y||c===1?y:",",s:f,c:_-f,m:p&&p<4||t==="zIndex"?Math.round:0});a.c=l<i.length?i.substring(l,i.length):""}else a.r=t==="display"&&i==="none"?wM:TM;return zv.test(i)&&(a.e=0),this._pt=a,a},ox={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},t2=function(e){var t=e.split(" "),n=t[0],i=t[1]||"50%";return(n==="top"||n==="bottom"||i==="left"||i==="right")&&(e=n,n=i,i=e),t[0]=ox[n]||n,t[1]=ox[i]||i,t.join(" ")},n2=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var n=t.t,i=n.style,s=t.u,r=n._gsap,a,l,c;if(s==="all"||s===!0)i.cssText="",l=1;else for(s=s.split(","),c=s.length;--c>-1;)a=s[c],vs[a]&&(l=1,a=a==="transformOrigin"?Bn:Rt),Kr(n,a);l&&(Kr(n,Rt),r&&(r.svg&&n.removeAttribute("transform"),i.scale=i.rotate=i.translate="none",wl(n,1),r.uncache=1,EM(i)))}},su={clearProps:function(e,t,n,i,s){if(s.data!=="isFromStart"){var r=e._pt=new Fn(e._pt,t,n,0,0,n2);return r.u=i,r.pr=-10,r.tween=s,e._props.push(n),1}}},Tl=[1,0,0,1,0,0],IM={},LM=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},ax=function(e){var t=_i(e,Rt);return LM(t)?Tl:t.substr(7).match(kv).map(Ft)},Om=function(e,t){var n=e._gsap||zr(e),i=e.style,s=ax(e),r,a,l,c;return n.svg&&e.getAttribute("transform")?(l=e.transform.baseVal.consolidate().matrix,s=[l.a,l.b,l.c,l.d,l.e,l.f],s.join(",")==="1,0,0,1,0,0"?Tl:s):(s===Tl&&!e.offsetParent&&e!==Vo&&!n.svg&&(l=i.display,i.display="block",r=e.parentNode,(!r||!e.offsetParent&&!e.getBoundingClientRect().width)&&(c=1,a=e.nextElementSibling,Vo.appendChild(e)),s=ax(e),l?i.display=l:Kr(e,"display"),c&&(a?r.insertBefore(e,a):r?r.appendChild(e):Vo.removeChild(e))),t&&s.length>6?[s[0],s[1],s[4],s[5],s[12],s[13]]:s)},vp=function(e,t,n,i,s,r){var a=e._gsap,l=s||Om(e,!0),c=a.xOrigin||0,h=a.yOrigin||0,u=a.xOffset||0,d=a.yOffset||0,f=l[0],p=l[1],m=l[2],g=l[3],_=l[4],y=l[5],v=t.split(" "),x=parseFloat(v[0])||0,S=parseFloat(v[1])||0,T,w,E,M;n?l!==Tl&&(w=f*g-p*m)&&(E=x*(g/w)+S*(-m/w)+(m*y-g*_)/w,M=x*(-p/w)+S*(f/w)-(f*y-p*_)/w,x=E,S=M):(T=RM(e),x=T.x+(~v[0].indexOf("%")?x/100*T.width:x),S=T.y+(~(v[1]||v[0]).indexOf("%")?S/100*T.height:S)),i||i!==!1&&a.smooth?(_=x-c,y=S-h,a.xOffset=u+(_*f+y*m)-_,a.yOffset=d+(_*p+y*g)-y):a.xOffset=a.yOffset=0,a.xOrigin=x,a.yOrigin=S,a.smooth=!!i,a.origin=t,a.originIsAbsolute=!!n,e.style[Bn]="0px 0px",r&&(Hs(r,a,"xOrigin",c,x),Hs(r,a,"yOrigin",h,S),Hs(r,a,"xOffset",u,a.xOffset),Hs(r,a,"yOffset",d,a.yOffset)),e.setAttribute("data-svg-origin",x+" "+S)},wl=function(e,t){var n=e._gsap||new mM(e);if("x"in n&&!t&&!n.uncache)return n;var i=e.style,s=n.scaleX<0,r="px",a="deg",l=getComputedStyle(e),c=_i(e,Bn)||"0",h,u,d,f,p,m,g,_,y,v,x,S,T,w,E,M,b,I,D,U,O,V,F,$,H,te,ne,se,Me,Fe,q,Y;return h=u=d=m=g=_=y=v=x=0,f=p=1,n.svg=!!(e.getCTM&&PM(e)),l.translate&&((l.translate!=="none"||l.scale!=="none"||l.rotate!=="none")&&(i[Rt]=(l.translate!=="none"?"translate3d("+(l.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(l.rotate!=="none"?"rotate("+l.rotate+") ":"")+(l.scale!=="none"?"scale("+l.scale.split(" ").join(",")+") ":"")+(l[Rt]!=="none"?l[Rt]:"")),i.scale=i.rotate=i.translate="none"),w=Om(e,n.svg),n.svg&&(n.uncache?(H=e.getBBox(),c=n.xOrigin-H.x+"px "+(n.yOrigin-H.y)+"px",$=""):$=!t&&e.getAttribute("data-svg-origin"),vp(e,$||c,!!$||n.originIsAbsolute,n.smooth!==!1,w)),S=n.xOrigin||0,T=n.yOrigin||0,w!==Tl&&(I=w[0],D=w[1],U=w[2],O=w[3],h=V=w[4],u=F=w[5],w.length===6?(f=Math.sqrt(I*I+D*D),p=Math.sqrt(O*O+U*U),m=I||D?Co(D,I)*Cr:0,y=U||O?Co(U,O)*Cr+m:0,y&&(p*=Math.abs(Math.cos(y*Ho))),n.svg&&(h-=S-(S*I+T*U),u-=T-(S*D+T*O))):(Y=w[6],Fe=w[7],ne=w[8],se=w[9],Me=w[10],q=w[11],h=w[12],u=w[13],d=w[14],E=Co(Y,Me),g=E*Cr,E&&(M=Math.cos(-E),b=Math.sin(-E),$=V*M+ne*b,H=F*M+se*b,te=Y*M+Me*b,ne=V*-b+ne*M,se=F*-b+se*M,Me=Y*-b+Me*M,q=Fe*-b+q*M,V=$,F=H,Y=te),E=Co(-U,Me),_=E*Cr,E&&(M=Math.cos(-E),b=Math.sin(-E),$=I*M-ne*b,H=D*M-se*b,te=U*M-Me*b,q=O*b+q*M,I=$,D=H,U=te),E=Co(D,I),m=E*Cr,E&&(M=Math.cos(E),b=Math.sin(E),$=I*M+D*b,H=V*M+F*b,D=D*M-I*b,F=F*M-V*b,I=$,V=H),g&&Math.abs(g)+Math.abs(m)>359.9&&(g=m=0,_=180-_),f=Ft(Math.sqrt(I*I+D*D+U*U)),p=Ft(Math.sqrt(F*F+Y*Y)),E=Co(V,F),y=Math.abs(E)>2e-4?E*Cr:0,x=q?1/(q<0?-q:q):0),n.svg&&($=e.getAttribute("transform"),n.forceCSS=e.setAttribute("transform","")||!LM(_i(e,Rt)),$&&e.setAttribute("transform",$))),Math.abs(y)>90&&Math.abs(y)<270&&(s?(f*=-1,y+=m<=0?180:-180,m+=m<=0?180:-180):(p*=-1,y+=y<=0?180:-180)),t=t||n.uncache,n.x=h-((n.xPercent=h&&(!t&&n.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-h)?-50:0)))?e.offsetWidth*n.xPercent/100:0)+r,n.y=u-((n.yPercent=u&&(!t&&n.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-u)?-50:0)))?e.offsetHeight*n.yPercent/100:0)+r,n.z=d+r,n.scaleX=Ft(f),n.scaleY=Ft(p),n.rotation=Ft(m)+a,n.rotationX=Ft(g)+a,n.rotationY=Ft(_)+a,n.skewX=y+a,n.skewY=v+a,n.transformPerspective=x+r,(n.zOrigin=parseFloat(c.split(" ")[2])||!t&&n.zOrigin||0)&&(i[Bn]=ru(c)),n.xOffset=n.yOffset=0,n.force3D=Kn.force3D,n.renderTransform=n.svg?s2:CM?DM:i2,n.uncache=0,n},ru=function(e){return(e=e.split(" "))[0]+" "+e[1]},Of=function(e,t,n){var i=hn(t);return Ft(parseFloat(t)+parseFloat(Ks(e,"x",n+"px",i)))+i},i2=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,DM(e,t)},br="0deg",za="0px",Tr=") ",DM=function(e,t){var n=t||this,i=n.xPercent,s=n.yPercent,r=n.x,a=n.y,l=n.z,c=n.rotation,h=n.rotationY,u=n.rotationX,d=n.skewX,f=n.skewY,p=n.scaleX,m=n.scaleY,g=n.transformPerspective,_=n.force3D,y=n.target,v=n.zOrigin,x="",S=_==="auto"&&e&&e!==1||_===!0;if(v&&(u!==br||h!==br)){var T=parseFloat(h)*Ho,w=Math.sin(T),E=Math.cos(T),M;T=parseFloat(u)*Ho,M=Math.cos(T),r=Of(y,r,w*M*-v),a=Of(y,a,-Math.sin(T)*-v),l=Of(y,l,E*M*-v+v)}g!==za&&(x+="perspective("+g+Tr),(i||s)&&(x+="translate("+i+"%, "+s+"%) "),(S||r!==za||a!==za||l!==za)&&(x+=l!==za||S?"translate3d("+r+", "+a+", "+l+") ":"translate("+r+", "+a+Tr),c!==br&&(x+="rotate("+c+Tr),h!==br&&(x+="rotateY("+h+Tr),u!==br&&(x+="rotateX("+u+Tr),(d!==br||f!==br)&&(x+="skew("+d+", "+f+Tr),(p!==1||m!==1)&&(x+="scale("+p+", "+m+Tr),y.style[Rt]=x||"translate(0, 0)"},s2=function(e,t){var n=t||this,i=n.xPercent,s=n.yPercent,r=n.x,a=n.y,l=n.rotation,c=n.skewX,h=n.skewY,u=n.scaleX,d=n.scaleY,f=n.target,p=n.xOrigin,m=n.yOrigin,g=n.xOffset,_=n.yOffset,y=n.forceCSS,v=parseFloat(r),x=parseFloat(a),S,T,w,E,M;l=parseFloat(l),c=parseFloat(c),h=parseFloat(h),h&&(h=parseFloat(h),c+=h,l+=h),l||c?(l*=Ho,c*=Ho,S=Math.cos(l)*u,T=Math.sin(l)*u,w=Math.sin(l-c)*-d,E=Math.cos(l-c)*d,c&&(h*=Ho,M=Math.tan(c-h),M=Math.sqrt(1+M*M),w*=M,E*=M,h&&(M=Math.tan(h),M=Math.sqrt(1+M*M),S*=M,T*=M)),S=Ft(S),T=Ft(T),w=Ft(w),E=Ft(E)):(S=u,E=d,T=w=0),(v&&!~(r+"").indexOf("px")||x&&!~(a+"").indexOf("px"))&&(v=Ks(f,"x",r,"px"),x=Ks(f,"y",a,"px")),(p||m||g||_)&&(v=Ft(v+p-(p*S+m*w)+g),x=Ft(x+m-(p*T+m*E)+_)),(i||s)&&(M=f.getBBox(),v=Ft(v+i/100*M.width),x=Ft(x+s/100*M.height)),M="matrix("+S+","+T+","+w+","+E+","+v+","+x+")",f.setAttribute("transform",M),y&&(f.style[Rt]=M)},r2=function(e,t,n,i,s){var r=360,a=Jt(s),l=parseFloat(s)*(a&&~s.indexOf("rad")?Cr:1),c=l-i,h=i+c+"deg",u,d;return a&&(u=s.split("_")[1],u==="short"&&(c%=r,c!==c%(r/2)&&(c+=c<0?r:-360)),u==="cw"&&c<0?c=(c+r*tx)%r-~~(c/r)*r:u==="ccw"&&c>0&&(c=(c-r*tx)%r-~~(c/r)*r)),e._pt=d=new Fn(e._pt,t,n,i,c,HL),d.e=h,d.u="deg",e._props.push(n),d},lx=function(e,t){for(var n in t)e[n]=t[n];return e},o2=function(e,t,n){var i=lx({},n._gsap),s="perspective,force3D,transformOrigin,svgOrigin",r=n.style,a,l,c,h,u,d,f,p;i.svg?(c=n.getAttribute("transform"),n.setAttribute("transform",""),r[Rt]=t,a=wl(n,1),Kr(n,Rt),n.setAttribute("transform",c)):(c=getComputedStyle(n)[Rt],r[Rt]=t,a=wl(n,1),r[Rt]=c);for(l in vs)c=i[l],h=a[l],c!==h&&s.indexOf(l)<0&&(f=hn(c),p=hn(h),u=f!==p?Ks(n,l,c,p):parseFloat(c),d=parseFloat(h),e._pt=new Fn(e._pt,a,l,u,d-u,_p),e._pt.u=p||0,e._props.push(l));lx(a,i)};Nn("padding,margin,Width,Radius",function(o,e){var t="Top",n="Right",i="Bottom",s="Left",r=(e<3?[t,n,i,s]:[t+s,t+n,i+n,i+s]).map(function(a){return e<2?o+a:"border"+a+o});su[e>1?"border"+o:o]=function(a,l,c,h,u){var d,f;if(arguments.length<4)return d=r.map(function(p){return as(a,p,c)}),f=d.join(" "),f.split(d[0]).length===5?d[0]:f;d=(h+"").split(" "),f={},r.forEach(function(p,m){return f[p]=d[m]=d[m]||d[(m-1)/2|0]}),a.init(l,f,u)}});var UM={name:"css",register:yp,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,n,i,s){var r=this._props,a=e.style,l=n.vars.startAt,c,h,u,d,f,p,m,g,_,y,v,x,S,T,w,E;Lm||yp(),this.styles=this.styles||AM(e),E=this.styles.props,this.tween=n;for(m in t)if(m!=="autoRound"&&(h=t[m],!(Xn[m]&&gM(m,t,n,i,e,s)))){if(f=typeof h,p=su[m],f==="function"&&(h=h.call(n,i,e,s),f=typeof h),f==="string"&&~h.indexOf("random(")&&(h=Ml(h)),p)p(this,e,m,h,n)&&(w=1);else if(m.substr(0,2)==="--")c=(getComputedStyle(e).getPropertyValue(m)+"").trim(),h+="",qs.lastIndex=0,qs.test(c)||(g=hn(c),_=hn(h)),_?g!==_&&(c=Ks(e,m,c,_)+_):g&&(h+=g),this.add(a,"setProperty",c,h,i,s,0,0,m),r.push(m),E.push(m,0,a[m]);else if(f!=="undefined"){if(l&&m in l?(c=typeof l[m]=="function"?l[m].call(n,i,e,s):l[m],Jt(c)&&~c.indexOf("random(")&&(c=Ml(c)),hn(c+"")||c==="auto"||(c+=Kn.units[m]||hn(as(e,m))||""),(c+"").charAt(1)==="="&&(c=as(e,m))):c=as(e,m),d=parseFloat(c),y=f==="string"&&h.charAt(1)==="="&&h.substr(0,2),y&&(h=h.substr(2)),u=parseFloat(h),m in zi&&(m==="autoAlpha"&&(d===1&&as(e,"visibility")==="hidden"&&u&&(d=0),E.push("visibility",0,a.visibility),Hs(this,a,"visibility",d?"inherit":"hidden",u?"inherit":"hidden",!u)),m!=="scale"&&m!=="transform"&&(m=zi[m],~m.indexOf(",")&&(m=m.split(",")[0]))),v=m in vs,v){if(this.styles.save(m),f==="string"&&h.substring(0,6)==="var(--"&&(h=_i(e,h.substring(4,h.indexOf(")"))),u=parseFloat(h)),x||(S=e._gsap,S.renderTransform&&!t.parseTransform||wl(e,t.parseTransform),T=t.smoothOrigin!==!1&&S.smooth,x=this._pt=new Fn(this._pt,a,Rt,0,1,S.renderTransform,S,0,-1),x.dep=1),m==="scale")this._pt=new Fn(this._pt,S,"scaleY",S.scaleY,(y?zo(S.scaleY,y+u):u)-S.scaleY||0,_p),this._pt.u=0,r.push("scaleY",m),m+="X";else if(m==="transformOrigin"){E.push(Bn,0,a[Bn]),h=t2(h),S.svg?vp(e,h,0,T,0,this):(_=parseFloat(h.split(" ")[2])||0,_!==S.zOrigin&&Hs(this,S,"zOrigin",S.zOrigin,_),Hs(this,a,m,ru(c),ru(h)));continue}else if(m==="svgOrigin"){vp(e,h,1,T,0,this);continue}else if(m in IM){r2(this,S,m,d,y?zo(d,y+h):h);continue}else if(m==="smoothOrigin"){Hs(this,S,"smooth",S.smooth,h);continue}else if(m==="force3D"){S[m]=h;continue}else if(m==="transform"){o2(this,h,e);continue}}else m in a||(m=oa(m)||m);if(v||(u||u===0)&&(d||d===0)&&!VL.test(h)&&m in a)g=(c+"").substr((d+"").length),u||(u=0),_=hn(h)||(m in Kn.units?Kn.units[m]:g),g!==_&&(d=Ks(e,m,c,_)),this._pt=new Fn(this._pt,v?S:a,m,d,(y?zo(d,y+u):u)-d,!v&&(_==="px"||m==="zIndex")&&t.autoRound!==!1?WL:_p),this._pt.u=_||0,g!==_&&_!=="%"&&(this._pt.b=c,this._pt.r=GL);else if(m in a)e2.call(this,e,m,c,y?y+h:h);else if(m in e)this.add(e,m,c||e[m],y?y+h:h,i,s);else if(m!=="parseTransform"){Sm(m,h);continue}v||(m in a?E.push(m,0,a[m]):typeof e[m]=="function"?E.push(m,2,e[m]()):E.push(m,1,c||e[m])),r.push(m)}}w&&SM(this)},render:function(e,t){if(t.tween._time||!Dm())for(var n=t._pt;n;)n.r(e,n.d),n=n._next;else t.styles.revert()},get:as,aliases:zi,getSetter:function(e,t,n){var i=zi[t];return i&&i.indexOf(",")<0&&(t=i),t in vs&&t!==Bn&&(e._gsap.x||as(e,"x"))?n&&ex===n?t==="scale"?$L:YL:(ex=n||{})&&(t==="scale"?ZL:jL):e.style&&!ym(e.style[t])?XL:~t.indexOf("-")?qL:Pm(e,t)},core:{_removeProperty:Kr,_getMatrix:Om}};zn.utils.checkPrefix=oa;zn.core.getStyleSaver=AM;(function(o,e,t,n){var i=Nn(o+","+e+","+t,function(s){vs[s]=1});Nn(e,function(s){Kn.units[s]="deg",IM[s]=1}),zi[i[13]]=o+","+e,Nn(n,function(s){var r=s.split(":");zi[r[1]]=i[r[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");Nn("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(o){Kn.units[o]="px"});zn.registerPlugin(UM);var OM=zn.registerPlugin(UM)||zn;OM.core.Tween;const a2=39.9,l2=116.4,c2=4e6,ed=new A;di.getCartographicToPosition(a2*ue.DEG2RAD,l2*ue.DEG2RAD,c2,ed);ed.applyAxisAngle(new A(1,0,0),-Math.PI/2);console.log("BJPos",ed);class h2 extends en{constructor(t,n){super();_n(this,"_dom");_n(this,"_renderer");_n(this,"_scene");_n(this,"_transition");_n(this,"_tiles");_n(this,"_controls");_n(this,"_useBatchedMesh",!1);_n(this,"_errorTarget",20);_n(this,"_canvas");_n(this,"_topoLinesOptions",{display:!1,projection:"ellipsoid",thickness:1,topoColor:new le("#fff"),topoOpacity:.5,cartoColor:new le("#fff"),cartoOpacity:.5});_n(this,"_lastCameraPosition",null);_n(this,"_latitude",0);_n(this,"_longitude",0);_n(this,"_height",0);this._initOptions(n),this._dom=t,this._renderer=new mm({antialias:!0}),this._renderer.setClearColor(1383455),this._canvas=this._renderer.domElement,this._dom.appendChild(this._canvas),this._scene=new Wp;const i=this._canvas.clientWidth/this._canvas.clientHeight;this._transition=new UP(new Bt(60,i,1,16e7),new Ss(-1,1,1,-1,1,16e7)),this._transition.perspectiveCamera.position.copy(ed),this._transition.perspectiveCamera.lookAt(0,0,0),this._transition.autoSync=!1,this._transition.addEventListener("camera-change",({camera:s,prevCamera:r})=>{this._tiles.deleteCamera(r),this._tiles.setCamera(s),this._controls.setCamera(s)}),this._transition.orthographicPositionalZoom=!1,this._controls=new RP(this._scene,this._transition.camera,this._renderer.domElement,void 0),this._controls.enableDamping=!0,this._reinstantiateTiles(),this._resizeRendererToDisplaySize(this._renderer),this._animate()}get camera(){return this._transition.camera}get tiles(){return this._tiles}get latitude(){return this._latitude}get longitude(){return this._longitude}get height(){return this._height}get heading(){const t=this.camera,n=t.position.clone(),i=new A;t.getWorldDirection(i);const s=this.tiles.group.matrixWorld.clone().invert(),r=n.clone().applyMatrix4(s),a={};di.getPositionToCartographic(r,a);const l=new A;di.getCartographicToPosition(a.lat??0,a.lon??0,0,l),l.normalize(),l.applyMatrix4(this.tiles.group.matrixWorld),l.normalize();const c=new A(0,0,1);c.applyMatrix4(this.tiles.group.matrixWorld),c.normalize();const h=c.clone().sub(l.clone().multiplyScalar(c.dot(l)));h.normalize();const u=new A().crossVectors(l,h);u.normalize();const d=i.clone().sub(l.clone().multiplyScalar(i.dot(l)));d.normalize();const f=d.dot(h),p=d.dot(u);return(-(Math.atan2(p,f)*ue.RAD2DEG)+360)%360}get pitch(){const t=this.camera,n=t.position.clone(),i=new A;t.getWorldDirection(i);const s=this.tiles.group.matrixWorld.clone().invert(),r=n.clone().applyMatrix4(s),a={};di.getPositionToCartographic(r,a);const l=new A;di.getCartographicToPosition(a.lat??0,a.lon??0,0,l),l.normalize(),l.applyMatrix4(this.tiles.group.matrixWorld),l.normalize();const c=i.dot(l);return Math.asin(c)*ue.RAD2DEG}get displayTopoLines(){return this._topoLinesOptions.display}set displayTopoLines(t){this._topoLinesOptions.display=t;const n=this._tiles.getPluginByName("TOPO_LINES_PLUGIN");n.topoOpacity=t?this._topoLinesOptions.topoOpacity:0,n.cartoOpacity=t?this._topoLinesOptions.cartoOpacity:0}get topoLineTopoColor(){return this._topoLinesOptions.topoColor}set topoLineTopoColor(t){this._topoLinesOptions.topoColor=t;const n=this._tiles.getPluginByName("TOPO_LINES_PLUGIN");n.topoColor=t}get topoLineCartoColor(){return this._topoLinesOptions.cartoColor}set topoLineCartoColor(t){this._topoLinesOptions.cartoColor=t;const n=this._tiles.getPluginByName("TOPO_LINES_PLUGIN");n.cartoColor=t}get topoLinesOpacity(){return this._tiles.getPluginByName("TOPO_LINES_PLUGIN").topoOpacity}set topoLinesOpacity(t){const n=this._tiles.getPluginByName("TOPO_LINES_PLUGIN");n.topoOpacity=t,n.cartoOpacity=t}get topoLinesCartoOpacity(){return this._tiles.getPluginByName("TOPO_LINES_PLUGIN").cartoOpacity}set topoLinesCartoOpacity(t){const n=this._tiles.getPluginByName("TOPO_LINES_PLUGIN");n.cartoOpacity=t}get topoLinesThickness(){return this._topoLinesOptions.thickness}set topoLinesThickness(t){this._topoLinesOptions.thickness=t;const n=this._tiles.getPluginByName("TOPO_LINES_PLUGIN");n.thickness=t}_initOptions(t){this._useBatchedMesh=t.useBatchedMesh||!1,this._errorTarget=t.errorTarget||20,t.topoLinesOptions&&(this._topoLinesOptions={...this._topoLinesOptions,...t.topoLinesOptions})}_reinstantiateTiles(){this._tiles&&(this._scene.remove(this._tiles.group),this._tiles.dispose(),this._tiles=null),this._tiles=new MP,this._tiles.registerPlugin(new WP({apiToken:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwYTA1ODM2Zi03MzY5LTQxY2ItYWRiNy02N2FhODA3MTE2NWUiLCJpZCI6MTQ0NzgzLCJpYXQiOjE2ODYwMjkwNDR9.wIRE1j-xnmaM7Ak_LbA4fql--WUShGzXd-N2GtzrQd0",assetId:"2275207",autoRefreshToken:!0})),this._tiles.registerPlugin(new YP),this._tiles.registerPlugin(new XP),this._tiles.registerPlugin(new xI),this._tiles.registerPlugin(new AI),this._tiles.registerPlugin(new qI({projection:"ellipsoid"})),this._tiles.registerPlugin(new _I({dracoLoader:new DI().setDecoderPath("https://unpkg.com/three@0.153.0/examples/jsm/libs/draco/gltf/")})),this._useBatchedMesh&&this._tiles.registerPlugin(new LI({renderer:this._renderer,discardOriginalContent:!1,instanceCount:500,vertexCount:750,indexCount:2e3,expandPercent:.25,maxInstanceCount:1/0,textureSize:null,material:null})),this._tiles.group.rotation.x=-Math.PI/2,this._scene.add(this._tiles.group),this._tiles.setResolutionFromRenderer(this._transition.camera,this._renderer),this._tiles.setCamera(this._transition.camera),this._controls.setTilesRenderer(this._tiles)}_animate(){if(requestAnimationFrame(this._animate.bind(this)),!this._tiles)return;const t=this._transition.camera;if(this._resizeRendererToDisplaySize(this._renderer)){const u=this._dom.clientWidth/this._dom.clientHeight;t.aspect=u,t.updateProjectionMatrix()}this._controls.enabled=!this._transition.animating,this._controls.update(),this._transition.update(),this._tiles.setResolutionFromRenderer(t,this._renderer),this._tiles.setCamera(t);const n=this._tiles.getPluginByName("TOPO_LINES_PLUGIN");n.topoOpacity=this._topoLinesOptions.display?this.topoLinesOpacity:0,n.topoColor=this.topoLineTopoColor,n.cartoOpacity=this._topoLinesOptions.display?this.topoLinesCartoOpacity:0,n.cartoColor=this.topoLineCartoColor,t.updateMatrixWorld(),this._tiles.errorTarget=this._errorTarget,this._tiles.update(),this._renderer.render(this._scene,t);const i=this.tiles.group.matrixWorld.clone().invert(),s=this.camera.position.clone().applyMatrix4(i),r={};di.getPositionToCartographic(s,r);const a=(r.lat??0)*ue.RAD2DEG,l=(r.lon??0)*ue.RAD2DEG,c=r.height??0,h={lat:a,lon:l,height:c};this._latitude=a,this._longitude=l,this._height=c,(!this._lastCameraPosition||Math.abs(this._lastCameraPosition.lat-a)>1e-6||Math.abs(this._lastCameraPosition.lon-l)>1e-6||Math.abs(this._lastCameraPosition.height-c)>.01)&&(this._lastCameraPosition=h,this.dispatchEvent({type:"camera-move",data:{latitude:a,longitude:l,height:c}}))}_resizeRendererToDisplaySize(t){const n=t.domElement,i=window.devicePixelRatio,s=Math.floor(this._dom.clientWidth*i),r=Math.floor(this._dom.clientHeight*i),a=n.width!==s||n.height!==r;if(a){t.setSize(this._dom.clientWidth,this._dom.clientHeight,!0),t.setPixelRatio(i);const{perspectiveCamera:l,orthographicCamera:c}=this._transition,h=this._dom.clientWidth/this._dom.clientHeight;l.aspect=h,l.updateProjectionMatrix(),c.left=-c.top*h,c.right=-c.left,c.updateProjectionMatrix()}return a}zoomTo(t){const{lat:n,lon:i,height:s}=t,r=new A;di.getCartographicToPosition(n*ue.DEG2RAD,i*ue.DEG2RAD,s,r),r.applyAxisAngle(new A(1,0,0),-Math.PI/2),this._transition.perspectiveCamera.position.copy(r),this._transition.perspectiveCamera.lookAt(0,0,0),this._transition.update()}flyTo(t,n={}){const{lat:i,lon:s,height:r}=t,{duration:a=2}=n,l=new A;di.getCartographicToPosition(i*ue.DEG2RAD,s*ue.DEG2RAD,r,l),l.applyAxisAngle(new A(1,0,0),-Math.PI/2);const c=this._transition.perspectiveCamera,h=c.position.clone();OM.to({x:h.x,y:h.y,z:h.z},{x:l.x,y:l.y,z:l.z,duration:a,ease:"power2.inOut",onUpdate:function(){const u=this.targets()[0];c.position.set(u.x,u.y,u.z),c.lookAt(0,0,0)},onComplete:()=>{c.lookAt(0,0,0)}})}setTerrainVisibe(t){this._tiles.group&&(this._tiles.group.visible=t)}}const Nm=cx("viewer",()=>{const o=id(null),e=id(!1),t=id(!1),n=async(a,l)=>{if(o.value){console.warn("Viewer 已经初始化了");return}t.value=!0;try{o.value=new h2(a,{useBatchedMesh:!1,errorTarget:20,...l}),e.value=!0,console.log("Viewer 初始化成功")}catch(c){throw console.error("Viewer 初始化失败:",c),c}finally{t.value=!1}},i=()=>o.value,s=()=>o.value!==null&&e.value;return{viewer:o,isInitialized:e,isLoading:t,initViewer:n,getViewer:i,isViewerReady:s,waitForViewer:()=>new Promise((a,l)=>{if(s()&&o.value){a(o.value);return}const c=setInterval(()=>{s()&&o.value&&(clearInterval(c),a(o.value))},100);setTimeout(()=>{clearInterval(c),l(new Error("Viewer 初始化超时"))},2e4)})}}),u2={class:"latlon-box"},d2={class:"value"},f2={class:"value"},p2={class:"value"},m2=Wi({__name:"index",setup(o){const e=Nm(),t=Nr(0),n=Nr(0),i=Nr(0);let s=null;return ou(async()=>{const r=await e.waitForViewer();s=a=>{const l=a.data??a;t.value=l.longitude??0,n.value=l.latitude??0,i.value=l.height??0},r.addEventListener("camera-move",s),typeof r.longitude=="number"&&(t.value=r.longitude),typeof r.latitude=="number"&&(n.value=r.latitude),typeof r.height=="number"&&(i.value=r.height)}),hx(()=>{const r=e.getViewer();r&&s&&r.removeEventListener("camera-move",s)}),(r,a)=>(Un(),ms("div",u2,[a[0]||(a[0]=Dt("span",{class:"label"},"经度：",-1)),Dt("span",d2,th(t.value.toFixed(6)),1),a[1]||(a[1]=Dt("span",{class:"label"},"纬度：",-1)),Dt("span",f2,th(n.value.toFixed(6)),1),a[2]||(a[2]=Dt("span",{class:"label"},"高度：",-1)),Dt("span",p2,th(i.value.toFixed(2))+" m",1)]))}}),g2=El(m2,[["__scopeId","data-v-c1080267"]]),_2={class:"earth-content"},x2=Wi({__name:"index",setup(o){const e=Nr(null),t=Nm();return ou(()=>{qM(async()=>{if(e.value)try{await t.initViewer(e.value,{useBatchedMesh:!1,errorTarget:20})}catch(n){console.error("地球初始化失败:",n)}})}),(n,i)=>(Un(),ms("div",_2,[Dt("div",{class:"earth-container",ref_key:"earthContainer",ref:e},null,512),qe(g2)]))}}),y2=El(x2,[["__scopeId","data-v-ac64b059"]]),v2=Wi({name:"IconSettings",props:{size:{type:[Number,String]},strokeWidth:{type:Number,default:4},strokeLinecap:{type:String,default:"butt",validator:o=>["butt","round","square"].includes(o)},strokeLinejoin:{type:String,default:"miter",validator:o=>["arcs","bevel","miter","miter-clip","round"].includes(o)},rotate:Number,spin:Boolean},emits:{click:o=>!0},setup(o,{emit:e}){const t=bp("icon"),n=Wr(()=>[t,`${t}-settings`,{[`${t}-spin`]:o.spin}]),i=Wr(()=>{const r={};return o.size&&(r.fontSize=Tp(o.size)?`${o.size}px`:o.size),o.rotate&&(r.transform=`rotate(${o.rotate}deg)`),r});return{cls:n,innerStyle:i,onClick:r=>{e("click",r)}}}}),M2=["stroke-width","stroke-linecap","stroke-linejoin"];function S2(o,e,t,n,i,s){return Un(),ms("svg",{viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg",stroke:"currentColor",class:au(o.cls),style:Sp(o.innerStyle),"stroke-width":o.strokeWidth,"stroke-linecap":o.strokeLinecap,"stroke-linejoin":o.strokeLinejoin,onClick:e[0]||(e[0]=(...r)=>o.onClick&&o.onClick(...r))},e[1]||(e[1]=[Dt("path",{d:"M18.797 6.732A1 1 0 0 1 19.76 6h8.48a1 1 0 0 1 .964.732l1.285 4.628a1 1 0 0 0 1.213.7l4.651-1.2a1 1 0 0 1 1.116.468l4.24 7.344a1 1 0 0 1-.153 1.2L38.193 23.3a1 1 0 0 0 0 1.402l3.364 3.427a1 1 0 0 1 .153 1.2l-4.24 7.344a1 1 0 0 1-1.116.468l-4.65-1.2a1 1 0 0 0-1.214.7l-1.285 4.628a1 1 0 0 1-.964.732h-8.48a1 1 0 0 1-.963-.732L17.51 36.64a1 1 0 0 0-1.213-.7l-4.65 1.2a1 1 0 0 1-1.116-.468l-4.24-7.344a1 1 0 0 1 .153-1.2L9.809 24.7a1 1 0 0 0 0-1.402l-3.364-3.427a1 1 0 0 1-.153-1.2l4.24-7.344a1 1 0 0 1 1.116-.468l4.65 1.2a1 1 0 0 0 1.213-.7l1.286-4.628Z"},null,-1),Dt("path",{d:"M30 24a6 6 0 1 1-12 0 6 6 0 0 1 12 0Z"},null,-1)]),14,M2)}var Nf=Mp(v2,[["render",S2]]);const b2=Object.assign(Nf,{install:(o,e)=>{var t;const n=(t=e==null?void 0:e.iconPrefix)!=null?t:"";o.component(n+Nf.name,Nf)}}),T2=Wi({name:"IconUser",props:{size:{type:[Number,String]},strokeWidth:{type:Number,default:4},strokeLinecap:{type:String,default:"butt",validator:o=>["butt","round","square"].includes(o)},strokeLinejoin:{type:String,default:"miter",validator:o=>["arcs","bevel","miter","miter-clip","round"].includes(o)},rotate:Number,spin:Boolean},emits:{click:o=>!0},setup(o,{emit:e}){const t=bp("icon"),n=Wr(()=>[t,`${t}-user`,{[`${t}-spin`]:o.spin}]),i=Wr(()=>{const r={};return o.size&&(r.fontSize=Tp(o.size)?`${o.size}px`:o.size),o.rotate&&(r.transform=`rotate(${o.rotate}deg)`),r});return{cls:n,innerStyle:i,onClick:r=>{e("click",r)}}}}),w2=["stroke-width","stroke-linecap","stroke-linejoin"];function E2(o,e,t,n,i,s){return Un(),ms("svg",{viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg",stroke:"currentColor",class:au(o.cls),style:Sp(o.innerStyle),"stroke-width":o.strokeWidth,"stroke-linecap":o.strokeLinecap,"stroke-linejoin":o.strokeLinejoin,onClick:e[0]||(e[0]=(...r)=>o.onClick&&o.onClick(...r))},e[1]||(e[1]=[Dt("path",{d:"M7 37c0-4.97 4.03-8 9-8h16c4.97 0 9 3.03 9 8v3a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-3Z"},null,-1),Dt("circle",{cx:"24",cy:"15",r:"8"},null,-1)]),14,w2)}var Ff=Mp(T2,[["render",E2]]);const A2=Object.assign(Ff,{install:(o,e)=>{var t;const n=(t=e==null?void 0:e.iconPrefix)!=null?t:"";o.component(n+Ff.name,Ff)}}),C2=Wi({name:"IconFullscreenExit",props:{size:{type:[Number,String]},strokeWidth:{type:Number,default:4},strokeLinecap:{type:String,default:"butt",validator:o=>["butt","round","square"].includes(o)},strokeLinejoin:{type:String,default:"miter",validator:o=>["arcs","bevel","miter","miter-clip","round"].includes(o)},rotate:Number,spin:Boolean},emits:{click:o=>!0},setup(o,{emit:e}){const t=bp("icon"),n=Wr(()=>[t,`${t}-fullscreen-exit`,{[`${t}-spin`]:o.spin}]),i=Wr(()=>{const r={};return o.size&&(r.fontSize=Tp(o.size)?`${o.size}px`:o.size),o.rotate&&(r.transform=`rotate(${o.rotate}deg)`),r});return{cls:n,innerStyle:i,onClick:r=>{e("click",r)}}}}),R2=["stroke-width","stroke-linecap","stroke-linejoin"];function P2(o,e,t,n,i,s){return Un(),ms("svg",{viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg",stroke:"currentColor",class:au(o.cls),style:Sp(o.innerStyle),"stroke-width":o.strokeWidth,"stroke-linecap":o.strokeLinecap,"stroke-linejoin":o.strokeLinejoin,onClick:e[0]||(e[0]=(...r)=>o.onClick&&o.onClick(...r))},e[1]||(e[1]=[Dt("path",{d:"M35 6v8a1 1 0 0 0 1 1h8M13 6v8a1 1 0 0 1-1 1H4m31 27v-8a1 1 0 0 1 1-1h8m-31 9v-8a1 1 0 0 0-1-1H4"},null,-1)]),14,R2)}var Bf=Mp(C2,[["render",P2]]);const I2=Object.assign(Bf,{install:(o,e)=>{var t;const n=(t=e==null?void 0:e.iconPrefix)!=null?t:"";o.component(n+Bf.name,Bf)}}),L2=Wi({__name:"index",props:{enableKeyboard:{type:Boolean,default:!0},targetSelector:{default:""}},emits:["change","error"],setup(o,{expose:e,emit:t}){const n=o,i=t,s=Nr(!1),r=()=>{const f=document;return!!(document.fullscreenEnabled||f.webkitFullscreenEnabled||f.mozFullScreenEnabled||f.msFullscreenEnabled)},a=()=>n.targetSelector&&document.querySelector(n.targetSelector)||document.documentElement,l=async()=>{const f=a();try{f.requestFullscreen?await f.requestFullscreen():f.webkitRequestFullscreen?await f.webkitRequestFullscreen():f.mozRequestFullScreen?await f.mozRequestFullScreen():f.msRequestFullscreen&&await f.msRequestFullscreen()}catch(p){console.error("进入全屏失败:",p),i("error",p)}},c=async()=>{const f=document;try{document.exitFullscreen?await document.exitFullscreen():f.webkitExitFullscreen?await f.webkitExitFullscreen():f.mozCancelFullScreen?await f.mozCancelFullScreen():f.msExitFullscreen&&await f.msExitFullscreen()}catch(p){console.error("退出全屏失败:",p),i("error",p)}},h=async()=>{if(!r()){console.warn("当前浏览器不支持全屏功能");return}s.value?await c():await l()},u=()=>{const f=document,p=!!(document.fullscreenElement||f.webkitFullscreenElement||f.mozFullScreenElement||f.msFullscreenElement);s.value=p,i("change",p)},d=f=>{n.enableKeyboard&&f.key==="F11"&&(f.preventDefault(),h())};return ou(()=>{document.addEventListener("fullscreenchange",u),document.addEventListener("webkitfullscreenchange",u),document.addEventListener("mozfullscreenchange",u),document.addEventListener("MSFullscreenChange",u),n.enableKeyboard&&document.addEventListener("keydown",d)}),hx(()=>{document.removeEventListener("fullscreenchange",u),document.removeEventListener("webkitfullscreenchange",u),document.removeEventListener("mozfullscreenchange",u),document.removeEventListener("MSFullscreenChange",u),n.enableKeyboard&&document.removeEventListener("keydown",d)}),e({isFullscreen:s,enterFullscreen:l,exitFullscreen:c,handleFullscreen:h}),(f,p)=>{const m=cn("a-button"),g=cn("a-tooltip");return Un(),Ya(g,{content:s.value?"退出全屏":"全屏"},{default:lt(()=>[qe(m,{type:"text",shape:"circle",onClick:h,disabled:!r()},{icon:lt(()=>[s.value?(Un(),Ya(ki(I2),{key:0})):(Un(),Ya(ki(YM),{key:1}))]),_:1},8,["disabled"])]),_:1},8,["content"])}}}),NM=cx("sider",()=>{const o=Nr(!1),e=Nr(null),t=Wr(()=>e.value!==null);return{siderVisible:o,activeSiderPanel:e,hasActivePanel:t,isPanelActive:r=>e.value===r,toggleSiderPanel:r=>{e.value===r?(o.value=!1,e.value=null):(o.value=!0,e.value=r)},closeSider:()=>{o.value=!1,e.value=null}}}),D2={class:"header-container"},U2={class:"header-left"},O2={class:"header-right"},N2=Wi({__name:"index",setup(o){const e=NM(),t=()=>{e.toggleSiderPanel("topoLines")},n=()=>{console.log("搜索")},i=()=>{console.log("设置")},s=a=>{console.log("全屏状态变化:",a)},r=a=>{console.error("全屏操作失败:",a)};return(a,l)=>{const c=cn("a-button"),h=cn("a-button-group"),u=cn("a-tooltip"),d=cn("a-doption"),f=cn("a-dropdown");return Un(),ms("div",D2,[Dt("div",U2,[qe(h,null,{default:lt(()=>[qe(c,{type:"text",class:au({active:ki(e).activeSiderPanel==="topoLines"}),onClick:t},{default:lt(()=>l[0]||(l[0]=[Io(" 地形等高线 ")])),_:1},8,["class"])]),_:1})]),Dt("div",O2,[qe(u,{content:"搜索"},{default:lt(()=>[qe(c,{type:"text",shape:"circle",onClick:n},{icon:lt(()=>[qe(ki($M))]),_:1})]),_:1}),qe(L2,{onChange:s,onError:r}),qe(u,{content:"设置"},{default:lt(()=>[qe(c,{type:"text",shape:"circle",onClick:i},{icon:lt(()=>[qe(ki(b2))]),_:1})]),_:1}),qe(f,null,{content:lt(()=>[qe(d,null,{default:lt(()=>l[1]||(l[1]=[Io("个人信息")])),_:1}),qe(d,null,{default:lt(()=>l[2]||(l[2]=[Io("偏好设置")])),_:1}),qe(d,null,{default:lt(()=>l[3]||(l[3]=[Io("退出登录")])),_:1})]),default:lt(()=>[qe(c,{type:"text",shape:"circle"},{icon:lt(()=>[qe(ki(A2))]),_:1})]),_:1})])])}}}),F2=El(N2,[["__scopeId","data-v-899b6bdb"]]),B2={class:"topo-lines-panel"},k2={class:"color-input-wrapper"},z2={class:"color-input-wrapper"},V2={class:"panel-actions"},H2=Wi({__name:"index",setup(o){const e=Nm(),t=ZM({display:!1,projection:"ellipsoid",thickness:1,topoColor:"#ffffff",topoOpacity:.5,cartoColor:"#ffffff",cartoOpacity:.5});jM(()=>e.isInitialized,u=>{u&&n()});const n=()=>{const u=e.getViewer();if(!u||!e.isViewerReady()){console.warn("Viewer 未准备就绪");return}try{t.display=u.displayTopoLines,t.thickness=u.topoLinesThickness,u.topoLineTopoColor&&(t.topoColor=`#${u.topoLineTopoColor.getHexString()}`),u.topoLineCartoColor&&(t.cartoColor=`#${u.topoLineCartoColor.getHexString()}`),t.topoOpacity=u.topoLinesOpacity||.5,t.cartoOpacity=u.topoLinesCartoOpacity}catch(d){console.error("从 Viewer 同步配置失败:",d),qi.error("读取配置失败")}},i=()=>{const u=e.getViewer();if(!(!u||!e.isViewerReady()))try{u.displayTopoLines=t.display}catch(d){console.error("设置显示状态失败:",d),qi.error("设置显示状态失败")}},s=()=>{const u=e.getViewer();if(!(!u||!e.isViewerReady()))try{u.topoLinesThickness=t.thickness}catch(d){console.error("设置线条粗细失败:",d),qi.error("设置线条粗细失败")}},r=()=>{const u=e.getViewer();if(!(!u||!e.isViewerReady()))try{u.topoLineTopoColor=new le(t.topoColor)}catch(d){console.error("设置等高线颜色失败:",d),qi.error("设置等高线颜色失败")}},a=()=>{const u=e.getViewer();if(!(!u||!e.isViewerReady()))try{u.topoLinesOpacity=t.topoOpacity}catch(d){console.error("设置等高线透明度失败:",d),qi.error("设置等高线透明度失败")}},l=()=>{const u=e.getViewer();if(!(!u||!e.isViewerReady()))try{u.topoLineCartoColor=new le(t.cartoColor)}catch(d){console.error("设置坐标网格颜色失败:",d),qi.error("设置坐标网格颜色失败")}},c=()=>{const u=e.getViewer();!u||!e.isViewerReady()||(u.topoLinesCartoOpacity=t.cartoOpacity)},h=()=>{const u=e.getViewer();if(!u||!e.isViewerReady()){qi.warning("Viewer 未准备就绪");return}try{u.displayTopoLines=!1,u.topoLinesThickness=1,u.topoLineTopoColor=new le("#ffffff"),u.topoLineCartoColor=new le("#ffffff"),u.topoLinesOpacity=.5,u.topoLinesCartoOpacity=.5,n(),qi.success("设置已重置")}catch(d){console.error("重置设置失败:",d),qi.error("重置设置失败")}};return ou(()=>{e.isViewerReady()&&n()}),(u,d)=>{const f=cn("a-switch"),p=cn("a-form-item"),m=cn("a-slider"),g=cn("a-form"),_=cn("a-card"),y=cn("a-input"),v=cn("a-button");return Un(),ms("div",B2,[qe(_,{title:"基础设置",bordered:!1},{default:lt(()=>[qe(g,{layout:"vertical",model:t},{default:lt(()=>[qe(p,{label:"显示等高线"},{default:lt(()=>[qe(f,{modelValue:t.display,"onUpdate:modelValue":d[0]||(d[0]=x=>t.display=x),onChange:i},null,8,["modelValue"])]),_:1}),qe(p,{label:"线条粗细"},{default:lt(()=>[qe(m,{modelValue:t.thickness,"onUpdate:modelValue":d[1]||(d[1]=x=>t.thickness=x),min:1,max:10,"show-tooltip":!0,onChange:s},null,8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1}),qe(_,{title:"等高线样式",bordered:!1,class:"mt-16"},{default:lt(()=>[qe(g,{layout:"vertical"},{default:lt(()=>[qe(p,{label:"颜色"},{default:lt(()=>[Dt("div",k2,[Wm(Dt("input",{type:"color","onUpdate:modelValue":d[2]||(d[2]=x=>t.topoColor=x),onChange:r,class:"color-picker"},null,544),[[Xm,t.topoColor]]),qe(y,{modelValue:t.topoColor,"onUpdate:modelValue":d[3]||(d[3]=x=>t.topoColor=x),placeholder:"#ffffff",onChange:r,class:"color-text"},null,8,["modelValue"])])]),_:1}),qe(p,{label:"透明度"},{default:lt(()=>[qe(m,{modelValue:t.topoOpacity,"onUpdate:modelValue":d[4]||(d[4]=x=>t.topoOpacity=x),min:0,max:1,step:.1,"show-tooltip":!0,"format-tooltip":x=>`${Math.round(x*100)}%`,onChange:a},null,8,["modelValue","format-tooltip"])]),_:1})]),_:1})]),_:1}),qe(_,{title:"坐标网格样式",bordered:!1,class:"mt-16"},{default:lt(()=>[qe(g,{layout:"vertical"},{default:lt(()=>[qe(p,{label:"颜色"},{default:lt(()=>[Dt("div",z2,[Wm(Dt("input",{type:"color","onUpdate:modelValue":d[5]||(d[5]=x=>t.cartoColor=x),onChange:l,class:"color-picker"},null,544),[[Xm,t.cartoColor]]),qe(y,{modelValue:t.cartoColor,"onUpdate:modelValue":d[6]||(d[6]=x=>t.cartoColor=x),placeholder:"#ffffff",onChange:l,class:"color-text"},null,8,["modelValue"])])]),_:1}),qe(p,{label:"透明度"},{default:lt(()=>[qe(m,{modelValue:t.cartoOpacity,"onUpdate:modelValue":d[7]||(d[7]=x=>t.cartoOpacity=x),min:0,max:1,step:.1,"show-tooltip":!0,"format-tooltip":x=>`${Math.round(x*100)}%`,onChange:c},null,8,["modelValue","format-tooltip"])]),_:1})]),_:1})]),_:1}),Dt("div",V2,[qe(v,{type:"primary",onClick:n,disabled:!ki(e).isViewerReady()},{default:lt(()=>d[8]||(d[8]=[Io(" 刷新配置 ")])),_:1},8,["disabled"]),qe(v,{onClick:h},{default:lt(()=>d[9]||(d[9]=[Io(" 重置 ")])),_:1})])])}}}),G2=El(H2,[["__scopeId","data-v-ab539fea"]]),W2={key:0,class:"sider-container"},X2={class:"sider-header"},q2={class:"sider-title"},Y2={class:"sider-content"},$2={key:1,class:"empty-panel"},Z2=Wi({__name:"index",setup(o){const e=NM(),t={topoLines:G2},n={topoLines:"地形等高线设置",layers:"图层管理",tools:"测量工具",settings:"系统设置"},i=()=>e.activeSiderPanel?t[e.activeSiderPanel]:null,s=()=>e.activeSiderPanel&&n[e.activeSiderPanel]||"";return(r,a)=>{const l=cn("a-button"),c=cn("a-empty");return ki(e).siderVisible?(Un(),ms("div",W2,[Dt("div",X2,[Dt("h3",q2,th(s()),1),qe(l,{type:"text",shape:"circle",size:"small",onClick:a[0]||(a[0]=h=>ki(e).closeSider())},{icon:lt(()=>[qe(ki(JM))]),_:1})]),Dt("div",Y2,[i()?(Un(),Ya(QM(i()),{key:0})):(Un(),ms("div",$2,[qe(c,{description:"暂无内容"})]))])])):KM("",!0)}}}),j2=El(Z2,[["__scopeId","data-v-6e7fc200"]]),eD=Wi({__name:"index",setup(o){return(e,t)=>(Un(),Ya(XM,null,{header:lt(()=>[qe(F2)]),sider:lt(()=>[qe(j2)]),content:lt(()=>[qe(y2)]),_:1}))}});export{eD as default};
